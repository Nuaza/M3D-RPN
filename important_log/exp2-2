2D Car目前的SOTA，easy: 0.9534, mod: 0.8659, hard: 0.7655
[INFO]: 2024-04-14 21:14:32,147 ==开始处理数据集==
[INFO]: 2024-04-14 21:14:32,148 命中imdb缓存.
[INFO]: 2024-04-14 21:14:33,701 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-14 21:14:33,701 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-14 21:14:36,315 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-14 21:14:36,315 ==数据集处理完毕==
[INFO]: 2024-04-14 21:14:39,319 ==开始生成anchors==
[INFO]: 2024-04-14 21:14:39,319 ==anchors生成完毕==
[INFO]: 2024-04-14 21:14:42,323 ==开始计算bbox参数==
[INFO]: 2024-04-14 21:14:42,323 命中bbox的回归均值缓存
[INFO]: 2024-04-14 21:14:42,324 命中bbox的回归标准差缓存
[INFO]: 2024-04-14 21:14:42,324 ==bbox参数计算完毕==
[INFO]: 2024-04-14 21:14:50,362 设置保存完成
[INFO]: 2024-04-14 21:14:53,365 训练配置一览
[INFO]: 2024-04-14 21:14:55,373 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               114514                                  
    cuda_seed:              114514                                  
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[1.5, -4.5, 13.5, 19.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-4.5, -4.5, 19.5, 19.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-10.5, -4.5, 25.5, 19.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-0.021, -7.541, 15.021, 22.541,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-7.541, -7.541, 22.541, 22.541,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-15.062, -7.541, 30.062, 22.541,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-1.927, -11.354, 16.927, 26.354,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-11.354, -11.354, 26.354, 26.354,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-20.781, -11.354, 35.781, 26.354,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-4.316, -16.132, 19.316, 31.132,
                             28.771, 0.613, 1.76, 0.98, 0.067],
                            [-16.132, -16.132, 31.132, 31.132,
                             28.331, 1.543, 1.592, 3.66, -0.811],
                            [-27.948, -16.132, 42.948, 31.132,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-7.311, -22.122, 22.311, 37.122,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-22.122, -22.122, 37.122, 37.122,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-36.933, -22.122, 51.933, 37.122,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-11.065, -29.629, 26.065, 44.629,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-29.629, -29.629, 44.629, 44.629,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-48.194, -29.629, 63.194, 44.629,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-15.77, -39.04, 30.77, 54.04, 15.035,
                             0.625, 1.744, 0.917, 0.41],
                            [-39.04, -39.04, 54.04, 54.04, 15.346,
                             1.29, 1.659, 3.083, -0.275],
                            [-62.31, -39.04, 77.31, 54.04, 16.326,
                             1.613, 1.527, 3.934, 0.268],
                            [-21.668, -50.836, 36.668, 65.836,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-50.836, -50.836, 65.836, 65.836,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-80.003, -50.836, 95.003, 65.836,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-29.06, -65.621, 44.06, 80.621, 9.932,
                             0.61, 1.771, 0.934, 0.486],
                            [-65.621, -65.621, 80.621, 80.621,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-102.181, -65.621, 117.181, 80.621,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-38.327, -84.153, 53.327, 99.153,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-84.153, -84.153, 99.153, 99.153,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-129.98, -84.153, 144.98, 99.153,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-49.941, -107.383, 64.941, 122.383,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-107.383, -107.383, 122.383, 122.383,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-164.824, -107.383, 179.824, 122.383,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-64.5, -136.5, 79.5, 151.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-136.5, -136.5, 151.5, 151.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-208.5, -136.5, 223.5, 151.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.001, 0.002, 0.063, -0.093, 0.011,
                             -0.066, 0.155, 0.058, -0.021, 0.067,
                             -0.007]]
    bbox_stds:              [[0.139, 0.125, 0.247, 0.238, 0.163,
                             0.132, 3.611, 0.383, 0.102, 0.502,
                             1.854]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-14 21:15:01,208 装载完成
[INFO]: 2024-04-14 21:15:04,212 神经网络结构一览
[INFO]: 2024-04-14 21:15:06,214 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (CDF): Sequential(
      (0): RefConv(
        (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
      )
    )
    (prop_feats): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(1024, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): RefConv(
        (convmap): Conv2d(1048576, 1048576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1048576, bias=False)
      )
      (4): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-14 21:15:06,243 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-14 21:18:22,842 iter: 250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5501, cls: 0.0932, iou: 0.1899), misc (ry: 0.58, z: 1.23), dt: 0.79, eta: 10.9h
[INFO]: 2024-04-14 21:21:34,170 iter: 500, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.7430, cls: 0.1259, iou: 0.2175), misc (ry: 0.74, z: 1.26), dt: 0.78, eta: 10.7h
[INFO]: 2024-04-14 21:24:44,473 iter: 750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.6290, cls: 0.0946, iou: 0.1938), misc (ry: 0.72, z: 1.08), dt: 0.77, eta: 10.6h
[INFO]: 2024-04-14 21:27:51,505 iter: 1000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.6125, cls: 0.1032, iou: 0.1955), misc (ry: 0.63, z: 1.11), dt: 0.77, eta: 10.4h
[INFO]: 2024-04-14 21:30:56,006 iter: 1250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.5158, cls: 0.0811, iou: 0.1814), misc (ry: 0.63, z: 0.93), dt: 0.76, eta: 10.3h
[INFO]: 2024-04-14 21:34:08,451 iter: 1500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4743, cls: 0.0789, iou: 0.1754), misc (ry: 0.52, z: 0.93), dt: 0.76, eta: 10.3h
[INFO]: 2024-04-14 21:37:21,747 iter: 1750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.4834, cls: 0.0712, iou: 0.1717), misc (ry: 0.54, z: 0.99), dt: 0.76, eta: 10.2h
[INFO]: 2024-04-14 21:40:31,268 iter: 2000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4345, cls: 0.0758, iou: 0.1735), misc (ry: 0.46, z: 0.87), dt: 0.76, eta: 10.2h
[INFO]: 2024-04-14 21:43:44,211 iter: 2250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4298, cls: 0.0734, iou: 0.1656), misc (ry: 0.47, z: 0.94), dt: 0.76, eta: 10.1h
[INFO]: 2024-04-14 21:46:57,187 iter: 2500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3929, cls: 0.0688, iou: 0.1612), misc (ry: 0.42, z: 0.92), dt: 0.76, eta: 10.1h
[INFO]: 2024-04-14 21:50:10,027 iter: 2750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3798, cls: 0.0633, iou: 0.1622), misc (ry: 0.45, z: 0.79), dt: 0.77, eta: 10.0h
[INFO]: 2024-04-14 21:53:20,674 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3839, cls: 0.0677, iou: 0.1601), misc (ry: 0.43, z: 0.81), dt: 0.76, eta: 10.0h
[INFO]: 2024-04-14 21:56:32,375 iter: 3250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3921, cls: 0.0752, iou: 0.1642), misc (ry: 0.41, z: 0.95), dt: 0.77, eta: 9.9h
[INFO]: 2024-04-14 21:59:41,222 iter: 3500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.3722, cls: 0.0584, iou: 0.1600), misc (ry: 0.43, z: 0.93), dt: 0.76, eta: 9.9h
[INFO]: 2024-04-14 22:02:52,586 iter: 3750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3234, cls: 0.0554, iou: 0.1485), misc (ry: 0.37, z: 0.73), dt: 0.76, eta: 9.8h
[INFO]: 2024-04-14 22:06:01,387 iter: 4000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3735, cls: 0.0629, iou: 0.1573), misc (ry: 0.48, z: 0.77), dt: 0.76, eta: 9.8h
[INFO]: 2024-04-14 22:09:06,897 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3022, cls: 0.0522, iou: 0.1472), misc (ry: 0.36, z: 0.75), dt: 0.76, eta: 9.7h
[INFO]: 2024-04-14 22:12:16,564 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3173, cls: 0.0560, iou: 0.1449), misc (ry: 0.42, z: 0.73), dt: 0.76, eta: 9.6h
[INFO]: 2024-04-14 22:15:23,646 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2946, cls: 0.0518, iou: 0.1438), misc (ry: 0.34, z: 0.79), dt: 0.76, eta: 9.6h
[INFO]: 2024-04-14 22:18:29,792 iter: 5000, acc (bg: 1.00, fg: 0.98, iou: 0.87), loss (bbox_3d: 0.2398, cls: 0.0475, iou: 0.1375), misc (ry: 0.29, z: 0.66), dt: 0.76, eta: 9.5h
[INFO]: 2024-04-14 22:21:39,610 iter: 5250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2434, cls: 0.0465, iou: 0.1321), misc (ry: 0.30, z: 0.67), dt: 0.76, eta: 9.5h
[INFO]: 2024-04-14 22:24:53,636 iter: 5500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2412, cls: 0.0453, iou: 0.1339), misc (ry: 0.31, z: 0.66), dt: 0.76, eta: 9.4h
[INFO]: 2024-04-14 22:28:02,660 iter: 5750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2217, cls: 0.0451, iou: 0.1328), misc (ry: 0.31, z: 0.60), dt: 0.76, eta: 9.4h
[INFO]: 2024-04-14 22:31:14,549 iter: 6000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2182, cls: 0.0464, iou: 0.1314), misc (ry: 0.30, z: 0.61), dt: 0.76, eta: 9.3h
[INFO]: 2024-04-14 22:34:25,312 iter: 6250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2250, cls: 0.0455, iou: 0.1319), misc (ry: 0.30, z: 0.66), dt: 0.76, eta: 9.3h
[INFO]: 2024-04-14 22:37:33,868 iter: 6500, acc (bg: 1.00, fg: 0.98, iou: 0.87), loss (bbox_3d: 0.2603, cls: 0.0444, iou: 0.1389), misc (ry: 0.35, z: 0.76), dt: 0.76, eta: 9.2h
[INFO]: 2024-04-14 22:40:43,596 iter: 6750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2200, cls: 0.0461, iou: 0.1302), misc (ry: 0.29, z: 0.64), dt: 0.76, eta: 9.1h
[INFO]: 2024-04-14 22:43:52,558 iter: 7000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2119, cls: 0.0401, iou: 0.1300), misc (ry: 0.25, z: 0.63), dt: 0.76, eta: 9.1h
[INFO]: 2024-04-14 22:47:03,402 iter: 7250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1949, cls: 0.0425, iou: 0.1239), misc (ry: 0.27, z: 0.57), dt: 0.76, eta: 9.0h
[INFO]: 2024-04-14 22:50:12,239 iter: 7500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1966, cls: 0.0403, iou: 0.1240), misc (ry: 0.28, z: 0.59), dt: 0.76, eta: 9.0h
[INFO]: 2024-04-14 22:53:20,952 iter: 7750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1971, cls: 0.0407, iou: 0.1212), misc (ry: 0.26, z: 0.60), dt: 0.76, eta: 8.9h
[INFO]: 2024-04-14 22:56:29,257 iter: 8000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2326, cls: 0.0466, iou: 0.1287), misc (ry: 0.31, z: 0.62), dt: 0.76, eta: 8.9h
[INFO]: 2024-04-14 22:59:38,021 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2338, cls: 0.0473, iou: 0.1328), misc (ry: 0.31, z: 0.65), dt: 0.76, eta: 8.8h
[INFO]: 2024-04-14 23:02:48,747 iter: 8500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2073, cls: 0.0416, iou: 0.1296), misc (ry: 0.28, z: 0.66), dt: 0.76, eta: 8.8h
[INFO]: 2024-04-14 23:05:57,619 iter: 8750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2714, cls: 0.0500, iou: 0.1407), misc (ry: 0.38, z: 0.65), dt: 0.76, eta: 8.7h
[INFO]: 2024-04-14 23:09:03,648 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3992, cls: 0.0753, iou: 0.1615), misc (ry: 0.46, z: 0.84), dt: 0.76, eta: 8.7h
[INFO]: 2024-04-14 23:12:11,065 iter: 9250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3536, cls: 0.0714, iou: 0.1572), misc (ry: 0.44, z: 0.79), dt: 0.76, eta: 8.6h
[INFO]: 2024-04-14 23:15:17,032 iter: 9500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2806, cls: 0.0579, iou: 0.1442), misc (ry: 0.37, z: 0.66), dt: 0.76, eta: 8.5h
[INFO]: 2024-04-14 23:18:23,652 iter: 9750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2644, cls: 0.0482, iou: 0.1379), misc (ry: 0.37, z: 0.66), dt: 0.76, eta: 8.5h
[INFO]: 2024-04-14 23:21:35,863 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2484, cls: 0.0477, iou: 0.1328), misc (ry: 0.37, z: 0.60), dt: 0.76, eta: 8.4h
[INFO]: 2024-04-14 23:31:52,696 test_iter 10000 2d car --> easy: 0.8692, mod: 0.8309, hard: 0.6828
[INFO]: 2024-04-14 23:31:52,697 test_iter 10000 gr car --> easy: 0.1010, mod: 0.0770, hard: 0.0566
[INFO]: 2024-04-14 23:31:52,698 test_iter 10000 3d car --> easy: 0.0511, mod: 0.0387, hard: 0.0367
[INFO]: 2024-04-14 23:31:52,699 test_iter 10000 2d pedestrian --> easy: 0.6455, mod: 0.5620, hard: 0.4807
[INFO]: 2024-04-14 23:31:52,699 test_iter 10000 gr pedestrian --> easy: 0.0306, mod: 0.0306, hard: 0.0191
[INFO]: 2024-04-14 23:31:52,700 test_iter 10000 3d pedestrian --> easy: 0.0259, mod: 0.0195, hard: 0.0154
[INFO]: 2024-04-14 23:31:52,700 test_iter 10000 2d cyclist --> easy: 0.5519, mod: 0.3738, hard: 0.3691
[INFO]: 2024-04-14 23:31:52,701 test_iter 10000 gr cyclist --> easy: 0.0152, mod: 0.0152, hard: 0.0152
[INFO]: 2024-04-14 23:31:52,701 test_iter 10000 3d cyclist --> easy: 0.0152, mod: 0.0152, hard: 0.0152
[INFO]: 2024-04-14 23:35:01,323 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2031, cls: 0.0442, iou: 0.1294), misc (ry: 0.30, z: 0.61), dt: 0.82, eta: 9.0h
[INFO]: 2024-04-14 23:38:10,665 iter: 10500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2497, cls: 0.0448, iou: 0.1355), misc (ry: 0.38, z: 0.58), dt: 0.82, eta: 9.0h
[INFO]: 2024-04-14 23:41:20,293 iter: 10750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3063, cls: 0.0545, iou: 0.1420), misc (ry: 0.48, z: 0.63), dt: 0.82, eta: 8.9h
[INFO]: 2024-04-14 23:44:26,567 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1963, cls: 0.0408, iou: 0.1192), misc (ry: 0.29, z: 0.59), dt: 0.81, eta: 8.8h
[INFO]: 2024-04-14 23:47:34,661 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2200, cls: 0.0439, iou: 0.1288), misc (ry: 0.33, z: 0.62), dt: 0.81, eta: 8.8h
[INFO]: 2024-04-14 23:50:42,602 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2085, cls: 0.0440, iou: 0.1249), misc (ry: 0.31, z: 0.62), dt: 0.81, eta: 8.7h
[INFO]: 2024-04-14 23:53:49,241 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2004, cls: 0.0397, iou: 0.1242), misc (ry: 0.31, z: 0.58), dt: 0.81, eta: 8.6h
[INFO]: 2024-04-14 23:57:00,402 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1949, cls: 0.0411, iou: 0.1222), misc (ry: 0.32, z: 0.54), dt: 0.81, eta: 8.5h
[INFO]: 2024-04-15 00:00:07,417 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1690, cls: 0.0375, iou: 0.1115), misc (ry: 0.25, z: 0.55), dt: 0.81, eta: 8.5h
[INFO]: 2024-04-15 00:03:15,739 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2148, cls: 0.0428, iou: 0.1216), misc (ry: 0.31, z: 0.63), dt: 0.81, eta: 8.4h
[INFO]: 2024-04-15 00:06:21,759 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1627, cls: 0.0412, iou: 0.1135), misc (ry: 0.22, z: 0.56), dt: 0.81, eta: 8.3h
[INFO]: 2024-04-15 00:09:29,742 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1814, cls: 0.0387, iou: 0.1164), misc (ry: 0.29, z: 0.53), dt: 0.80, eta: 8.3h
[INFO]: 2024-04-15 00:12:36,605 iter: 13250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1359, cls: 0.0329, iou: 0.1102), misc (ry: 0.22, z: 0.47), dt: 0.80, eta: 8.2h
[INFO]: 2024-04-15 00:15:46,255 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1612, cls: 0.0372, iou: 0.1129), misc (ry: 0.23, z: 0.53), dt: 0.80, eta: 8.1h
[INFO]: 2024-04-15 00:18:55,106 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1791, cls: 0.0396, iou: 0.1175), misc (ry: 0.28, z: 0.52), dt: 0.80, eta: 8.1h
[INFO]: 2024-04-15 00:22:00,627 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1579, cls: 0.0370, iou: 0.1139), misc (ry: 0.23, z: 0.56), dt: 0.80, eta: 8.0h
[INFO]: 2024-04-15 00:25:09,503 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1621, cls: 0.0373, iou: 0.1137), misc (ry: 0.25, z: 0.52), dt: 0.80, eta: 7.9h
[INFO]: 2024-04-15 00:28:15,103 iter: 14500, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1378, cls: 0.0332, iou: 0.1083), misc (ry: 0.22, z: 0.48), dt: 0.80, eta: 7.9h
[INFO]: 2024-04-15 00:31:20,033 iter: 14750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1617, cls: 0.0321, iou: 0.1094), misc (ry: 0.23, z: 0.60), dt: 0.80, eta: 7.8h
[INFO]: 2024-04-15 00:34:26,334 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1676, cls: 0.0353, iou: 0.1137), misc (ry: 0.26, z: 0.54), dt: 0.80, eta: 7.8h
[INFO]: 2024-04-15 00:37:30,817 iter: 15250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1387, cls: 0.0343, iou: 0.1074), misc (ry: 0.20, z: 0.52), dt: 0.80, eta: 7.7h
[INFO]: 2024-04-15 00:40:40,531 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1477, cls: 0.0355, iou: 0.1122), misc (ry: 0.23, z: 0.56), dt: 0.80, eta: 7.6h
[INFO]: 2024-04-15 00:43:50,198 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1248, cls: 0.0320, iou: 0.1045), misc (ry: 0.20, z: 0.49), dt: 0.80, eta: 7.6h
[INFO]: 2024-04-15 00:46:58,416 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1512, cls: 0.0322, iou: 0.1074), misc (ry: 0.25, z: 0.49), dt: 0.79, eta: 7.5h
[INFO]: 2024-04-15 00:50:07,007 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1479, cls: 0.0361, iou: 0.1086), misc (ry: 0.22, z: 0.50), dt: 0.79, eta: 7.4h
[INFO]: 2024-04-15 00:53:13,925 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1577, cls: 0.0356, iou: 0.1093), misc (ry: 0.27, z: 0.53), dt: 0.79, eta: 7.4h
[INFO]: 2024-04-15 00:56:22,353 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1157, cls: 0.0322, iou: 0.0997), misc (ry: 0.20, z: 0.47), dt: 0.79, eta: 7.3h
[INFO]: 2024-04-15 00:59:31,644 iter: 17000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1105, cls: 0.0333, iou: 0.1005), misc (ry: 0.21, z: 0.39), dt: 0.79, eta: 7.3h
[INFO]: 2024-04-15 01:02:40,552 iter: 17250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1079, cls: 0.0306, iou: 0.1003), misc (ry: 0.18, z: 0.42), dt: 0.79, eta: 7.2h
[INFO]: 2024-04-15 01:05:47,532 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1158, cls: 0.0314, iou: 0.1023), misc (ry: 0.21, z: 0.46), dt: 0.79, eta: 7.1h
[INFO]: 2024-04-15 01:08:55,946 iter: 17750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1022, cls: 0.0288, iou: 0.0972), misc (ry: 0.17, z: 0.41), dt: 0.79, eta: 7.1h
[INFO]: 2024-04-15 01:12:02,465 iter: 18000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1190, cls: 0.0325, iou: 0.1021), misc (ry: 0.18, z: 0.52), dt: 0.79, eta: 7.0h
[INFO]: 2024-04-15 01:15:06,030 iter: 18250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1163, cls: 0.0314, iou: 0.0996), misc (ry: 0.18, z: 0.45), dt: 0.79, eta: 7.0h
[INFO]: 2024-04-15 01:18:09,851 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1159, cls: 0.0323, iou: 0.0998), misc (ry: 0.21, z: 0.42), dt: 0.79, eta: 6.9h
[INFO]: 2024-04-15 01:21:11,895 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1209, cls: 0.0335, iou: 0.1039), misc (ry: 0.23, z: 0.43), dt: 0.79, eta: 6.8h
[INFO]: 2024-04-15 01:24:17,380 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1042, cls: 0.0290, iou: 0.0948), misc (ry: 0.18, z: 0.43), dt: 0.79, eta: 6.8h
[INFO]: 2024-04-15 01:27:21,630 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1000, cls: 0.0320, iou: 0.0941), misc (ry: 0.18, z: 0.41), dt: 0.79, eta: 6.7h
[INFO]: 2024-04-15 01:30:23,126 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0898, cls: 0.0283, iou: 0.0911), misc (ry: 0.17, z: 0.40), dt: 0.79, eta: 6.7h
[INFO]: 2024-04-15 01:33:27,426 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0877, cls: 0.0280, iou: 0.0930), misc (ry: 0.17, z: 0.40), dt: 0.78, eta: 6.6h
[INFO]: 2024-04-15 01:36:30,660 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0857, cls: 0.0272, iou: 0.0876), misc (ry: 0.15, z: 0.36), dt: 0.78, eta: 6.5h
[INFO]: 2024-04-15 01:46:51,814 test_iter 20000 2d car --> easy: 0.9534, mod: 0.8659, hard: 0.7655
[INFO]: 2024-04-15 01:46:51,815 test_iter 20000 gr car --> easy: 0.1947, mod: 0.1728, hard: 0.1573
[INFO]: 2024-04-15 01:46:51,815 test_iter 20000 3d car --> easy: 0.1382, mod: 0.1491, hard: 0.1257
[INFO]: 2024-04-15 01:46:51,816 test_iter 20000 2d pedestrian --> easy: 0.6576, mod: 0.5782, hard: 0.4973
[INFO]: 2024-04-15 01:46:51,816 test_iter 20000 gr pedestrian --> easy: 0.0470, mod: 0.0440, hard: 0.0364
[INFO]: 2024-04-15 01:46:51,817 test_iter 20000 3d pedestrian --> easy: 0.0420, mod: 0.0359, hard: 0.0355
[INFO]: 2024-04-15 01:46:51,817 test_iter 20000 2d cyclist --> easy: 0.7227, mod: 0.4760, hard: 0.4148
[INFO]: 2024-04-15 01:46:51,818 test_iter 20000 gr cyclist --> easy: 0.0274, mod: 0.0182, hard: 0.0182
[INFO]: 2024-04-15 01:46:51,818 test_iter 20000 3d cyclist --> easy: 0.0236, mod: 0.0182, hard: 0.0182
[INFO]: 2024-04-15 01:49:58,693 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0295, iou: 0.0905), misc (ry: 0.15, z: 0.38), dt: 0.81, eta: 6.7h
[INFO]: 2024-04-15 01:53:04,869 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0870, cls: 0.0283, iou: 0.0892), misc (ry: 0.15, z: 0.39), dt: 0.81, eta: 6.7h
[INFO]: 2024-04-15 01:56:06,348 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0849, cls: 0.0278, iou: 0.0900), misc (ry: 0.17, z: 0.37), dt: 0.81, eta: 6.6h
[INFO]: 2024-04-15 01:59:09,568 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0810, cls: 0.0273, iou: 0.0878), misc (ry: 0.16, z: 0.36), dt: 0.81, eta: 6.5h
[INFO]: 2024-04-15 02:02:12,918 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0813, cls: 0.0268, iou: 0.0872), misc (ry: 0.16, z: 0.38), dt: 0.81, eta: 6.5h
[INFO]: 2024-04-15 02:05:19,226 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0787, cls: 0.0273, iou: 0.0873), misc (ry: 0.16, z: 0.39), dt: 0.81, eta: 6.4h
[INFO]: 2024-04-15 02:08:22,124 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0851, cls: 0.0269, iou: 0.0885), misc (ry: 0.17, z: 0.41), dt: 0.81, eta: 6.3h
[INFO]: 2024-04-15 02:11:26,425 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0775, cls: 0.0282, iou: 0.0852), misc (ry: 0.15, z: 0.37), dt: 0.81, eta: 6.3h
[INFO]: 2024-04-15 02:14:29,943 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0746, cls: 0.0282, iou: 0.0870), misc (ry: 0.15, z: 0.34), dt: 0.81, eta: 6.2h
[INFO]: 2024-04-15 02:17:33,403 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0280, iou: 0.0888), misc (ry: 0.16, z: 0.38), dt: 0.81, eta: 6.2h
[INFO]: 2024-04-15 02:20:38,443 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0850, cls: 0.0269, iou: 0.0859), misc (ry: 0.16, z: 0.39), dt: 0.81, eta: 6.1h
[INFO]: 2024-04-15 02:23:43,285 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0773, cls: 0.0263, iou: 0.0847), misc (ry: 0.16, z: 0.37), dt: 0.81, eta: 6.0h
[INFO]: 2024-04-15 02:26:49,505 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0718, cls: 0.0261, iou: 0.0822), misc (ry: 0.15, z: 0.35), dt: 0.80, eta: 6.0h
[INFO]: 2024-04-15 02:29:57,516 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0801, cls: 0.0285, iou: 0.0863), misc (ry: 0.15, z: 0.39), dt: 0.80, eta: 5.9h
[INFO]: 2024-04-15 02:33:03,276 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0268, iou: 0.0830), misc (ry: 0.15, z: 0.39), dt: 0.80, eta: 5.9h
[INFO]: 2024-04-15 02:36:09,638 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0729, cls: 0.0255, iou: 0.0803), misc (ry: 0.16, z: 0.35), dt: 0.80, eta: 5.8h
[INFO]: 2024-04-15 02:39:15,749 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0783, cls: 0.0260, iou: 0.0841), misc (ry: 0.15, z: 0.38), dt: 0.80, eta: 5.7h
[INFO]: 2024-04-15 02:42:22,710 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0752, cls: 0.0258, iou: 0.0824), misc (ry: 0.15, z: 0.35), dt: 0.80, eta: 5.7h
[INFO]: 2024-04-15 02:45:31,965 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0747, cls: 0.0278, iou: 0.0835), misc (ry: 0.15, z: 0.35), dt: 0.80, eta: 5.6h
[INFO]: 2024-04-15 02:48:39,218 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0751, cls: 0.0246, iou: 0.0793), misc (ry: 0.14, z: 0.44), dt: 0.80, eta: 5.6h
[INFO]: 2024-04-15 02:51:50,573 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0688, cls: 0.0247, iou: 0.0809), misc (ry: 0.14, z: 0.37), dt: 0.80, eta: 5.5h
[INFO]: 2024-04-15 02:55:00,249 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0677, cls: 0.0257, iou: 0.0803), misc (ry: 0.14, z: 0.33), dt: 0.80, eta: 5.4h
[INFO]: 2024-04-15 02:58:09,030 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0677, cls: 0.0258, iou: 0.0816), misc (ry: 0.13, z: 0.34), dt: 0.80, eta: 5.4h
[INFO]: 2024-04-15 03:01:18,605 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0627, cls: 0.0251, iou: 0.0776), misc (ry: 0.13, z: 0.31), dt: 0.80, eta: 5.3h
[INFO]: 2024-04-15 03:04:25,975 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0684, cls: 0.0251, iou: 0.0795), misc (ry: 0.13, z: 0.36), dt: 0.80, eta: 5.3h
[INFO]: 2024-04-15 03:07:36,300 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0681, cls: 0.0254, iou: 0.0783), misc (ry: 0.15, z: 0.33), dt: 0.80, eta: 5.2h
[INFO]: 2024-04-15 03:10:42,035 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0654, cls: 0.0248, iou: 0.0785), misc (ry: 0.14, z: 0.33), dt: 0.80, eta: 5.2h
[INFO]: 2024-04-15 03:13:50,744 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0696, cls: 0.0258, iou: 0.0807), misc (ry: 0.15, z: 0.34), dt: 0.80, eta: 5.1h
[INFO]: 2024-04-15 03:17:00,623 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0695, cls: 0.0254, iou: 0.0797), misc (ry: 0.15, z: 0.36), dt: 0.80, eta: 5.0h
[INFO]: 2024-04-15 03:20:12,110 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0647, cls: 0.0252, iou: 0.0786), misc (ry: 0.14, z: 0.31), dt: 0.80, eta: 5.0h
[INFO]: 2024-04-15 03:23:19,423 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0621, cls: 0.0240, iou: 0.0774), misc (ry: 0.13, z: 0.34), dt: 0.80, eta: 4.9h
[INFO]: 2024-04-15 03:26:26,488 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0703, cls: 0.0256, iou: 0.0806), misc (ry: 0.14, z: 0.35), dt: 0.80, eta: 4.9h
[INFO]: 2024-04-15 03:29:32,249 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0608, cls: 0.0230, iou: 0.0758), misc (ry: 0.14, z: 0.35), dt: 0.80, eta: 4.8h
[INFO]: 2024-04-15 03:32:40,699 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0549, cls: 0.0229, iou: 0.0751), misc (ry: 0.12, z: 0.33), dt: 0.79, eta: 4.7h
[INFO]: 2024-04-15 03:35:46,116 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0588, cls: 0.0230, iou: 0.0752), misc (ry: 0.13, z: 0.32), dt: 0.79, eta: 4.7h
[INFO]: 2024-04-15 03:38:55,966 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0246, iou: 0.0739), misc (ry: 0.14, z: 0.33), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-15 03:42:01,213 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0564, cls: 0.0221, iou: 0.0739), misc (ry: 0.13, z: 0.32), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-15 03:45:10,321 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0595, cls: 0.0233, iou: 0.0740), misc (ry: 0.14, z: 0.31), dt: 0.79, eta: 4.5h
[INFO]: 2024-04-15 03:48:20,898 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0576, cls: 0.0250, iou: 0.0720), misc (ry: 0.14, z: 0.30), dt: 0.79, eta: 4.5h
[INFO]: 2024-04-15 03:51:30,316 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0504, cls: 0.0223, iou: 0.0700), misc (ry: 0.12, z: 0.29), dt: 0.79, eta: 4.4h
[INFO]: 2024-04-15 04:01:42,857 test_iter 30000 2d car --> easy: 0.9385, mod: 0.8563, hard: 0.6938
[INFO]: 2024-04-15 04:01:42,858 test_iter 30000 gr car --> easy: 0.2245, mod: 0.1556, hard: 0.1356
[INFO]: 2024-04-15 04:01:42,859 test_iter 30000 3d car --> easy: 0.1665, mod: 0.1240, hard: 0.0962
[INFO]: 2024-04-15 04:01:42,859 test_iter 30000 2d pedestrian --> easy: 0.6724, mod: 0.5898, hard: 0.5070
[INFO]: 2024-04-15 04:01:42,860 test_iter 30000 gr pedestrian --> easy: 0.0641, mod: 0.0560, hard: 0.0533
[INFO]: 2024-04-15 04:01:42,861 test_iter 30000 3d pedestrian --> easy: 0.0502, mod: 0.0520, hard: 0.0428
[INFO]: 2024-04-15 04:01:42,861 test_iter 30000 2d cyclist --> easy: 0.7490, mod: 0.4887, hard: 0.4810
[INFO]: 2024-04-15 04:01:42,862 test_iter 30000 gr cyclist --> easy: 0.0350, mod: 0.0266, hard: 0.0261
[INFO]: 2024-04-15 04:01:42,862 test_iter 30000 3d cyclist --> easy: 0.0300, mod: 0.0182, hard: 0.0182
[INFO]: 2024-04-15 04:04:55,715 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0566, cls: 0.0244, iou: 0.0733), misc (ry: 0.13, z: 0.30), dt: 0.81, eta: 4.5h
[INFO]: 2024-04-15 04:08:03,452 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0221, iou: 0.0717), misc (ry: 0.13, z: 0.31), dt: 0.81, eta: 4.4h
[INFO]: 2024-04-15 04:11:13,309 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0233, iou: 0.0718), misc (ry: 0.13, z: 0.32), dt: 0.81, eta: 4.3h
[INFO]: 2024-04-15 04:14:24,061 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0527, cls: 0.0225, iou: 0.0716), misc (ry: 0.12, z: 0.29), dt: 0.81, eta: 4.3h
[INFO]: 2024-04-15 04:17:34,212 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0543, cls: 0.0228, iou: 0.0715), misc (ry: 0.12, z: 0.31), dt: 0.81, eta: 4.2h
[INFO]: 2024-04-15 04:20:43,880 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0543, cls: 0.0236, iou: 0.0724), misc (ry: 0.12, z: 0.31), dt: 0.81, eta: 4.2h
[INFO]: 2024-04-15 04:23:49,199 iter: 31750, acc (bg: 1.00, fg: 1.00, iou: 0.93), loss (bbox_3d: 0.0512, cls: 0.0217, iou: 0.0695), misc (ry: 0.11, z: 0.30), dt: 0.81, eta: 4.1h
[INFO]: 2024-04-15 04:26:55,270 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0535, cls: 0.0248, iou: 0.0711), misc (ry: 0.12, z: 0.31), dt: 0.81, eta: 4.0h
[INFO]: 2024-04-15 04:30:03,777 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0535, cls: 0.0240, iou: 0.0691), misc (ry: 0.13, z: 0.30), dt: 0.81, eta: 4.0h
[INFO]: 2024-04-15 04:33:11,251 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0571, cls: 0.0231, iou: 0.0695), misc (ry: 0.13, z: 0.33), dt: 0.81, eta: 3.9h
[INFO]: 2024-04-15 04:36:20,923 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0478, cls: 0.0226, iou: 0.0671), misc (ry: 0.12, z: 0.28), dt: 0.81, eta: 3.9h
[INFO]: 2024-04-15 04:39:31,417 iter: 33000, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0220, iou: 0.0662), misc (ry: 0.11, z: 0.30), dt: 0.81, eta: 3.8h
[INFO]: 2024-04-15 04:42:43,107 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0449, cls: 0.0220, iou: 0.0663), misc (ry: 0.12, z: 0.28), dt: 0.81, eta: 3.8h
[INFO]: 2024-04-15 04:45:55,244 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0511, cls: 0.0217, iou: 0.0667), misc (ry: 0.12, z: 0.28), dt: 0.81, eta: 3.7h
[INFO]: 2024-04-15 04:49:05,736 iter: 33750, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0210, iou: 0.0638), misc (ry: 0.11, z: 0.26), dt: 0.81, eta: 3.6h
[INFO]: 2024-04-15 04:52:16,187 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0446, cls: 0.0218, iou: 0.0658), misc (ry: 0.12, z: 0.27), dt: 0.81, eta: 3.6h
[INFO]: 2024-04-15 04:55:26,009 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0500, cls: 0.0220, iou: 0.0664), misc (ry: 0.12, z: 0.28), dt: 0.81, eta: 3.5h
[INFO]: 2024-04-15 04:58:35,715 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0218, iou: 0.0647), misc (ry: 0.11, z: 0.27), dt: 0.81, eta: 3.5h
[INFO]: 2024-04-15 05:01:48,766 iter: 34750, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0213, iou: 0.0638), misc (ry: 0.12, z: 0.27), dt: 0.81, eta: 3.4h
[INFO]: 2024-04-15 05:04:58,101 iter: 35000, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0210, iou: 0.0625), misc (ry: 0.11, z: 0.27), dt: 0.81, eta: 3.4h
[INFO]: 2024-04-15 05:08:08,235 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0422, cls: 0.0216, iou: 0.0624), misc (ry: 0.11, z: 0.26), dt: 0.81, eta: 3.3h
[INFO]: 2024-04-15 05:11:22,441 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0411, cls: 0.0207, iou: 0.0620), misc (ry: 0.10, z: 0.27), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-15 05:14:34,805 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0448, cls: 0.0217, iou: 0.0630), misc (ry: 0.11, z: 0.27), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-15 05:17:42,459 iter: 36000, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0209, iou: 0.0605), misc (ry: 0.11, z: 0.25), dt: 0.80, eta: 3.1h
[INFO]: 2024-04-15 05:20:52,042 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0418, cls: 0.0215, iou: 0.0626), misc (ry: 0.11, z: 0.27), dt: 0.80, eta: 3.1h
[INFO]: 2024-04-15 05:24:03,610 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0485, cls: 0.0227, iou: 0.0653), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 3.0h
[INFO]: 2024-04-15 05:27:12,991 iter: 36750, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0518, cls: 0.0213, iou: 0.0615), misc (ry: 0.16, z: 0.25), dt: 0.80, eta: 3.0h
[INFO]: 2024-04-15 05:30:22,667 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0461, cls: 0.0220, iou: 0.0621), misc (ry: 0.11, z: 0.27), dt: 0.80, eta: 2.9h
[INFO]: 2024-04-15 05:33:31,467 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0216, iou: 0.0657), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 2.8h
[INFO]: 2024-04-15 05:36:39,776 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0410, cls: 0.0206, iou: 0.0604), misc (ry: 0.11, z: 0.26), dt: 0.80, eta: 2.8h
[INFO]: 2024-04-15 05:39:47,015 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0373, cls: 0.0205, iou: 0.0593), misc (ry: 0.10, z: 0.24), dt: 0.80, eta: 2.7h
[INFO]: 2024-04-15 05:42:51,518 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0212, iou: 0.0596), misc (ry: 0.11, z: 0.24), dt: 0.80, eta: 2.7h
[INFO]: 2024-04-15 05:45:59,014 iter: 38250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0339, cls: 0.0200, iou: 0.0556), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 2.6h
[INFO]: 2024-04-15 05:49:02,399 iter: 38500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0343, cls: 0.0204, iou: 0.0553), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 2.6h
[INFO]: 2024-04-15 05:52:07,162 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0425, cls: 0.0202, iou: 0.0603), misc (ry: 0.12, z: 0.25), dt: 0.80, eta: 2.5h
[INFO]: 2024-04-15 05:55:16,698 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0210, iou: 0.0613), misc (ry: 0.12, z: 0.26), dt: 0.80, eta: 2.4h
[INFO]: 2024-04-15 05:58:26,249 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0368, cls: 0.0203, iou: 0.0564), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 2.4h
[INFO]: 2024-04-15 06:01:32,690 iter: 39500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0395, cls: 0.0202, iou: 0.0560), misc (ry: 0.13, z: 0.24), dt: 0.80, eta: 2.3h
[INFO]: 2024-04-15 06:04:45,064 iter: 39750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0336, cls: 0.0198, iou: 0.0559), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 2.3h
[INFO]: 2024-04-15 06:07:56,344 iter: 40000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0355, cls: 0.0206, iou: 0.0562), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 2.2h
[INFO]: 2024-04-15 06:18:07,808 test_iter 40000 2d car --> easy: 0.9415, mod: 0.8616, hard: 0.6960
[INFO]: 2024-04-15 06:18:07,809 test_iter 40000 gr car --> easy: 0.2373, mod: 0.1879, hard: 0.1534
[INFO]: 2024-04-15 06:18:07,809 test_iter 40000 3d car --> easy: 0.1743, mod: 0.1414, hard: 0.1213
[INFO]: 2024-04-15 06:18:07,810 test_iter 40000 2d pedestrian --> easy: 0.6664, mod: 0.5857, hard: 0.5038
[INFO]: 2024-04-15 06:18:07,810 test_iter 40000 gr pedestrian --> easy: 0.0693, mod: 0.0682, hard: 0.0627
[INFO]: 2024-04-15 06:18:07,811 test_iter 40000 3d pedestrian --> easy: 0.0663, mod: 0.0626, hard: 0.0553
[INFO]: 2024-04-15 06:18:07,812 test_iter 40000 2d cyclist --> easy: 0.7490, mod: 0.4953, hard: 0.4280
[INFO]: 2024-04-15 06:18:07,812 test_iter 40000 gr cyclist --> easy: 0.0509, mod: 0.0330, hard: 0.0329
[INFO]: 2024-04-15 06:18:07,813 test_iter 40000 3d cyclist --> easy: 0.0409, mod: 0.0318, hard: 0.0320
[INFO]: 2024-04-15 06:21:18,329 iter: 40250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0193, iou: 0.0534), misc (ry: 0.10, z: 0.23), dt: 0.81, eta: 2.2h
[INFO]: 2024-04-15 06:24:32,966 iter: 40500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0193, iou: 0.0548), misc (ry: 0.11, z: 0.23), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-15 06:27:46,175 iter: 40750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0320, cls: 0.0195, iou: 0.0526), misc (ry: 0.10, z: 0.24), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-15 06:30:51,516 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0381, cls: 0.0207, iou: 0.0560), misc (ry: 0.10, z: 0.24), dt: 0.81, eta: 2.0h
[INFO]: 2024-04-15 06:33:59,032 iter: 41250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0197, iou: 0.0534), misc (ry: 0.11, z: 0.23), dt: 0.81, eta: 2.0h
[INFO]: 2024-04-15 06:37:02,379 iter: 41500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0352, cls: 0.0200, iou: 0.0545), misc (ry: 0.10, z: 0.23), dt: 0.81, eta: 1.9h
[INFO]: 2024-04-15 06:40:10,679 iter: 41750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0345, cls: 0.0202, iou: 0.0539), misc (ry: 0.10, z: 0.22), dt: 0.81, eta: 1.9h
[INFO]: 2024-04-15 06:43:18,352 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0335, cls: 0.0209, iou: 0.0529), misc (ry: 0.10, z: 0.22), dt: 0.81, eta: 1.8h
[INFO]: 2024-04-15 06:46:27,837 iter: 42250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0308, cls: 0.0194, iou: 0.0529), misc (ry: 0.10, z: 0.23), dt: 0.81, eta: 1.7h
[INFO]: 2024-04-15 06:49:35,111 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0200, iou: 0.0520), misc (ry: 0.09, z: 0.22), dt: 0.81, eta: 1.7h
[INFO]: 2024-04-15 06:52:42,745 iter: 42750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0263, cls: 0.0174, iou: 0.0487), misc (ry: 0.09, z: 0.21), dt: 0.81, eta: 1.6h
[INFO]: 2024-04-15 06:55:50,974 iter: 43000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0283, cls: 0.0177, iou: 0.0497), misc (ry: 0.09, z: 0.22), dt: 0.81, eta: 1.6h
[INFO]: 2024-04-15 06:59:06,896 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0195, iou: 0.0510), misc (ry: 0.10, z: 0.22), dt: 0.81, eta: 1.5h
[INFO]: 2024-04-15 07:02:18,234 iter: 43500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0206, iou: 0.0514), misc (ry: 0.10, z: 0.21), dt: 0.81, eta: 1.5h
[INFO]: 2024-04-15 07:05:24,290 iter: 43750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0285, cls: 0.0189, iou: 0.0480), misc (ry: 0.09, z: 0.21), dt: 0.81, eta: 1.4h
[INFO]: 2024-04-15 07:08:30,413 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0196, iou: 0.0499), misc (ry: 0.10, z: 0.21), dt: 0.81, eta: 1.3h
[INFO]: 2024-04-15 07:11:34,480 iter: 44250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0293, cls: 0.0195, iou: 0.0489), misc (ry: 0.10, z: 0.22), dt: 0.81, eta: 1.3h
[INFO]: 2024-04-15 07:14:42,367 iter: 44500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0301, cls: 0.0195, iou: 0.0497), misc (ry: 0.10, z: 0.21), dt: 0.81, eta: 1.2h
[INFO]: 2024-04-15 07:17:51,353 iter: 44750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0278, cls: 0.0192, iou: 0.0482), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 1.2h
[INFO]: 2024-04-15 07:21:01,325 iter: 45000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0274, cls: 0.0190, iou: 0.0457), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 1.1h
[INFO]: 2024-04-15 07:24:10,044 iter: 45250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0290, cls: 0.0194, iou: 0.0478), misc (ry: 0.09, z: 0.21), dt: 0.81, eta: 1.1h
[INFO]: 2024-04-15 07:27:20,262 iter: 45500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0275, cls: 0.0181, iou: 0.0466), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 1.0h
[INFO]: 2024-04-15 07:30:30,100 iter: 45750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0246, cls: 0.0176, iou: 0.0447), misc (ry: 0.08, z: 0.20), dt: 0.81, eta: 57.2m
[INFO]: 2024-04-15 07:33:39,620 iter: 46000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0277, cls: 0.0196, iou: 0.0479), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 53.8m
[INFO]: 2024-04-15 07:36:47,987 iter: 46250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0246, cls: 0.0179, iou: 0.0445), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 50.4m
[INFO]: 2024-04-15 07:39:54,343 iter: 46500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0274, cls: 0.0186, iou: 0.0460), misc (ry: 0.09, z: 0.19), dt: 0.81, eta: 47.0m
[INFO]: 2024-04-15 07:43:02,401 iter: 46750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0251, cls: 0.0184, iou: 0.0442), misc (ry: 0.09, z: 0.19), dt: 0.81, eta: 43.7m
[INFO]: 2024-04-15 07:46:13,373 iter: 47000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0276, cls: 0.0187, iou: 0.0451), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 40.3m
[INFO]: 2024-04-15 07:49:22,562 iter: 47250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0287, cls: 0.0197, iou: 0.0467), misc (ry: 0.09, z: 0.20), dt: 0.81, eta: 36.9m
[INFO]: 2024-04-15 07:52:33,085 iter: 47500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0274, cls: 0.0188, iou: 0.0439), misc (ry: 0.09, z: 0.19), dt: 0.81, eta: 33.6m
[INFO]: 2024-04-15 07:55:41,763 iter: 47750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0244, cls: 0.0184, iou: 0.0421), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 30.2m
[INFO]: 2024-04-15 07:58:52,392 iter: 48000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0275, cls: 0.0191, iou: 0.0448), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 26.8m
[INFO]: 2024-04-15 08:02:01,615 iter: 48250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0231, cls: 0.0183, iou: 0.0413), misc (ry: 0.08, z: 0.18), dt: 0.80, eta: 23.5m
[INFO]: 2024-04-15 08:05:12,787 iter: 48500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0255, cls: 0.0192, iou: 0.0438), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 20.1m
[INFO]: 2024-04-15 08:08:21,939 iter: 48750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0257, cls: 0.0186, iou: 0.0432), misc (ry: 0.08, z: 0.19), dt: 0.80, eta: 16.8m
[INFO]: 2024-04-15 08:11:31,012 iter: 49000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0265, cls: 0.0187, iou: 0.0446), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 13.4m
[INFO]: 2024-04-15 08:14:41,384 iter: 49250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0259, cls: 0.0184, iou: 0.0434), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 10.1m
[INFO]: 2024-04-15 08:17:47,547 iter: 49500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0250, cls: 0.0181, iou: 0.0416), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 6.7m
[INFO]: 2024-04-15 08:20:55,648 iter: 49750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0267, cls: 0.0184, iou: 0.0429), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 3.4m
[INFO]: 2024-04-15 08:23:59,728 iter: 50000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0284, cls: 0.0200, iou: 0.0451), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 0.8s
[INFO]: 2024-04-15 08:34:13,462 test_iter 50000 2d car --> easy: 0.9426, mod: 0.8652, hard: 0.6978
[INFO]: 2024-04-15 08:34:13,463 test_iter 50000 gr car --> easy: 0.2426, mod: 0.2168, hard: 0.1798
[INFO]: 2024-04-15 08:34:13,463 test_iter 50000 3d car --> easy: 0.1969, mod: 0.1739, hard: 0.1538
[INFO]: 2024-04-15 08:34:13,464 test_iter 50000 2d pedestrian --> easy: 0.6622, mod: 0.5829, hard: 0.5025
[INFO]: 2024-04-15 08:34:13,464 test_iter 50000 gr pedestrian --> easy: 0.1260, mod: 0.1146, hard: 0.1112
[INFO]: 2024-04-15 08:34:13,465 test_iter 50000 3d pedestrian --> easy: 0.0677, mod: 0.0651, hard: 0.0566
[INFO]: 2024-04-15 08:34:13,465 test_iter 50000 2d cyclist --> easy: 0.7503, mod: 0.4916, hard: 0.4221
[INFO]: 2024-04-15 08:34:13,466 test_iter 50000 gr cyclist --> easy: 0.0723, mod: 0.0514, hard: 0.0464
[INFO]: 2024-04-15 08:34:13,466 test_iter 50000 3d cyclist --> easy: 0.0593, mod: 0.0440, hard: 0.0368
