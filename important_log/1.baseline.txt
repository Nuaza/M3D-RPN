[INFO]: 2023-10-26 00:15:05,274 Loading imdb kitti_split1
[INFO]: 2023-10-26 00:15:06,350 1000/3712, dt: 0.0011, eta: 2.9s
[INFO]: 2023-10-26 00:15:07,422 2000/3712, dt: 0.0011, eta: 1.8s
[INFO]: 2023-10-26 00:15:08,571 3000/3712, dt: 0.0011, eta: 0.8s
[INFO]: 2023-10-26 00:15:09,729 weighted respectively as 1.05 and 0.00
[INFO]: 2023-10-26 00:15:09,730 Found 3534 foreground and 178 empty images
[INFO]: 2023-10-26 00:15:12,111 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-10-26 00:15:12,489 Computing bbox regression mean..
[INFO]: 2023-10-26 00:18:11,776 Computing bbox regression stds..
[INFO]: 2023-10-26 00:21:07,541 used 814041 boxes with avg std 0.6826
[INFO]: 2023-10-26 00:21:07,545 conf: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000_pkl'
}
[INFO]: 2023-10-26 00:21:08,034 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-10-26 00:23:41,187 iter: 250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1561, cls: 0.0462, iou: 0.1175), misc (ry: 0.21, z: 0.53), dt: 0.61, eta: 8.5h
[INFO]: 2023-10-26 00:26:13,963 iter: 500, acc (bg: 1.00, fg: 0.87, iou: 0.81), loss (bbox_3d: 0.7080, cls: 0.1783, iou: 0.2169), misc (ry: 0.65, z: 1.09), dt: 0.61, eta: 8.4h
[INFO]: 2023-10-26 00:28:45,692 iter: 750, acc (bg: 1.00, fg: 0.86, iou: 0.79), loss (bbox_3d: 0.8543, cls: 0.1767, iou: 0.2431), misc (ry: 0.86, z: 1.17), dt: 0.61, eta: 8.4h
[INFO]: 2023-10-26 00:31:17,703 iter: 1000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5714, cls: 0.1109, iou: 0.1986), misc (ry: 0.57, z: 0.99), dt: 0.61, eta: 8.3h
[INFO]: 2023-10-26 00:33:52,842 iter: 1250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4973, cls: 0.0826, iou: 0.1821), misc (ry: 0.59, z: 0.85), dt: 0.61, eta: 8.3h
[INFO]: 2023-10-26 00:36:26,998 iter: 1500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4093, cls: 0.0851, iou: 0.1729), misc (ry: 0.46, z: 0.79), dt: 0.61, eta: 8.3h
[INFO]: 2023-10-26 00:39:02,045 iter: 1750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3796, cls: 0.0700, iou: 0.1567), misc (ry: 0.44, z: 0.77), dt: 0.61, eta: 8.2h
[INFO]: 2023-10-26 00:41:34,719 iter: 2000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3938, cls: 0.0717, iou: 0.1629), misc (ry: 0.52, z: 0.76), dt: 0.61, eta: 8.2h
[INFO]: 2023-10-26 00:44:11,533 iter: 2250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3630, cls: 0.0707, iou: 0.1591), misc (ry: 0.50, z: 0.70), dt: 0.62, eta: 8.2h
[INFO]: 2023-10-26 00:46:48,219 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3683, cls: 0.0666, iou: 0.1525), misc (ry: 0.48, z: 0.70), dt: 0.62, eta: 8.1h
[INFO]: 2023-10-26 00:49:21,993 iter: 2750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3194, cls: 0.0663, iou: 0.1514), misc (ry: 0.44, z: 0.65), dt: 0.62, eta: 8.1h
[INFO]: 2023-10-26 00:51:56,857 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3299, cls: 0.0681, iou: 0.1492), misc (ry: 0.41, z: 0.69), dt: 0.62, eta: 8.0h
[INFO]: 2023-10-26 00:54:31,374 iter: 3250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2773, cls: 0.0607, iou: 0.1467), misc (ry: 0.35, z: 0.63), dt: 0.62, eta: 8.0h
[INFO]: 2023-10-26 00:57:04,605 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2804, cls: 0.0629, iou: 0.1422), misc (ry: 0.39, z: 0.60), dt: 0.62, eta: 8.0h
[INFO]: 2023-10-26 00:59:37,439 iter: 3750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2709, cls: 0.0600, iou: 0.1433), misc (ry: 0.36, z: 0.62), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-26 01:02:12,734 iter: 4000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3191, cls: 0.0666, iou: 0.1531), misc (ry: 0.41, z: 0.73), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-26 01:04:47,431 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2561, cls: 0.0556, iou: 0.1401), misc (ry: 0.31, z: 0.63), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 01:07:21,658 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2207, cls: 0.0577, iou: 0.1352), misc (ry: 0.32, z: 0.56), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 01:09:56,829 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2123, cls: 0.0558, iou: 0.1323), misc (ry: 0.27, z: 0.56), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 01:12:31,211 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2175, cls: 0.0544, iou: 0.1287), misc (ry: 0.27, z: 0.58), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-26 01:15:05,383 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2711, cls: 0.0593, iou: 0.1411), misc (ry: 0.39, z: 0.59), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-26 01:17:40,760 iter: 5500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3004, cls: 0.0698, iou: 0.1490), misc (ry: 0.40, z: 0.65), dt: 0.62, eta: 7.6h
[INFO]: 2023-10-26 01:20:16,168 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2554, cls: 0.0605, iou: 0.1368), misc (ry: 0.39, z: 0.56), dt: 0.62, eta: 7.6h
[INFO]: 2023-10-26 01:22:49,554 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2733, cls: 0.0585, iou: 0.1401), misc (ry: 0.42, z: 0.61), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 01:25:22,673 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2372, cls: 0.0553, iou: 0.1335), misc (ry: 0.31, z: 0.60), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 01:27:57,711 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2230, cls: 0.0598, iou: 0.1346), misc (ry: 0.33, z: 0.57), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 01:30:28,943 iter: 6750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3215, cls: 0.0666, iou: 0.1472), misc (ry: 0.51, z: 0.64), dt: 0.62, eta: 7.4h
[INFO]: 2023-10-26 01:33:02,634 iter: 7000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2797, cls: 0.0533, iou: 0.1359), misc (ry: 0.45, z: 0.55), dt: 0.62, eta: 7.4h
[INFO]: 2023-10-26 01:35:37,659 iter: 7250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2085, cls: 0.0544, iou: 0.1265), misc (ry: 0.33, z: 0.49), dt: 0.62, eta: 7.3h
[INFO]: 2023-10-26 01:38:14,650 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2181, cls: 0.0553, iou: 0.1311), misc (ry: 0.32, z: 0.58), dt: 0.62, eta: 7.3h
[INFO]: 2023-10-26 01:40:46,053 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1979, cls: 0.0506, iou: 0.1288), misc (ry: 0.30, z: 0.55), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 01:43:22,068 iter: 8000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1908, cls: 0.0520, iou: 0.1224), misc (ry: 0.30, z: 0.49), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 01:45:55,131 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1886, cls: 0.0496, iou: 0.1235), misc (ry: 0.26, z: 0.56), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 01:48:30,553 iter: 8500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1724, cls: 0.0457, iou: 0.1196), misc (ry: 0.25, z: 0.54), dt: 0.62, eta: 7.1h
[INFO]: 2023-10-26 01:51:01,410 iter: 8750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1634, cls: 0.0466, iou: 0.1179), misc (ry: 0.25, z: 0.47), dt: 0.62, eta: 7.1h
[INFO]: 2023-10-26 01:53:35,474 iter: 9000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1509, cls: 0.0457, iou: 0.1148), misc (ry: 0.22, z: 0.50), dt: 0.62, eta: 7.0h
[INFO]: 2023-10-26 01:56:11,294 iter: 9250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1486, cls: 0.0473, iou: 0.1159), misc (ry: 0.26, z: 0.45), dt: 0.62, eta: 7.0h
[INFO]: 2023-10-26 01:58:45,676 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1539, cls: 0.0444, iou: 0.1126), misc (ry: 0.24, z: 0.48), dt: 0.62, eta: 6.9h
[INFO]: 2023-10-26 02:01:23,025 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1513, cls: 0.0466, iou: 0.1144), misc (ry: 0.25, z: 0.45), dt: 0.62, eta: 6.9h
[INFO]: 2023-10-26 02:03:54,932 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1587, cls: 0.0466, iou: 0.1123), misc (ry: 0.24, z: 0.46), dt: 0.62, eta: 6.9h
[INFO]: 2023-10-26 02:06:24,113 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-10-26 02:08:53,035 testing 2000/3769, dt: 0.148, eta: 4.4m
[INFO]: 2023-10-26 02:11:21,716 testing 3000/3769, dt: 0.148, eta: 1.9m
[INFO]: 2023-10-26 02:13:22,578 test_iter 10000 2d car --> easy: 0.8880, mod: 0.8229, hard: 0.6676
[INFO]: 2023-10-26 02:13:22,579 test_iter 10000 gr car --> easy: 0.2412, mod: 0.1825, hard: 0.1658
[INFO]: 2023-10-26 02:13:22,580 test_iter 10000 3d car --> easy: 0.1835, mod: 0.1426, hard: 0.1271
[INFO]: 2023-10-26 02:13:22,581 test_iter 10000 2d pedestrian --> easy: 0.6446, mod: 0.5601, hard: 0.4826
[INFO]: 2023-10-26 02:13:22,581 test_iter 10000 gr pedestrian --> easy: 0.0483, mod: 0.0465, hard: 0.0423
[INFO]: 2023-10-26 02:13:22,582 test_iter 10000 3d pedestrian --> easy: 0.0406, mod: 0.0372, hard: 0.0366
[INFO]: 2023-10-26 02:13:22,583 test_iter 10000 2d cyclist --> easy: 0.6261, mod: 0.3937, hard: 0.3840
[INFO]: 2023-10-26 02:13:22,583 test_iter 10000 gr cyclist --> easy: 0.0502, mod: 0.0411, hard: 0.0411
[INFO]: 2023-10-26 02:13:22,584 test_iter 10000 3d cyclist --> easy: 0.0441, mod: 0.0303, hard: 0.0303
[INFO]: 2023-10-26 02:15:55,369 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1531, cls: 0.0422, iou: 0.1104), misc (ry: 0.23, z: 0.48), dt: 0.67, eta: 7.4h
[INFO]: 2023-10-26 02:18:28,079 iter: 10500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1551, cls: 0.0508, iou: 0.1160), misc (ry: 0.25, z: 0.47), dt: 0.67, eta: 7.4h
[INFO]: 2023-10-26 02:21:02,941 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1670, cls: 0.0493, iou: 0.1226), misc (ry: 0.25, z: 0.51), dt: 0.67, eta: 7.3h
[INFO]: 2023-10-26 02:23:37,389 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1728, cls: 0.0478, iou: 0.1169), misc (ry: 0.29, z: 0.51), dt: 0.67, eta: 7.2h
[INFO]: 2023-10-26 02:26:11,774 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2005, cls: 0.0467, iou: 0.1216), misc (ry: 0.35, z: 0.51), dt: 0.67, eta: 7.2h
[INFO]: 2023-10-26 02:28:47,767 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1442, cls: 0.0465, iou: 0.1134), misc (ry: 0.23, z: 0.47), dt: 0.67, eta: 7.1h
[INFO]: 2023-10-26 02:31:23,829 iter: 11750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2544, cls: 0.0571, iou: 0.1377), misc (ry: 0.37, z: 0.58), dt: 0.67, eta: 7.1h
[INFO]: 2023-10-26 02:33:57,089 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1952, cls: 0.0474, iou: 0.1241), misc (ry: 0.29, z: 0.53), dt: 0.66, eta: 7.0h
[INFO]: 2023-10-26 02:36:29,919 iter: 12250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1866, cls: 0.0524, iou: 0.1198), misc (ry: 0.24, z: 0.52), dt: 0.66, eta: 7.0h
[INFO]: 2023-10-26 02:39:05,478 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1553, cls: 0.0472, iou: 0.1139), misc (ry: 0.24, z: 0.49), dt: 0.66, eta: 6.9h
[INFO]: 2023-10-26 02:41:40,672 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1441, cls: 0.0426, iou: 0.1051), misc (ry: 0.25, z: 0.44), dt: 0.66, eta: 6.8h
[INFO]: 2023-10-26 02:44:14,834 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1704, cls: 0.0497, iou: 0.1211), misc (ry: 0.28, z: 0.48), dt: 0.66, eta: 6.8h
[INFO]: 2023-10-26 02:46:48,180 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1414, cls: 0.0453, iou: 0.1113), misc (ry: 0.23, z: 0.45), dt: 0.66, eta: 6.7h
[INFO]: 2023-10-26 02:49:23,804 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1316, cls: 0.0452, iou: 0.1102), misc (ry: 0.22, z: 0.45), dt: 0.66, eta: 6.7h
[INFO]: 2023-10-26 02:52:00,222 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1393, cls: 0.0450, iou: 0.1107), misc (ry: 0.22, z: 0.46), dt: 0.66, eta: 6.6h
[INFO]: 2023-10-26 02:54:36,117 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1259, cls: 0.0409, iou: 0.1021), misc (ry: 0.23, z: 0.40), dt: 0.66, eta: 6.6h
[INFO]: 2023-10-26 02:57:08,851 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1229, cls: 0.0418, iou: 0.1069), misc (ry: 0.21, z: 0.47), dt: 0.66, eta: 6.5h
[INFO]: 2023-10-26 02:59:42,755 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1637, cls: 0.0431, iou: 0.1117), misc (ry: 0.26, z: 0.52), dt: 0.66, eta: 6.5h
[INFO]: 2023-10-26 03:02:16,850 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1593, cls: 0.0502, iou: 0.1129), misc (ry: 0.27, z: 0.43), dt: 0.66, eta: 6.4h
[INFO]: 2023-10-26 03:04:50,831 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1402, cls: 0.0444, iou: 0.1100), misc (ry: 0.23, z: 0.45), dt: 0.65, eta: 6.4h
[INFO]: 2023-10-26 03:07:23,487 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1279, cls: 0.0400, iou: 0.1028), misc (ry: 0.21, z: 0.46), dt: 0.65, eta: 6.3h
[INFO]: 2023-10-26 03:09:56,753 iter: 15500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0386, iou: 0.0985), misc (ry: 0.20, z: 0.41), dt: 0.65, eta: 6.3h
[INFO]: 2023-10-26 03:12:30,205 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1195, cls: 0.0400, iou: 0.1044), misc (ry: 0.20, z: 0.43), dt: 0.65, eta: 6.2h
[INFO]: 2023-10-26 03:15:02,390 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1101, cls: 0.0369, iou: 0.1015), misc (ry: 0.19, z: 0.41), dt: 0.65, eta: 6.2h
[INFO]: 2023-10-26 03:17:34,810 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0994, cls: 0.0392, iou: 0.0980), misc (ry: 0.18, z: 0.37), dt: 0.65, eta: 6.1h
[INFO]: 2023-10-26 03:20:11,877 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1102, cls: 0.0386, iou: 0.1002), misc (ry: 0.21, z: 0.41), dt: 0.65, eta: 6.1h
[INFO]: 2023-10-26 03:22:47,727 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1166, cls: 0.0409, iou: 0.1036), misc (ry: 0.21, z: 0.40), dt: 0.65, eta: 6.0h
[INFO]: 2023-10-26 03:25:21,650 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1523, cls: 0.0450, iou: 0.1091), misc (ry: 0.24, z: 0.41), dt: 0.65, eta: 6.0h
[INFO]: 2023-10-26 03:27:57,439 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1354, cls: 0.0431, iou: 0.1037), misc (ry: 0.25, z: 0.44), dt: 0.65, eta: 5.9h
[INFO]: 2023-10-26 03:30:30,862 iter: 17500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1148, cls: 0.0386, iou: 0.0976), misc (ry: 0.21, z: 0.39), dt: 0.65, eta: 5.9h
[INFO]: 2023-10-26 03:33:06,458 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1134, cls: 0.0417, iou: 0.1008), misc (ry: 0.20, z: 0.37), dt: 0.65, eta: 5.8h
[INFO]: 2023-10-26 03:35:41,842 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1126, cls: 0.0462, iou: 0.1042), misc (ry: 0.21, z: 0.38), dt: 0.65, eta: 5.8h
[INFO]: 2023-10-26 03:38:15,963 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1143, cls: 0.0403, iou: 0.1009), misc (ry: 0.19, z: 0.41), dt: 0.65, eta: 5.7h
[INFO]: 2023-10-26 03:40:48,102 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1042, cls: 0.0392, iou: 0.1004), misc (ry: 0.19, z: 0.42), dt: 0.65, eta: 5.7h
[INFO]: 2023-10-26 03:43:21,074 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1034, cls: 0.0385, iou: 0.0972), misc (ry: 0.20, z: 0.39), dt: 0.65, eta: 5.6h
[INFO]: 2023-10-26 03:45:53,089 iter: 19000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1030, cls: 0.0395, iou: 0.0965), misc (ry: 0.20, z: 0.37), dt: 0.65, eta: 5.6h
[INFO]: 2023-10-26 03:48:26,170 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0934, cls: 0.0382, iou: 0.0919), misc (ry: 0.17, z: 0.39), dt: 0.65, eta: 5.5h
[INFO]: 2023-10-26 03:51:02,939 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0929, cls: 0.0367, iou: 0.0926), misc (ry: 0.18, z: 0.38), dt: 0.65, eta: 5.5h
[INFO]: 2023-10-26 03:53:37,973 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0827, cls: 0.0367, iou: 0.0905), misc (ry: 0.17, z: 0.35), dt: 0.65, eta: 5.4h
[INFO]: 2023-10-26 03:56:10,172 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0958, cls: 0.0345, iou: 0.0917), misc (ry: 0.22, z: 0.37), dt: 0.65, eta: 5.4h
[INFO]: 2023-10-26 03:58:39,762 testing 1000/3769, dt: 0.148, eta: 6.8m
[INFO]: 2023-10-26 04:01:06,630 testing 2000/3769, dt: 0.147, eta: 4.3m
[INFO]: 2023-10-26 04:03:32,902 testing 3000/3769, dt: 0.147, eta: 1.9m
[INFO]: 2023-10-26 04:05:32,691 test_iter 20000 2d car --> easy: 0.8558, mod: 0.8288, hard: 0.6765
[INFO]: 2023-10-26 04:05:32,693 test_iter 20000 gr car --> easy: 0.2325, mod: 0.1796, hard: 0.1588
[INFO]: 2023-10-26 04:05:32,693 test_iter 20000 3d car --> easy: 0.1821, mod: 0.1496, hard: 0.1285
[INFO]: 2023-10-26 04:05:32,694 test_iter 20000 2d pedestrian --> easy: 0.7271, mod: 0.5875, hard: 0.5035
[INFO]: 2023-10-26 04:05:32,695 test_iter 20000 gr pedestrian --> easy: 0.1136, mod: 0.1100, hard: 0.1040
[INFO]: 2023-10-26 04:05:32,695 test_iter 20000 3d pedestrian --> easy: 0.1066, mod: 0.1030, hard: 0.0996
[INFO]: 2023-10-26 04:05:32,695 test_iter 20000 2d cyclist --> easy: 0.5792, mod: 0.3723, hard: 0.3695
[INFO]: 2023-10-26 04:05:32,696 test_iter 20000 gr cyclist --> easy: 0.0349, mod: 0.0272, hard: 0.0285
[INFO]: 2023-10-26 04:05:32,696 test_iter 20000 3d cyclist --> easy: 0.0344, mod: 0.0263, hard: 0.0207
[INFO]: 2023-10-26 04:08:05,198 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1008, cls: 0.0390, iou: 0.0970), misc (ry: 0.19, z: 0.36), dt: 0.67, eta: 5.6h
[INFO]: 2023-10-26 04:10:36,514 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1282, cls: 0.0385, iou: 0.1005), misc (ry: 0.23, z: 0.44), dt: 0.67, eta: 5.5h
[INFO]: 2023-10-26 04:13:05,275 iter: 20750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1572, cls: 0.0416, iou: 0.1034), misc (ry: 0.31, z: 0.44), dt: 0.67, eta: 5.4h
[INFO]: 2023-10-26 04:15:41,000 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1421, cls: 0.0432, iou: 0.1049), misc (ry: 0.28, z: 0.45), dt: 0.67, eta: 5.4h
[INFO]: 2023-10-26 04:18:13,925 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1127, cls: 0.0400, iou: 0.1000), misc (ry: 0.21, z: 0.42), dt: 0.67, eta: 5.3h
[INFO]: 2023-10-26 04:20:46,778 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1095, cls: 0.0382, iou: 0.0964), misc (ry: 0.21, z: 0.44), dt: 0.67, eta: 5.3h
[INFO]: 2023-10-26 04:23:20,170 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0932, cls: 0.0391, iou: 0.0964), misc (ry: 0.19, z: 0.38), dt: 0.67, eta: 5.2h
[INFO]: 2023-10-26 04:25:53,226 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0873, cls: 0.0379, iou: 0.0924), misc (ry: 0.16, z: 0.36), dt: 0.67, eta: 5.2h
[INFO]: 2023-10-26 04:28:28,410 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0934, cls: 0.0387, iou: 0.0951), misc (ry: 0.19, z: 0.34), dt: 0.67, eta: 5.1h
[INFO]: 2023-10-26 04:31:03,026 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0907, cls: 0.0373, iou: 0.0913), misc (ry: 0.17, z: 0.39), dt: 0.67, eta: 5.1h
[INFO]: 2023-10-26 04:33:40,592 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0367, iou: 0.0883), misc (ry: 0.18, z: 0.35), dt: 0.67, eta: 5.0h
[INFO]: 2023-10-26 04:36:13,178 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0808, cls: 0.0353, iou: 0.0900), misc (ry: 0.16, z: 0.36), dt: 0.67, eta: 5.0h
[INFO]: 2023-10-26 04:38:46,534 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0824, cls: 0.0354, iou: 0.0886), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 4.9h
[INFO]: 2023-10-26 04:41:20,354 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0807, cls: 0.0362, iou: 0.0859), misc (ry: 0.17, z: 0.34), dt: 0.66, eta: 4.9h
[INFO]: 2023-10-26 04:43:52,423 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0773, cls: 0.0365, iou: 0.0890), misc (ry: 0.15, z: 0.36), dt: 0.66, eta: 4.8h
[INFO]: 2023-10-26 04:46:25,789 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0755, cls: 0.0344, iou: 0.0867), misc (ry: 0.15, z: 0.37), dt: 0.66, eta: 4.8h
[INFO]: 2023-10-26 04:48:59,727 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0356, iou: 0.0852), misc (ry: 0.15, z: 0.36), dt: 0.66, eta: 4.7h
[INFO]: 2023-10-26 04:51:35,455 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0761, cls: 0.0362, iou: 0.0864), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 4.7h
[INFO]: 2023-10-26 04:54:09,158 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0692, cls: 0.0366, iou: 0.0818), misc (ry: 0.15, z: 0.31), dt: 0.66, eta: 4.6h
[INFO]: 2023-10-26 04:56:45,030 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0693, cls: 0.0350, iou: 0.0829), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 4.6h
[INFO]: 2023-10-26 04:59:16,035 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0339, iou: 0.0831), misc (ry: 0.17, z: 0.33), dt: 0.66, eta: 4.5h
[INFO]: 2023-10-26 05:01:50,830 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0679, cls: 0.0353, iou: 0.0808), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 4.5h
[INFO]: 2023-10-26 05:04:23,953 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0627, cls: 0.0321, iou: 0.0779), misc (ry: 0.13, z: 0.30), dt: 0.66, eta: 4.4h
[INFO]: 2023-10-26 05:06:58,948 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0782, cls: 0.0349, iou: 0.0856), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 4.4h
[INFO]: 2023-10-26 05:09:30,833 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0673, cls: 0.0339, iou: 0.0826), misc (ry: 0.15, z: 0.31), dt: 0.66, eta: 4.3h
[INFO]: 2023-10-26 05:12:05,163 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0635, cls: 0.0326, iou: 0.0800), misc (ry: 0.14, z: 0.33), dt: 0.66, eta: 4.3h
[INFO]: 2023-10-26 05:14:37,566 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0599, cls: 0.0321, iou: 0.0784), misc (ry: 0.14, z: 0.30), dt: 0.66, eta: 4.3h
[INFO]: 2023-10-26 05:17:13,486 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0629, cls: 0.0343, iou: 0.0800), misc (ry: 0.14, z: 0.31), dt: 0.66, eta: 4.2h
[INFO]: 2023-10-26 05:19:49,084 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0610, cls: 0.0326, iou: 0.0764), misc (ry: 0.13, z: 0.34), dt: 0.66, eta: 4.2h
[INFO]: 2023-10-26 05:22:20,476 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0329, iou: 0.0781), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 4.1h
[INFO]: 2023-10-26 05:24:55,341 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0687, cls: 0.0351, iou: 0.0812), misc (ry: 0.15, z: 0.30), dt: 0.66, eta: 4.1h
[INFO]: 2023-10-26 05:27:31,996 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0341, iou: 0.0776), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 4.0h
[INFO]: 2023-10-26 05:30:05,579 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0600, cls: 0.0316, iou: 0.0780), misc (ry: 0.13, z: 0.31), dt: 0.66, eta: 4.0h
[INFO]: 2023-10-26 05:32:39,992 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0836, cls: 0.0331, iou: 0.0790), misc (ry: 0.20, z: 0.30), dt: 0.66, eta: 3.9h
[INFO]: 2023-10-26 05:35:13,929 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0735, cls: 0.0342, iou: 0.0810), misc (ry: 0.18, z: 0.31), dt: 0.66, eta: 3.9h
[INFO]: 2023-10-26 05:37:48,881 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0616, cls: 0.0318, iou: 0.0751), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 3.8h
[INFO]: 2023-10-26 05:40:22,507 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0670, cls: 0.0315, iou: 0.0768), misc (ry: 0.15, z: 0.33), dt: 0.65, eta: 3.8h
[INFO]: 2023-10-26 05:42:55,731 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0535, cls: 0.0308, iou: 0.0735), misc (ry: 0.12, z: 0.29), dt: 0.65, eta: 3.7h
[INFO]: 2023-10-26 05:45:29,967 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0604, cls: 0.0312, iou: 0.0752), misc (ry: 0.15, z: 0.28), dt: 0.65, eta: 3.7h
[INFO]: 2023-10-26 05:48:04,632 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0322, iou: 0.0760), misc (ry: 0.14, z: 0.28), dt: 0.65, eta: 3.6h
[INFO]: 2023-10-26 05:50:33,649 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-10-26 05:53:01,746 testing 2000/3769, dt: 0.148, eta: 4.4m
[INFO]: 2023-10-26 05:55:26,221 testing 3000/3769, dt: 0.147, eta: 1.9m
[INFO]: 2023-10-26 05:57:24,602 test_iter 30000 2d car --> easy: 0.8878, mod: 0.8284, hard: 0.6711
[INFO]: 2023-10-26 05:57:24,603 test_iter 30000 gr car --> easy: 0.2385, mod: 0.2032, hard: 0.1724
[INFO]: 2023-10-26 05:57:24,604 test_iter 30000 3d car --> easy: 0.1814, mod: 0.1575, hard: 0.1333
[INFO]: 2023-10-26 05:57:24,604 test_iter 30000 2d pedestrian --> easy: 0.6673, mod: 0.5872, hard: 0.5043
[INFO]: 2023-10-26 05:57:24,605 test_iter 30000 gr pedestrian --> easy: 0.0675, mod: 0.0668, hard: 0.0620
[INFO]: 2023-10-26 05:57:24,605 test_iter 30000 3d pedestrian --> easy: 0.0641, mod: 0.0619, hard: 0.0566
[INFO]: 2023-10-26 05:57:24,606 test_iter 30000 2d cyclist --> easy: 0.6435, mod: 0.4713, hard: 0.4042
[INFO]: 2023-10-26 05:57:24,607 test_iter 30000 gr cyclist --> easy: 0.0643, mod: 0.0549, hard: 0.0552
[INFO]: 2023-10-26 05:57:24,607 test_iter 30000 3d cyclist --> easy: 0.0613, mod: 0.0541, hard: 0.0543
[INFO]: 2023-10-26 05:59:55,502 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0545, cls: 0.0304, iou: 0.0749), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 3.7h
[INFO]: 2023-10-26 06:02:29,000 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0311, iou: 0.0743), misc (ry: 0.13, z: 0.31), dt: 0.67, eta: 3.6h
[INFO]: 2023-10-26 06:05:03,173 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0585, cls: 0.0331, iou: 0.0752), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 3.6h
[INFO]: 2023-10-26 06:07:38,567 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0489, cls: 0.0315, iou: 0.0716), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.5h
[INFO]: 2023-10-26 06:10:12,117 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0477, cls: 0.0308, iou: 0.0695), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.5h
[INFO]: 2023-10-26 06:12:44,202 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0476, cls: 0.0289, iou: 0.0698), misc (ry: 0.13, z: 0.29), dt: 0.67, eta: 3.4h
[INFO]: 2023-10-26 06:15:17,531 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0531, cls: 0.0318, iou: 0.0730), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 3.4h
[INFO]: 2023-10-26 06:17:51,033 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0554, cls: 0.0318, iou: 0.0742), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 3.3h
[INFO]: 2023-10-26 06:20:26,032 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0524, cls: 0.0308, iou: 0.0706), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 3.3h
[INFO]: 2023-10-26 06:23:00,191 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0466, cls: 0.0292, iou: 0.0704), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.2h
[INFO]: 2023-10-26 06:25:34,906 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0522, cls: 0.0302, iou: 0.0704), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.2h
[INFO]: 2023-10-26 06:28:08,736 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0299, iou: 0.0683), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 3.2h
[INFO]: 2023-10-26 06:30:42,699 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0498, cls: 0.0294, iou: 0.0692), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.1h
[INFO]: 2023-10-26 06:33:18,973 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0505, cls: 0.0313, iou: 0.0725), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 3.1h
[INFO]: 2023-10-26 06:35:52,780 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0450, cls: 0.0297, iou: 0.0665), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 3.0h
[INFO]: 2023-10-26 06:38:25,350 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0428, cls: 0.0289, iou: 0.0643), misc (ry: 0.11, z: 0.25), dt: 0.67, eta: 3.0h
[INFO]: 2023-10-26 06:40:57,489 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0475, cls: 0.0318, iou: 0.0677), misc (ry: 0.13, z: 0.25), dt: 0.67, eta: 2.9h
[INFO]: 2023-10-26 06:43:32,140 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0302, iou: 0.0655), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 2.9h
[INFO]: 2023-10-26 06:46:07,064 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0424, cls: 0.0304, iou: 0.0649), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 2.8h
[INFO]: 2023-10-26 06:48:41,101 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0288, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.66, eta: 2.8h
[INFO]: 2023-10-26 06:51:18,961 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0294, iou: 0.0654), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.7h
[INFO]: 2023-10-26 06:53:50,189 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0425, cls: 0.0294, iou: 0.0642), misc (ry: 0.11, z: 0.25), dt: 0.66, eta: 2.7h
[INFO]: 2023-10-26 06:56:24,556 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0398, cls: 0.0290, iou: 0.0607), misc (ry: 0.10, z: 0.24), dt: 0.66, eta: 2.6h
[INFO]: 2023-10-26 06:59:01,807 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0301, iou: 0.0623), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.6h
[INFO]: 2023-10-26 07:01:33,317 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0288, iou: 0.0609), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.5h
[INFO]: 2023-10-26 07:04:08,659 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0398, cls: 0.0289, iou: 0.0643), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.5h
[INFO]: 2023-10-26 07:06:41,772 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0279, iou: 0.0619), misc (ry: 0.10, z: 0.24), dt: 0.66, eta: 2.4h
[INFO]: 2023-10-26 07:09:17,826 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0442, cls: 0.0289, iou: 0.0656), misc (ry: 0.11, z: 0.27), dt: 0.66, eta: 2.4h
[INFO]: 2023-10-26 07:11:51,449 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0395, cls: 0.0289, iou: 0.0619), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.3h
[INFO]: 2023-10-26 07:14:25,454 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0390, cls: 0.0282, iou: 0.0616), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.3h
[INFO]: 2023-10-26 07:16:59,188 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0292, iou: 0.0595), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.2h
[INFO]: 2023-10-26 07:19:33,720 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0380, cls: 0.0283, iou: 0.0595), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.2h
[INFO]: 2023-10-26 07:22:08,088 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0286, iou: 0.0622), misc (ry: 0.11, z: 0.25), dt: 0.66, eta: 2.2h
[INFO]: 2023-10-26 07:24:42,789 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0283, iou: 0.0580), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.1h
[INFO]: 2023-10-26 07:27:17,318 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0364, cls: 0.0281, iou: 0.0590), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.1h
[INFO]: 2023-10-26 07:29:52,469 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0376, cls: 0.0288, iou: 0.0596), misc (ry: 0.10, z: 0.23), dt: 0.66, eta: 2.0h
[INFO]: 2023-10-26 07:32:32,387 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0289, iou: 0.0593), misc (ry: 0.10, z: 0.22), dt: 0.66, eta: 2.0h
[INFO]: 2023-10-26 07:35:06,449 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0370, cls: 0.0279, iou: 0.0570), misc (ry: 0.10, z: 0.23), dt: 0.66, eta: 1.9h
[INFO]: 2023-10-26 07:37:40,846 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0389, cls: 0.0290, iou: 0.0597), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 1.9h
[INFO]: 2023-10-26 07:40:15,273 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0386, cls: 0.0290, iou: 0.0593), misc (ry: 0.10, z: 0.23), dt: 0.66, eta: 1.8h
[INFO]: 2023-10-26 07:42:40,130 testing 1000/3769, dt: 0.143, eta: 6.6m
[INFO]: 2023-10-26 07:45:02,074 testing 2000/3769, dt: 0.142, eta: 4.2m
[INFO]: 2023-10-26 07:47:22,445 testing 3000/3769, dt: 0.142, eta: 1.8m
[INFO]: 2023-10-26 07:49:19,462 test_iter 40000 2d car --> easy: 0.9221, mod: 0.8461, hard: 0.6828
[INFO]: 2023-10-26 07:49:19,463 test_iter 40000 gr car --> easy: 0.2674, mod: 0.2137, hard: 0.1795
[INFO]: 2023-10-26 07:49:19,463 test_iter 40000 3d car --> easy: 0.2030, mod: 0.1694, hard: 0.1377
[INFO]: 2023-10-26 07:49:19,464 test_iter 40000 2d pedestrian --> easy: 0.6542, mod: 0.5760, hard: 0.4949
[INFO]: 2023-10-26 07:49:19,465 test_iter 40000 gr pedestrian --> easy: 0.0681, mod: 0.0569, hard: 0.0558
[INFO]: 2023-10-26 07:49:19,465 test_iter 40000 3d pedestrian --> easy: 0.0535, mod: 0.0536, hard: 0.0458
[INFO]: 2023-10-26 07:49:19,466 test_iter 40000 2d cyclist --> easy: 0.6463, mod: 0.4130, hard: 0.4038
[INFO]: 2023-10-26 07:49:19,467 test_iter 40000 gr cyclist --> easy: 0.0594, mod: 0.0560, hard: 0.0561
[INFO]: 2023-10-26 07:49:19,467 test_iter 40000 3d cyclist --> easy: 0.0576, mod: 0.0550, hard: 0.0552
[INFO]: 2023-10-26 07:51:52,899 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0326, cls: 0.0260, iou: 0.0548), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.8h
[INFO]: 2023-10-26 07:54:26,571 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0330, cls: 0.0287, iou: 0.0551), misc (ry: 0.10, z: 0.23), dt: 0.67, eta: 1.8h
[INFO]: 2023-10-26 07:57:00,463 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0269, iou: 0.0557), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.7h
[INFO]: 2023-10-26 07:59:33,505 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0276, iou: 0.0548), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.7h
[INFO]: 2023-10-26 08:02:06,789 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0331, cls: 0.0277, iou: 0.0556), misc (ry: 0.10, z: 0.23), dt: 0.67, eta: 1.6h
[INFO]: 2023-10-26 08:04:41,277 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0383, cls: 0.0297, iou: 0.0569), misc (ry: 0.10, z: 0.23), dt: 0.67, eta: 1.6h
[INFO]: 2023-10-26 08:07:13,264 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0278, iou: 0.0530), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.5h
[INFO]: 2023-10-26 08:09:49,506 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0346, cls: 0.0291, iou: 0.0543), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.5h
[INFO]: 2023-10-26 08:12:24,427 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0285, iou: 0.0536), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.4h
[INFO]: 2023-10-26 08:15:00,432 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0266, iou: 0.0518), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.4h
[INFO]: 2023-10-26 08:17:32,630 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0297, cls: 0.0264, iou: 0.0526), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 1.3h
[INFO]: 2023-10-26 08:20:05,002 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0281, cls: 0.0250, iou: 0.0503), misc (ry: 0.09, z: 0.21), dt: 0.67, eta: 1.3h
[INFO]: 2023-10-26 08:22:39,540 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0274, iou: 0.0525), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.3h
[INFO]: 2023-10-26 08:25:12,761 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0272, iou: 0.0503), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.2h
[INFO]: 2023-10-26 08:27:48,273 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0272, iou: 0.0521), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 1.2h
[INFO]: 2023-10-26 08:30:23,346 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0270, iou: 0.0512), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.1h
[INFO]: 2023-10-26 08:32:58,317 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0293, cls: 0.0269, iou: 0.0498), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.1h
[INFO]: 2023-10-26 08:35:32,405 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0323, cls: 0.0279, iou: 0.0495), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.0h
[INFO]: 2023-10-26 08:38:07,472 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0274, iou: 0.0496), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 58.3m
[INFO]: 2023-10-26 08:40:40,846 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0283, cls: 0.0270, iou: 0.0496), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 55.5m
[INFO]: 2023-10-26 08:43:16,902 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0328, cls: 0.0269, iou: 0.0499), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 52.7m
[INFO]: 2023-10-26 08:45:50,470 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0287, cls: 0.0265, iou: 0.0488), misc (ry: 0.09, z: 0.21), dt: 0.67, eta: 49.9m
[INFO]: 2023-10-26 08:48:27,277 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0302, iou: 0.0522), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 47.1m
[INFO]: 2023-10-26 08:51:00,793 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0271, iou: 0.0496), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 44.3m
[INFO]: 2023-10-26 08:53:35,683 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0280, iou: 0.0495), misc (ry: 0.09, z: 0.20), dt: 0.66, eta: 41.6m
[INFO]: 2023-10-26 08:56:08,840 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0283, cls: 0.0264, iou: 0.0474), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 38.8m
[INFO]: 2023-10-26 08:58:43,762 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0297, cls: 0.0266, iou: 0.0473), misc (ry: 0.10, z: 0.19), dt: 0.66, eta: 36.0m
[INFO]: 2023-10-26 09:01:19,493 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0285, cls: 0.0279, iou: 0.0482), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 33.2m
[INFO]: 2023-10-26 09:03:53,908 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0290, cls: 0.0273, iou: 0.0471), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 30.4m
[INFO]: 2023-10-26 09:06:30,000 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0264, cls: 0.0273, iou: 0.0454), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 27.7m
[INFO]: 2023-10-26 09:09:04,814 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0263, cls: 0.0261, iou: 0.0473), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 24.9m
[INFO]: 2023-10-26 09:11:38,444 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0260, cls: 0.0250, iou: 0.0452), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 22.1m
[INFO]: 2023-10-26 09:14:12,754 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0326, cls: 0.0297, iou: 0.0490), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 19.3m
[INFO]: 2023-10-26 09:16:44,572 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0264, cls: 0.0266, iou: 0.0452), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 16.6m
[INFO]: 2023-10-26 09:19:18,393 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0263, cls: 0.0255, iou: 0.0445), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 13.8m
[INFO]: 2023-10-26 09:21:52,667 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0266, cls: 0.0266, iou: 0.0447), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 11.0m
[INFO]: 2023-10-26 09:24:28,619 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0272, cls: 0.0266, iou: 0.0439), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 8.3m
[INFO]: 2023-10-26 09:27:03,684 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0290, cls: 0.0272, iou: 0.0455), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 5.5m
[INFO]: 2023-10-26 09:29:37,897 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0231, cls: 0.0247, iou: 0.0408), misc (ry: 0.08, z: 0.17), dt: 0.66, eta: 2.8m
[INFO]: 2023-10-26 09:32:12,761 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0298, cls: 0.0282, iou: 0.0460), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 0.7s
[INFO]: 2023-10-26 09:34:38,741 testing 1000/3769, dt: 0.144, eta: 6.7m
[INFO]: 2023-10-26 09:37:03,902 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-10-26 09:39:26,783 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-10-26 09:41:24,456 test_iter 50000 2d car --> easy: 0.9188, mod: 0.8452, hard: 0.6813
[INFO]: 2023-10-26 09:41:24,457 test_iter 50000 gr car --> easy: 0.2681, mod: 0.2159, hard: 0.1819
[INFO]: 2023-10-26 09:41:24,458 test_iter 50000 3d car --> easy: 0.2032, mod: 0.1727, hard: 0.1534
[INFO]: 2023-10-26 09:41:24,459 test_iter 50000 2d pedestrian --> easy: 0.6628, mod: 0.5851, hard: 0.5038
[INFO]: 2023-10-26 09:41:24,459 test_iter 50000 gr pedestrian --> easy: 0.0675, mod: 0.0575, hard: 0.0568
[INFO]: 2023-10-26 09:41:24,460 test_iter 50000 3d pedestrian --> easy: 0.0482, mod: 0.0536, hard: 0.0486
[INFO]: 2023-10-26 09:41:24,460 test_iter 50000 2d cyclist --> easy: 0.6641, mod: 0.4215, hard: 0.4146
[INFO]: 2023-10-26 09:41:24,461 test_iter 50000 gr cyclist --> easy: 0.1080, mod: 0.1000, hard: 0.1002
[INFO]: 2023-10-26 09:41:24,461 test_iter 50000 3d cyclist --> easy: 0.1038, mod: 0.0909, hard: 0.0909
