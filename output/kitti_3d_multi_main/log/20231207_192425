[INFO]: 2023-12-07 19:24:25,112 Preloading imdb.
[INFO]: 2023-12-07 19:24:26,590 weighted respectively as 1.05 and 0.00
[INFO]: 2023-12-07 19:24:26,590 Found 3534 foreground and 178 empty images
[INFO]: 2023-12-07 19:24:29,063 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-12-07 19:24:29,067 conf: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000_pkl'
}
[INFO]: 2023-12-07 19:24:29,747 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): PConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-12-07 19:27:06,915 iter: 250, acc (bg: 1.00, fg: 0.93, iou: 0.85), loss (bbox_3d: 0.4487, cls: 0.1043, iou: 0.1678), misc (ry: 0.53, z: 0.79), dt: 0.63, eta: 8.7h
[INFO]: 2023-12-07 19:29:38,557 iter: 500, acc (bg: 0.99, fg: 0.80, iou: 0.77), loss (bbox_3d: 1.1120, cls: 0.2424, iou: 0.2782), misc (ry: 1.16, z: 1.34), dt: 0.62, eta: 8.5h
[INFO]: 2023-12-07 19:32:12,653 iter: 750, acc (bg: 1.00, fg: 0.89, iou: 0.81), loss (bbox_3d: 0.7194, cls: 0.1334, iou: 0.2159), misc (ry: 0.76, z: 1.08), dt: 0.62, eta: 8.5h
[INFO]: 2023-12-07 19:34:46,567 iter: 1000, acc (bg: 1.00, fg: 0.89, iou: 0.81), loss (bbox_3d: 0.7241, cls: 0.1380, iou: 0.2223), misc (ry: 0.76, z: 1.05), dt: 0.62, eta: 8.4h
[INFO]: 2023-12-07 19:37:20,752 iter: 1250, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5530, cls: 0.1182, iou: 0.1931), misc (ry: 0.58, z: 0.91), dt: 0.62, eta: 8.4h
[INFO]: 2023-12-07 19:39:55,291 iter: 1500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4893, cls: 0.0945, iou: 0.1854), misc (ry: 0.57, z: 0.85), dt: 0.62, eta: 8.3h
[INFO]: 2023-12-07 19:42:31,358 iter: 1750, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4504, cls: 0.0886, iou: 0.1699), misc (ry: 0.57, z: 0.79), dt: 0.62, eta: 8.3h
[INFO]: 2023-12-07 19:45:05,198 iter: 2000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4173, cls: 0.0829, iou: 0.1687), misc (ry: 0.53, z: 0.77), dt: 0.62, eta: 8.2h
[INFO]: 2023-12-07 19:47:40,315 iter: 2250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3618, cls: 0.0727, iou: 0.1595), misc (ry: 0.47, z: 0.66), dt: 0.62, eta: 8.2h
[INFO]: 2023-12-07 19:50:16,661 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3264, cls: 0.0702, iou: 0.1549), misc (ry: 0.41, z: 0.69), dt: 0.62, eta: 8.2h
[INFO]: 2023-12-07 19:52:48,511 iter: 2750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3515, cls: 0.0699, iou: 0.1509), misc (ry: 0.47, z: 0.70), dt: 0.62, eta: 8.1h
[INFO]: 2023-12-07 19:55:23,887 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3255, cls: 0.0718, iou: 0.1555), misc (ry: 0.44, z: 0.64), dt: 0.62, eta: 8.1h
[INFO]: 2023-12-07 19:57:58,540 iter: 3250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3638, cls: 0.0639, iou: 0.1545), misc (ry: 0.44, z: 0.73), dt: 0.62, eta: 8.0h
[INFO]: 2023-12-07 20:00:31,073 iter: 3500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3281, cls: 0.0744, iou: 0.1545), misc (ry: 0.42, z: 0.64), dt: 0.62, eta: 8.0h
[INFO]: 2023-12-07 20:03:07,596 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3236, cls: 0.0693, iou: 0.1517), misc (ry: 0.45, z: 0.64), dt: 0.62, eta: 7.9h
[INFO]: 2023-12-07 20:05:45,240 iter: 4000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2688, cls: 0.0653, iou: 0.1451), misc (ry: 0.37, z: 0.62), dt: 0.62, eta: 7.9h
[INFO]: 2023-12-07 20:08:18,986 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2669, cls: 0.0598, iou: 0.1399), misc (ry: 0.35, z: 0.62), dt: 0.62, eta: 7.9h
[INFO]: 2023-12-07 20:10:53,391 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2578, cls: 0.0570, iou: 0.1394), misc (ry: 0.35, z: 0.65), dt: 0.62, eta: 7.8h
[INFO]: 2023-12-07 20:13:26,814 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2305, cls: 0.0537, iou: 0.1345), misc (ry: 0.32, z: 0.58), dt: 0.62, eta: 7.8h
[INFO]: 2023-12-07 20:16:03,669 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2239, cls: 0.0527, iou: 0.1312), misc (ry: 0.32, z: 0.59), dt: 0.62, eta: 7.7h
[INFO]: 2023-12-07 20:18:37,649 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2202, cls: 0.0575, iou: 0.1308), misc (ry: 0.27, z: 0.57), dt: 0.62, eta: 7.7h
[INFO]: 2023-12-07 20:21:11,577 iter: 5500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2702, cls: 0.0651, iou: 0.1442), misc (ry: 0.41, z: 0.60), dt: 0.62, eta: 7.6h
[INFO]: 2023-12-07 20:23:43,618 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2835, cls: 0.0603, iou: 0.1439), misc (ry: 0.39, z: 0.60), dt: 0.62, eta: 7.6h
[INFO]: 2023-12-07 20:26:17,726 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2480, cls: 0.0588, iou: 0.1374), misc (ry: 0.33, z: 0.63), dt: 0.62, eta: 7.6h
[INFO]: 2023-12-07 20:28:50,445 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2522, cls: 0.0534, iou: 0.1360), misc (ry: 0.36, z: 0.61), dt: 0.62, eta: 7.5h
[INFO]: 2023-12-07 20:31:23,735 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2246, cls: 0.0537, iou: 0.1309), misc (ry: 0.30, z: 0.59), dt: 0.62, eta: 7.5h
[INFO]: 2023-12-07 20:33:57,129 iter: 6750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2472, cls: 0.0635, iou: 0.1390), misc (ry: 0.35, z: 0.61), dt: 0.62, eta: 7.4h
[INFO]: 2023-12-07 20:36:32,469 iter: 7000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2270, cls: 0.0503, iou: 0.1274), misc (ry: 0.35, z: 0.54), dt: 0.62, eta: 7.4h
[INFO]: 2023-12-07 20:39:07,792 iter: 7250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2075, cls: 0.0524, iou: 0.1259), misc (ry: 0.32, z: 0.55), dt: 0.62, eta: 7.3h
[INFO]: 2023-12-07 20:41:41,970 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1804, cls: 0.0526, iou: 0.1205), misc (ry: 0.26, z: 0.51), dt: 0.62, eta: 7.3h
[INFO]: 2023-12-07 20:44:17,196 iter: 7750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1956, cls: 0.0493, iou: 0.1242), misc (ry: 0.29, z: 0.50), dt: 0.62, eta: 7.3h
[INFO]: 2023-12-07 20:46:51,776 iter: 8000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1797, cls: 0.0509, iou: 0.1174), misc (ry: 0.24, z: 0.53), dt: 0.62, eta: 7.2h
[INFO]: 2023-12-07 20:49:27,020 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1775, cls: 0.0509, iou: 0.1192), misc (ry: 0.25, z: 0.49), dt: 0.62, eta: 7.2h
[INFO]: 2023-12-07 20:51:58,890 iter: 8500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1704, cls: 0.0465, iou: 0.1197), misc (ry: 0.24, z: 0.50), dt: 0.62, eta: 7.1h
[INFO]: 2023-12-07 20:54:32,964 iter: 8750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1970, cls: 0.0529, iou: 0.1228), misc (ry: 0.31, z: 0.50), dt: 0.62, eta: 7.1h
[INFO]: 2023-12-07 20:57:08,062 iter: 9000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1552, cls: 0.0461, iou: 0.1153), misc (ry: 0.26, z: 0.50), dt: 0.62, eta: 7.0h
[INFO]: 2023-12-07 20:59:44,162 iter: 9250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1606, cls: 0.0465, iou: 0.1171), misc (ry: 0.27, z: 0.45), dt: 0.62, eta: 7.0h
[INFO]: 2023-12-07 21:02:19,598 iter: 9500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2144, cls: 0.0560, iou: 0.1250), misc (ry: 0.33, z: 0.52), dt: 0.62, eta: 7.0h
[INFO]: 2023-12-07 21:04:51,914 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1814, cls: 0.0487, iou: 0.1237), misc (ry: 0.29, z: 0.49), dt: 0.62, eta: 6.9h
[INFO]: 2023-12-07 21:07:26,036 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1800, cls: 0.0489, iou: 0.1221), misc (ry: 0.28, z: 0.52), dt: 0.62, eta: 6.9h
[INFO]: 2023-12-07 21:09:59,840 testing 1000/3769, dt: 0.149, eta: 6.9m
[INFO]: 2023-12-07 21:12:29,094 testing 2000/3769, dt: 0.149, eta: 4.4m
[INFO]: 2023-12-07 21:14:59,162 testing 3000/3769, dt: 0.149, eta: 1.9m
[INFO]: 2023-12-07 21:17:03,347 test_iter 10000 2d car --> easy: 0.8674, mod: 0.8056, hard: 0.6596
[INFO]: 2023-12-07 21:17:03,349 test_iter 10000 gr car --> easy: 0.1555, mod: 0.1281, hard: 0.1102
[INFO]: 2023-12-07 21:17:03,350 test_iter 10000 3d car --> easy: 0.1090, mod: 0.0884, hard: 0.0708
[INFO]: 2023-12-07 21:17:03,350 test_iter 10000 2d pedestrian --> easy: 0.6972, mod: 0.5671, hard: 0.4885
[INFO]: 2023-12-07 21:17:03,351 test_iter 10000 gr pedestrian --> easy: 0.0607, mod: 0.0619, hard: 0.0517
[INFO]: 2023-12-07 21:17:03,352 test_iter 10000 3d pedestrian --> easy: 0.0535, mod: 0.0487, hard: 0.0409
[INFO]: 2023-12-07 21:17:03,352 test_iter 10000 2d cyclist --> easy: 0.3771, mod: 0.2759, hard: 0.2718
[INFO]: 2023-12-07 21:17:03,353 test_iter 10000 gr cyclist --> easy: 0.0116, mod: 0.0093, hard: 0.0182
[INFO]: 2023-12-07 21:17:03,353 test_iter 10000 3d cyclist --> easy: 0.0114, mod: 0.0092, hard: 0.0152
[INFO]: 2023-12-07 21:19:39,433 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1596, cls: 0.0472, iou: 0.1179), misc (ry: 0.25, z: 0.45), dt: 0.67, eta: 7.4h
[INFO]: 2023-12-07 21:22:14,804 iter: 10500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1481, cls: 0.0440, iou: 0.1125), misc (ry: 0.23, z: 0.46), dt: 0.67, eta: 7.4h
[INFO]: 2023-12-07 21:24:50,680 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1377, cls: 0.0441, iou: 0.1121), misc (ry: 0.23, z: 0.43), dt: 0.67, eta: 7.3h
[INFO]: 2023-12-07 21:27:23,707 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1600, cls: 0.0455, iou: 0.1134), misc (ry: 0.27, z: 0.46), dt: 0.67, eta: 7.3h
[INFO]: 2023-12-07 21:29:56,245 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1923, cls: 0.0485, iou: 0.1231), misc (ry: 0.30, z: 0.48), dt: 0.67, eta: 7.2h
[INFO]: 2023-12-07 21:32:31,855 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1878, cls: 0.0505, iou: 0.1225), misc (ry: 0.31, z: 0.56), dt: 0.67, eta: 7.1h
[INFO]: 2023-12-07 21:35:06,810 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1659, cls: 0.0492, iou: 0.1156), misc (ry: 0.25, z: 0.47), dt: 0.67, eta: 7.1h
[INFO]: 2023-12-07 21:37:41,231 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1602, cls: 0.0449, iou: 0.1189), misc (ry: 0.25, z: 0.51), dt: 0.67, eta: 7.0h
[INFO]: 2023-12-07 21:40:16,390 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1834, cls: 0.0466, iou: 0.1177), misc (ry: 0.32, z: 0.56), dt: 0.67, eta: 7.0h
[INFO]: 2023-12-07 21:42:50,645 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1634, cls: 0.0475, iou: 0.1145), misc (ry: 0.28, z: 0.45), dt: 0.66, eta: 6.9h
[INFO]: 2023-12-07 21:45:26,391 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1580, cls: 0.0439, iou: 0.1151), misc (ry: 0.26, z: 0.51), dt: 0.66, eta: 6.9h
[INFO]: 2023-12-07 21:48:00,196 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1452, cls: 0.0448, iou: 0.1121), misc (ry: 0.24, z: 0.47), dt: 0.66, eta: 6.8h
[INFO]: 2023-12-07 21:50:36,564 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1360, cls: 0.0447, iou: 0.1097), misc (ry: 0.21, z: 0.42), dt: 0.66, eta: 6.8h
[INFO]: 2023-12-07 21:53:07,865 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1386, cls: 0.0428, iou: 0.1075), misc (ry: 0.22, z: 0.43), dt: 0.66, eta: 6.7h
[INFO]: 2023-12-07 21:55:43,021 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1244, cls: 0.0440, iou: 0.1030), misc (ry: 0.20, z: 0.40), dt: 0.66, eta: 6.6h
[INFO]: 2023-12-07 21:58:15,507 iter: 14000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1231, cls: 0.0386, iou: 0.1024), misc (ry: 0.20, z: 0.45), dt: 0.66, eta: 6.6h
[INFO]: 2023-12-07 22:00:48,750 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1170, cls: 0.0392, iou: 0.1014), misc (ry: 0.21, z: 0.39), dt: 0.66, eta: 6.5h
[INFO]: 2023-12-07 22:03:19,059 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1398, cls: 0.0418, iou: 0.1097), misc (ry: 0.24, z: 0.48), dt: 0.66, eta: 6.5h
[INFO]: 2023-12-07 22:05:56,317 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1714, cls: 0.0450, iou: 0.1117), misc (ry: 0.31, z: 0.46), dt: 0.66, eta: 6.4h
[INFO]: 2023-12-07 22:08:30,333 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1580, cls: 0.0492, iou: 0.1177), misc (ry: 0.28, z: 0.46), dt: 0.66, eta: 6.4h
[INFO]: 2023-12-07 22:11:03,004 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1649, cls: 0.0490, iou: 0.1154), misc (ry: 0.27, z: 0.48), dt: 0.66, eta: 6.3h
[INFO]: 2023-12-07 22:13:37,571 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1378, cls: 0.0419, iou: 0.1092), misc (ry: 0.22, z: 0.49), dt: 0.65, eta: 6.3h
[INFO]: 2023-12-07 22:16:12,895 iter: 15750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1347, cls: 0.0429, iou: 0.1090), misc (ry: 0.21, z: 0.48), dt: 0.65, eta: 6.2h
[INFO]: 2023-12-07 22:18:46,292 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1135, cls: 0.0392, iou: 0.1005), misc (ry: 0.19, z: 0.42), dt: 0.65, eta: 6.2h
[INFO]: 2023-12-07 22:21:22,053 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1158, cls: 0.0406, iou: 0.1012), misc (ry: 0.20, z: 0.43), dt: 0.65, eta: 6.1h
[INFO]: 2023-12-07 22:23:58,720 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1271, cls: 0.0438, iou: 0.1023), misc (ry: 0.22, z: 0.44), dt: 0.65, eta: 6.1h
[INFO]: 2023-12-07 22:26:32,905 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1330, cls: 0.0409, iou: 0.1022), misc (ry: 0.27, z: 0.41), dt: 0.65, eta: 6.0h
[INFO]: 2023-12-07 22:29:05,847 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1145, cls: 0.0398, iou: 0.1002), misc (ry: 0.20, z: 0.42), dt: 0.65, eta: 6.0h
[INFO]: 2023-12-07 22:31:40,602 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1159, cls: 0.0430, iou: 0.1048), misc (ry: 0.20, z: 0.40), dt: 0.65, eta: 5.9h
[INFO]: 2023-12-07 22:34:16,427 iter: 17500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1256, cls: 0.0425, iou: 0.1037), misc (ry: 0.22, z: 0.41), dt: 0.65, eta: 5.9h
[INFO]: 2023-12-07 22:36:50,764 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1251, cls: 0.0410, iou: 0.1048), misc (ry: 0.22, z: 0.45), dt: 0.65, eta: 5.8h
[INFO]: 2023-12-07 22:39:23,804 iter: 18000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1242, cls: 0.0381, iou: 0.0998), misc (ry: 0.23, z: 0.45), dt: 0.65, eta: 5.8h
[INFO]: 2023-12-07 22:42:00,153 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1095, cls: 0.0407, iou: 0.0987), misc (ry: 0.21, z: 0.40), dt: 0.65, eta: 5.7h
[INFO]: 2023-12-07 22:44:35,345 iter: 18500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1272, cls: 0.0416, iou: 0.1014), misc (ry: 0.23, z: 0.40), dt: 0.65, eta: 5.7h
[INFO]: 2023-12-07 22:47:10,401 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1213, cls: 0.0442, iou: 0.1043), misc (ry: 0.22, z: 0.41), dt: 0.65, eta: 5.6h
[INFO]: 2023-12-07 22:49:45,925 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0972, cls: 0.0392, iou: 0.0989), misc (ry: 0.18, z: 0.38), dt: 0.65, eta: 5.6h
[INFO]: 2023-12-07 22:52:18,743 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0997, cls: 0.0398, iou: 0.0953), misc (ry: 0.18, z: 0.38), dt: 0.65, eta: 5.5h
[INFO]: 2023-12-07 22:54:54,661 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0926, cls: 0.0384, iou: 0.0943), misc (ry: 0.18, z: 0.37), dt: 0.65, eta: 5.5h
[INFO]: 2023-12-07 22:57:30,758 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1013, cls: 0.0388, iou: 0.0951), misc (ry: 0.19, z: 0.39), dt: 0.65, eta: 5.4h
[INFO]: 2023-12-07 23:00:04,475 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0902, cls: 0.0351, iou: 0.0911), misc (ry: 0.18, z: 0.39), dt: 0.65, eta: 5.4h
[INFO]: 2023-12-07 23:02:35,607 testing 1000/3769, dt: 0.146, eta: 6.8m
[INFO]: 2023-12-07 23:05:02,210 testing 2000/3769, dt: 0.147, eta: 4.3m
[INFO]: 2023-12-07 23:07:30,240 testing 3000/3769, dt: 0.147, eta: 1.9m
[INFO]: 2023-12-07 23:09:30,707 test_iter 20000 2d car --> easy: 0.8924, mod: 0.8268, hard: 0.6730
[INFO]: 2023-12-07 23:09:30,709 test_iter 20000 gr car --> easy: 0.2544, mod: 0.2088, hard: 0.1750
[INFO]: 2023-12-07 23:09:30,710 test_iter 20000 3d car --> easy: 0.1986, mod: 0.1654, hard: 0.1486
[INFO]: 2023-12-07 23:09:30,710 test_iter 20000 2d pedestrian --> easy: 0.6740, mod: 0.5890, hard: 0.5058
[INFO]: 2023-12-07 23:09:30,711 test_iter 20000 gr pedestrian --> easy: 0.0477, mod: 0.0433, hard: 0.0369
[INFO]: 2023-12-07 23:09:30,712 test_iter 20000 3d pedestrian --> easy: 0.0420, mod: 0.0378, hard: 0.0334
[INFO]: 2023-12-07 23:09:30,712 test_iter 20000 2d cyclist --> easy: 0.4847, mod: 0.3461, hard: 0.3449
[INFO]: 2023-12-07 23:09:30,713 test_iter 20000 gr cyclist --> easy: 0.0227, mod: 0.0182, hard: 0.0182
[INFO]: 2023-12-07 23:09:30,713 test_iter 20000 3d cyclist --> easy: 0.0182, mod: 0.0182, hard: 0.0182
[INFO]: 2023-12-07 23:12:06,056 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0887, cls: 0.0381, iou: 0.0911), misc (ry: 0.16, z: 0.35), dt: 0.67, eta: 5.6h
[INFO]: 2023-12-07 23:14:40,068 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0890, cls: 0.0370, iou: 0.0921), misc (ry: 0.17, z: 0.38), dt: 0.67, eta: 5.5h
[INFO]: 2023-12-07 23:17:13,823 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0818, cls: 0.0350, iou: 0.0861), misc (ry: 0.15, z: 0.37), dt: 0.67, eta: 5.5h
[INFO]: 2023-12-07 23:19:48,882 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0848, cls: 0.0346, iou: 0.0885), misc (ry: 0.15, z: 0.34), dt: 0.67, eta: 5.4h
[INFO]: 2023-12-07 23:22:22,137 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0848, cls: 0.0349, iou: 0.0900), misc (ry: 0.15, z: 0.38), dt: 0.67, eta: 5.4h
[INFO]: 2023-12-07 23:24:56,884 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0882, cls: 0.0358, iou: 0.0896), misc (ry: 0.19, z: 0.35), dt: 0.67, eta: 5.3h
[INFO]: 2023-12-07 23:27:32,952 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0897, cls: 0.0365, iou: 0.0915), misc (ry: 0.17, z: 0.36), dt: 0.67, eta: 5.3h
[INFO]: 2023-12-07 23:30:07,231 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0941, cls: 0.0367, iou: 0.0917), misc (ry: 0.18, z: 0.38), dt: 0.67, eta: 5.2h
[INFO]: 2023-12-07 23:32:43,561 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0981, cls: 0.0372, iou: 0.0913), misc (ry: 0.19, z: 0.40), dt: 0.67, eta: 5.2h
[INFO]: 2023-12-07 23:35:19,741 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0367, iou: 0.0895), misc (ry: 0.17, z: 0.35), dt: 0.67, eta: 5.1h
[INFO]: 2023-12-07 23:37:52,868 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0822, cls: 0.0359, iou: 0.0860), misc (ry: 0.16, z: 0.33), dt: 0.67, eta: 5.1h
[INFO]: 2023-12-07 23:40:26,745 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0815, cls: 0.0353, iou: 0.0899), misc (ry: 0.16, z: 0.34), dt: 0.67, eta: 5.0h
[INFO]: 2023-12-07 23:43:03,132 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0815, cls: 0.0385, iou: 0.0881), misc (ry: 0.16, z: 0.35), dt: 0.67, eta: 5.0h
[INFO]: 2023-12-07 23:45:37,565 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0722, cls: 0.0358, iou: 0.0834), misc (ry: 0.14, z: 0.33), dt: 0.67, eta: 4.9h
[INFO]: 2023-12-07 23:48:12,240 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0668, cls: 0.0324, iou: 0.0813), misc (ry: 0.15, z: 0.33), dt: 0.67, eta: 4.9h
[INFO]: 2023-12-07 23:50:47,545 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0702, cls: 0.0341, iou: 0.0831), misc (ry: 0.14, z: 0.30), dt: 0.67, eta: 4.8h
[INFO]: 2023-12-07 23:53:23,111 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0733, cls: 0.0349, iou: 0.0844), misc (ry: 0.15, z: 0.32), dt: 0.67, eta: 4.8h
[INFO]: 2023-12-07 23:56:00,615 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0764, cls: 0.0371, iou: 0.0869), misc (ry: 0.15, z: 0.33), dt: 0.66, eta: 4.7h
[INFO]: 2023-12-07 23:58:34,789 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0764, cls: 0.0348, iou: 0.0852), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 4.7h
[INFO]: 2023-12-08 00:01:09,998 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0788, cls: 0.0359, iou: 0.0861), misc (ry: 0.16, z: 0.31), dt: 0.66, eta: 4.6h
[INFO]: 2023-12-08 00:03:45,902 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0723, cls: 0.0358, iou: 0.0841), misc (ry: 0.14, z: 0.33), dt: 0.66, eta: 4.6h
[INFO]: 2023-12-08 00:06:22,254 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0733, cls: 0.0337, iou: 0.0833), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 4.5h
[INFO]: 2023-12-08 00:08:57,757 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0344, iou: 0.0853), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 4.5h
[INFO]: 2023-12-08 00:11:32,276 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0712, cls: 0.0323, iou: 0.0834), misc (ry: 0.14, z: 0.36), dt: 0.66, eta: 4.4h
[INFO]: 2023-12-08 00:14:05,675 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0672, cls: 0.0330, iou: 0.0811), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 4.4h
[INFO]: 2023-12-08 00:16:40,328 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0952, cls: 0.0353, iou: 0.0859), misc (ry: 0.21, z: 0.38), dt: 0.66, eta: 4.3h
[INFO]: 2023-12-08 00:19:14,637 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0860, cls: 0.0348, iou: 0.0817), misc (ry: 0.20, z: 0.35), dt: 0.66, eta: 4.3h
[INFO]: 2023-12-08 00:21:48,261 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0746, cls: 0.0355, iou: 0.0849), misc (ry: 0.15, z: 0.34), dt: 0.66, eta: 4.2h
[INFO]: 2023-12-08 00:24:22,373 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0692, cls: 0.0340, iou: 0.0787), misc (ry: 0.15, z: 0.31), dt: 0.66, eta: 4.2h
[INFO]: 2023-12-08 00:26:57,994 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0331, iou: 0.0826), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 4.1h
[INFO]: 2023-12-08 00:29:33,313 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0691, cls: 0.0343, iou: 0.0804), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 4.1h
[INFO]: 2023-12-08 00:32:08,507 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0735, cls: 0.0353, iou: 0.0825), misc (ry: 0.14, z: 0.31), dt: 0.66, eta: 4.0h
[INFO]: 2023-12-08 00:34:44,928 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0606, cls: 0.0324, iou: 0.0752), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 4.0h
[INFO]: 2023-12-08 00:37:19,230 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0626, cls: 0.0317, iou: 0.0767), misc (ry: 0.14, z: 0.30), dt: 0.66, eta: 3.9h
[INFO]: 2023-12-08 00:39:53,382 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0631, cls: 0.0343, iou: 0.0797), misc (ry: 0.13, z: 0.31), dt: 0.66, eta: 3.9h
[INFO]: 2023-12-08 00:42:29,654 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0591, cls: 0.0336, iou: 0.0756), misc (ry: 0.13, z: 0.31), dt: 0.66, eta: 3.8h
[INFO]: 2023-12-08 00:45:04,426 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0574, cls: 0.0323, iou: 0.0762), misc (ry: 0.13, z: 0.31), dt: 0.66, eta: 3.8h
[INFO]: 2023-12-08 00:47:40,077 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0586, cls: 0.0327, iou: 0.0764), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 3.7h
[INFO]: 2023-12-08 00:50:14,470 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0557, cls: 0.0319, iou: 0.0740), misc (ry: 0.13, z: 0.29), dt: 0.66, eta: 3.7h
[INFO]: 2023-12-08 00:52:47,542 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0587, cls: 0.0329, iou: 0.0768), misc (ry: 0.13, z: 0.30), dt: 0.66, eta: 3.6h
[INFO]: 2023-12-08 00:55:19,020 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-12-08 00:57:42,510 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-12-08 01:00:05,340 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-12-08 01:02:07,147 test_iter 30000 2d car --> easy: 0.8957, mod: 0.8283, hard: 0.6711
[INFO]: 2023-12-08 01:02:07,148 test_iter 30000 gr car --> easy: 0.2641, mod: 0.2098, hard: 0.1754
[INFO]: 2023-12-08 01:02:07,149 test_iter 30000 3d car --> easy: 0.2006, mod: 0.1635, hard: 0.1339
[INFO]: 2023-12-08 01:02:07,150 test_iter 30000 2d pedestrian --> easy: 0.6733, mod: 0.5908, hard: 0.5065
[INFO]: 2023-12-08 01:02:07,150 test_iter 30000 gr pedestrian --> easy: 0.0678, mod: 0.0653, hard: 0.0575
[INFO]: 2023-12-08 01:02:07,151 test_iter 30000 3d pedestrian --> easy: 0.0632, mod: 0.0558, hard: 0.0554
[INFO]: 2023-12-08 01:02:07,152 test_iter 30000 2d cyclist --> easy: 0.4853, mod: 0.3192, hard: 0.3150
[INFO]: 2023-12-08 01:02:07,152 test_iter 30000 gr cyclist --> easy: 0.0218, mod: 0.0140, hard: 0.0135
[INFO]: 2023-12-08 01:02:07,153 test_iter 30000 3d cyclist --> easy: 0.0183, mod: 0.0125, hard: 0.0103
[INFO]: 2023-12-08 01:04:43,618 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0584, cls: 0.0344, iou: 0.0750), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.7h
[INFO]: 2023-12-08 01:07:19,885 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0626, cls: 0.0326, iou: 0.0768), misc (ry: 0.13, z: 0.32), dt: 0.67, eta: 3.7h
[INFO]: 2023-12-08 01:09:55,783 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0598, cls: 0.0345, iou: 0.0759), misc (ry: 0.14, z: 0.29), dt: 0.67, eta: 3.6h
[INFO]: 2023-12-08 01:12:29,063 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0625, cls: 0.0329, iou: 0.0750), misc (ry: 0.13, z: 0.29), dt: 0.67, eta: 3.6h
[INFO]: 2023-12-08 01:15:05,411 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0482, cls: 0.0301, iou: 0.0701), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.5h
[INFO]: 2023-12-08 01:17:39,343 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0549, cls: 0.0299, iou: 0.0730), misc (ry: 0.12, z: 0.31), dt: 0.67, eta: 3.5h
[INFO]: 2023-12-08 01:20:12,837 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0532, cls: 0.0318, iou: 0.0715), misc (ry: 0.12, z: 0.29), dt: 0.67, eta: 3.4h
[INFO]: 2023-12-08 01:22:48,299 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0514, cls: 0.0317, iou: 0.0709), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.4h
[INFO]: 2023-12-08 01:25:21,992 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0483, cls: 0.0295, iou: 0.0679), misc (ry: 0.11, z: 0.28), dt: 0.67, eta: 3.3h
[INFO]: 2023-12-08 01:27:56,669 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0509, cls: 0.0317, iou: 0.0704), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.3h
[INFO]: 2023-12-08 01:30:30,672 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0515, cls: 0.0308, iou: 0.0692), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.2h
[INFO]: 2023-12-08 01:33:05,911 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0490, cls: 0.0310, iou: 0.0680), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 3.2h
[INFO]: 2023-12-08 01:35:40,010 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0498, cls: 0.0309, iou: 0.0686), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.1h
[INFO]: 2023-12-08 01:38:16,751 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0504, cls: 0.0311, iou: 0.0697), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 3.1h
[INFO]: 2023-12-08 01:40:49,522 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0470, cls: 0.0296, iou: 0.0666), misc (ry: 0.11, z: 0.27), dt: 0.67, eta: 3.0h
[INFO]: 2023-12-08 01:43:24,270 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0504, cls: 0.0320, iou: 0.0703), misc (ry: 0.12, z: 0.27), dt: 0.67, eta: 3.0h
[INFO]: 2023-12-08 01:45:56,324 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0431, cls: 0.0310, iou: 0.0653), misc (ry: 0.11, z: 0.25), dt: 0.67, eta: 2.9h
[INFO]: 2023-12-08 01:48:31,077 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0520, cls: 0.0336, iou: 0.0723), misc (ry: 0.12, z: 0.28), dt: 0.67, eta: 2.9h
[INFO]: 2023-12-08 01:51:06,228 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0454, cls: 0.0303, iou: 0.0666), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 2.8h
[INFO]: 2023-12-08 01:53:41,804 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0448, cls: 0.0300, iou: 0.0680), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 2.8h
[INFO]: 2023-12-08 01:56:16,102 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0295, iou: 0.0651), misc (ry: 0.11, z: 0.26), dt: 0.67, eta: 2.7h
[INFO]: 2023-12-08 01:58:48,665 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0287, iou: 0.0632), misc (ry: 0.11, z: 0.25), dt: 0.67, eta: 2.7h
[INFO]: 2023-12-08 02:01:21,492 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0453, cls: 0.0301, iou: 0.0659), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 2.6h
[INFO]: 2023-12-08 02:03:55,243 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0414, cls: 0.0293, iou: 0.0643), misc (ry: 0.11, z: 0.24), dt: 0.67, eta: 2.6h
[INFO]: 2023-12-08 02:06:27,958 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0444, cls: 0.0302, iou: 0.0645), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 2.5h
[INFO]: 2023-12-08 02:09:02,996 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0402, cls: 0.0304, iou: 0.0628), misc (ry: 0.11, z: 0.23), dt: 0.67, eta: 2.5h
[INFO]: 2023-12-08 02:11:36,568 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0365, cls: 0.0279, iou: 0.0596), misc (ry: 0.10, z: 0.24), dt: 0.66, eta: 2.4h
[INFO]: 2023-12-08 02:14:14,214 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0322, iou: 0.0639), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.4h
[INFO]: 2023-12-08 02:16:49,486 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0372, cls: 0.0277, iou: 0.0596), misc (ry: 0.10, z: 0.24), dt: 0.66, eta: 2.4h
[INFO]: 2023-12-08 02:19:24,253 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0383, cls: 0.0286, iou: 0.0606), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.3h
[INFO]: 2023-12-08 02:21:56,727 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0285, iou: 0.0600), misc (ry: 0.10, z: 0.24), dt: 0.66, eta: 2.3h
[INFO]: 2023-12-08 02:24:31,723 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0390, cls: 0.0299, iou: 0.0603), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.2h
[INFO]: 2023-12-08 02:27:05,963 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0373, cls: 0.0289, iou: 0.0594), misc (ry: 0.10, z: 0.23), dt: 0.66, eta: 2.2h
[INFO]: 2023-12-08 02:29:41,893 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0418, cls: 0.0299, iou: 0.0621), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.1h
[INFO]: 2023-12-08 02:32:17,703 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0456, cls: 0.0306, iou: 0.0632), misc (ry: 0.12, z: 0.26), dt: 0.66, eta: 2.1h
[INFO]: 2023-12-08 02:34:52,211 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0292, iou: 0.0606), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 2.0h
[INFO]: 2023-12-08 02:37:27,814 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0374, cls: 0.0304, iou: 0.0593), misc (ry: 0.10, z: 0.22), dt: 0.66, eta: 2.0h
[INFO]: 2023-12-08 02:40:02,725 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0305, iou: 0.0598), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 1.9h
[INFO]: 2023-12-08 02:42:36,228 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0367, cls: 0.0283, iou: 0.0589), misc (ry: 0.10, z: 0.22), dt: 0.66, eta: 1.9h
[INFO]: 2023-12-08 02:45:12,284 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0294, iou: 0.0586), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 1.8h
[INFO]: 2023-12-08 02:47:44,457 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-12-08 02:50:08,984 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-12-08 02:52:33,543 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-12-08 02:54:34,461 test_iter 40000 2d car --> easy: 0.9151, mod: 0.8368, hard: 0.6787
[INFO]: 2023-12-08 02:54:34,462 test_iter 40000 gr car --> easy: 0.2687, mod: 0.2113, hard: 0.1781
[INFO]: 2023-12-08 02:54:34,463 test_iter 40000 3d car --> easy: 0.2061, mod: 0.1678, hard: 0.1506
[INFO]: 2023-12-08 02:54:34,463 test_iter 40000 2d pedestrian --> easy: 0.6689, mod: 0.5879, hard: 0.5028
[INFO]: 2023-12-08 02:54:34,464 test_iter 40000 gr pedestrian --> easy: 0.0773, mod: 0.0648, hard: 0.0625
[INFO]: 2023-12-08 02:54:34,465 test_iter 40000 3d pedestrian --> easy: 0.0600, mod: 0.0590, hard: 0.0505
[INFO]: 2023-12-08 02:54:34,465 test_iter 40000 2d cyclist --> easy: 0.5726, mod: 0.3998, hard: 0.3976
[INFO]: 2023-12-08 02:54:34,466 test_iter 40000 gr cyclist --> easy: 0.0339, mod: 0.0152, hard: 0.0151
[INFO]: 2023-12-08 02:54:34,466 test_iter 40000 3d cyclist --> easy: 0.0300, mod: 0.0130, hard: 0.0130
[INFO]: 2023-12-08 02:57:07,995 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0343, cls: 0.0284, iou: 0.0575), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.8h
[INFO]: 2023-12-08 02:59:42,210 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0284, iou: 0.0553), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.8h
[INFO]: 2023-12-08 03:02:18,288 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0316, cls: 0.0268, iou: 0.0558), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.7h
[INFO]: 2023-12-08 03:04:52,851 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0285, iou: 0.0558), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.7h
[INFO]: 2023-12-08 03:07:26,424 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0360, cls: 0.0292, iou: 0.0557), misc (ry: 0.10, z: 0.22), dt: 0.67, eta: 1.6h
[INFO]: 2023-12-08 03:10:01,401 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0350, cls: 0.0291, iou: 0.0554), misc (ry: 0.11, z: 0.21), dt: 0.67, eta: 1.6h
[INFO]: 2023-12-08 03:12:36,014 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0315, cls: 0.0288, iou: 0.0540), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.5h
[INFO]: 2023-12-08 03:15:09,863 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0316, cls: 0.0276, iou: 0.0539), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.5h
[INFO]: 2023-12-08 03:17:45,474 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0272, iou: 0.0532), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.4h
[INFO]: 2023-12-08 03:20:21,615 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0332, cls: 0.0288, iou: 0.0540), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.4h
[INFO]: 2023-12-08 03:22:55,911 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0346, cls: 0.0290, iou: 0.0563), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.4h
[INFO]: 2023-12-08 03:25:30,267 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0324, cls: 0.0264, iou: 0.0522), misc (ry: 0.09, z: 0.21), dt: 0.67, eta: 1.3h
[INFO]: 2023-12-08 03:28:06,107 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0285, iou: 0.0526), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.3h
[INFO]: 2023-12-08 03:30:41,321 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0332, cls: 0.0287, iou: 0.0534), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.2h
[INFO]: 2023-12-08 03:33:16,243 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0270, iou: 0.0504), misc (ry: 0.09, z: 0.21), dt: 0.67, eta: 1.2h
[INFO]: 2023-12-08 03:35:51,724 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0275, iou: 0.0511), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 1.1h
[INFO]: 2023-12-08 03:38:27,967 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0331, cls: 0.0292, iou: 0.0524), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.1h
[INFO]: 2023-12-08 03:41:03,766 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0349, cls: 0.0295, iou: 0.0530), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 1.0h
[INFO]: 2023-12-08 03:43:37,910 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0271, iou: 0.0510), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 58.6m
[INFO]: 2023-12-08 03:46:13,812 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0278, iou: 0.0497), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 55.8m
[INFO]: 2023-12-08 03:48:47,362 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0279, iou: 0.0525), misc (ry: 0.10, z: 0.20), dt: 0.67, eta: 52.9m
[INFO]: 2023-12-08 03:51:22,728 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0280, cls: 0.0264, iou: 0.0477), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 50.1m
[INFO]: 2023-12-08 03:54:01,086 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0305, cls: 0.0278, iou: 0.0501), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 47.3m
[INFO]: 2023-12-08 03:56:36,498 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0297, iou: 0.0500), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 44.5m
[INFO]: 2023-12-08 03:59:13,496 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0325, cls: 0.0270, iou: 0.0493), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 41.7m
[INFO]: 2023-12-08 04:01:50,079 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0284, iou: 0.0519), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 39.0m
[INFO]: 2023-12-08 04:04:25,400 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0265, cls: 0.0263, iou: 0.0464), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 36.2m
[INFO]: 2023-12-08 04:07:01,971 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0289, cls: 0.0268, iou: 0.0478), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 33.4m
[INFO]: 2023-12-08 04:09:38,203 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0285, iou: 0.0496), misc (ry: 0.10, z: 0.21), dt: 0.67, eta: 30.6m
[INFO]: 2023-12-08 04:12:14,293 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0269, cls: 0.0267, iou: 0.0458), misc (ry: 0.09, z: 0.18), dt: 0.67, eta: 27.8m
[INFO]: 2023-12-08 04:14:49,204 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0273, iou: 0.0480), misc (ry: 0.09, z: 0.20), dt: 0.67, eta: 25.0m
[INFO]: 2023-12-08 04:17:23,316 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0300, cls: 0.0271, iou: 0.0479), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 22.2m
[INFO]: 2023-12-08 04:19:59,861 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0275, cls: 0.0279, iou: 0.0465), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 19.4m
[INFO]: 2023-12-08 04:22:34,639 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0272, cls: 0.0263, iou: 0.0446), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 16.7m
[INFO]: 2023-12-08 04:25:09,298 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0241, cls: 0.0256, iou: 0.0427), misc (ry: 0.08, z: 0.17), dt: 0.67, eta: 13.9m
[INFO]: 2023-12-08 04:27:41,811 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0285, cls: 0.0259, iou: 0.0452), misc (ry: 0.09, z: 0.19), dt: 0.67, eta: 11.1m
[INFO]: 2023-12-08 04:30:16,289 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0297, cls: 0.0276, iou: 0.0469), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 8.3m
[INFO]: 2023-12-08 04:32:50,810 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0286, cls: 0.0260, iou: 0.0448), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 5.6m
[INFO]: 2023-12-08 04:35:27,025 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0257, cls: 0.0261, iou: 0.0438), misc (ry: 0.09, z: 0.18), dt: 0.66, eta: 2.8m
[INFO]: 2023-12-08 04:38:02,085 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0276, cls: 0.0266, iou: 0.0440), misc (ry: 0.09, z: 0.19), dt: 0.66, eta: 0.7s
[INFO]: 2023-12-08 04:40:31,118 testing 1000/3769, dt: 0.144, eta: 6.7m
[INFO]: 2023-12-08 04:42:57,175 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-12-08 04:45:21,349 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-12-08 04:47:21,541 test_iter 50000 2d car --> easy: 0.9026, mod: 0.8344, hard: 0.6756
[INFO]: 2023-12-08 04:47:21,542 test_iter 50000 gr car --> easy: 0.2340, mod: 0.1886, hard: 0.1541
[INFO]: 2023-12-08 04:47:21,543 test_iter 50000 3d car --> easy: 0.1690, mod: 0.1366, hard: 0.1172
[INFO]: 2023-12-08 04:47:21,544 test_iter 50000 2d pedestrian --> easy: 0.6612, mod: 0.5844, hard: 0.5013
[INFO]: 2023-12-08 04:47:21,544 test_iter 50000 gr pedestrian --> easy: 0.1317, mod: 0.1171, hard: 0.1151
[INFO]: 2023-12-08 04:47:21,545 test_iter 50000 3d pedestrian --> easy: 0.1134, mod: 0.1127, hard: 0.1073
[INFO]: 2023-12-08 04:47:21,545 test_iter 50000 2d cyclist --> easy: 0.6400, mod: 0.4048, hard: 0.3969
[INFO]: 2023-12-08 04:47:21,546 test_iter 50000 gr cyclist --> easy: 0.0292, mod: 0.0127, hard: 0.0136
[INFO]: 2023-12-08 04:47:21,547 test_iter 50000 3d cyclist --> easy: 0.0178, mod: 0.0102, hard: 0.0108
