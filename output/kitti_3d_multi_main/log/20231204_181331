[INFO]: 2023-12-04 18:13:31,516 Loading imdb kitti_split1
[INFO]: 2023-12-04 18:13:32,629 1000/3712, dt: 0.0011, eta: 3.0s
[INFO]: 2023-12-04 18:13:33,737 2000/3712, dt: 0.0011, eta: 1.9s
[INFO]: 2023-12-04 18:13:34,925 3000/3712, dt: 0.0011, eta: 0.8s
[INFO]: 2023-12-04 18:13:36,114 weighted respectively as 1.05 and 0.00
[INFO]: 2023-12-04 18:13:36,114 Found 3534 foreground and 178 empty images
[INFO]: 2023-12-04 18:13:38,384 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-12-04 18:13:38,783 Computing bbox regression mean..
[INFO]: 2023-12-04 18:16:41,779 Computing bbox regression stds..
[INFO]: 2023-12-04 18:19:46,497 used 814041 boxes with avg std 0.6826
[INFO]: 2023-12-04 18:19:46,502 conf: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          5000                                    
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000_pkl'
}
[INFO]: 2023-12-04 18:19:47,001 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-12-04 18:22:20,455 iter: 250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1561, cls: 0.0462, iou: 0.1175), misc (ry: 0.21, z: 0.53), dt: 0.62, eta: 8.5h
[INFO]: 2023-12-04 18:24:55,088 iter: 500, acc (bg: 1.00, fg: 0.87, iou: 0.81), loss (bbox_3d: 0.7080, cls: 0.1783, iou: 0.2169), misc (ry: 0.65, z: 1.09), dt: 0.62, eta: 8.5h
[INFO]: 2023-12-04 18:27:29,987 iter: 750, acc (bg: 1.00, fg: 0.86, iou: 0.79), loss (bbox_3d: 0.8543, cls: 0.1767, iou: 0.2431), misc (ry: 0.86, z: 1.17), dt: 0.62, eta: 8.5h
[INFO]: 2023-12-04 18:30:03,335 iter: 1000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5714, cls: 0.1109, iou: 0.1986), misc (ry: 0.57, z: 0.99), dt: 0.62, eta: 8.4h
[INFO]: 2023-12-04 18:32:37,449 iter: 1250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4973, cls: 0.0826, iou: 0.1821), misc (ry: 0.59, z: 0.85), dt: 0.62, eta: 8.4h
[INFO]: 2023-12-04 18:35:12,730 iter: 1500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4093, cls: 0.0851, iou: 0.1729), misc (ry: 0.46, z: 0.79), dt: 0.62, eta: 8.3h
[INFO]: 2023-12-04 18:37:48,061 iter: 1750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3796, cls: 0.0700, iou: 0.1567), misc (ry: 0.44, z: 0.77), dt: 0.62, eta: 8.3h
[INFO]: 2023-12-04 18:40:20,499 iter: 2000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3938, cls: 0.0717, iou: 0.1629), misc (ry: 0.52, z: 0.76), dt: 0.62, eta: 8.2h
[INFO]: 2023-12-04 18:42:54,188 iter: 2250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3630, cls: 0.0707, iou: 0.1591), misc (ry: 0.50, z: 0.70), dt: 0.62, eta: 8.2h
[INFO]: 2023-12-04 18:45:28,294 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3683, cls: 0.0666, iou: 0.1525), misc (ry: 0.48, z: 0.70), dt: 0.62, eta: 8.1h
[INFO]: 2023-12-04 18:48:01,348 iter: 2750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3194, cls: 0.0663, iou: 0.1514), misc (ry: 0.44, z: 0.65), dt: 0.62, eta: 8.1h
[INFO]: 2023-12-04 18:50:35,243 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3299, cls: 0.0681, iou: 0.1492), misc (ry: 0.41, z: 0.69), dt: 0.62, eta: 8.0h
[INFO]: 2023-12-04 18:53:09,352 iter: 3250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2773, cls: 0.0607, iou: 0.1467), misc (ry: 0.35, z: 0.63), dt: 0.62, eta: 8.0h
[INFO]: 2023-12-04 18:55:42,583 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2804, cls: 0.0629, iou: 0.1422), misc (ry: 0.39, z: 0.60), dt: 0.62, eta: 8.0h
[INFO]: 2023-12-04 18:58:16,928 iter: 3750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2709, cls: 0.0600, iou: 0.1433), misc (ry: 0.36, z: 0.62), dt: 0.62, eta: 7.9h
[INFO]: 2023-12-04 19:00:51,030 iter: 4000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3191, cls: 0.0666, iou: 0.1531), misc (ry: 0.41, z: 0.73), dt: 0.62, eta: 7.9h
[INFO]: 2023-12-04 19:03:25,577 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2561, cls: 0.0556, iou: 0.1401), misc (ry: 0.31, z: 0.63), dt: 0.62, eta: 7.8h
[INFO]: 2023-12-04 19:06:00,279 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2207, cls: 0.0577, iou: 0.1352), misc (ry: 0.32, z: 0.56), dt: 0.62, eta: 7.8h
[INFO]: 2023-12-04 19:08:33,840 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2123, cls: 0.0558, iou: 0.1323), misc (ry: 0.27, z: 0.56), dt: 0.62, eta: 7.7h
[INFO]: 2023-12-04 19:11:08,346 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2175, cls: 0.0544, iou: 0.1287), misc (ry: 0.27, z: 0.58), dt: 0.62, eta: 7.7h
[INFO]: 2023-12-04 19:13:38,386 testing 1000/3769, dt: 0.148, eta: 6.8m
[INFO]: 2023-12-04 19:16:05,425 testing 2000/3769, dt: 0.148, eta: 4.4m
[INFO]: 2023-12-04 19:18:32,956 testing 3000/3769, dt: 0.148, eta: 1.9m
[INFO]: 2023-12-04 19:20:35,265 test_iter 5000 2d car --> easy: 0.9012, mod: 0.8108, hard: 0.6602
[INFO]: 2023-12-04 19:20:35,267 test_iter 5000 gr car --> easy: 0.1955, mod: 0.1626, hard: 0.1457
[INFO]: 2023-12-04 19:20:35,267 test_iter 5000 3d car --> easy: 0.1460, mod: 0.1230, hard: 0.1179
[INFO]: 2023-12-04 19:20:35,268 test_iter 5000 2d pedestrian --> easy: 0.6803, mod: 0.5624, hard: 0.4830
[INFO]: 2023-12-04 19:20:35,269 test_iter 5000 gr pedestrian --> easy: 0.0414, mod: 0.0399, hard: 0.0305
[INFO]: 2023-12-04 19:20:35,269 test_iter 5000 3d pedestrian --> easy: 0.0347, mod: 0.0327, hard: 0.0280
[INFO]: 2023-12-04 19:20:35,270 test_iter 5000 2d cyclist --> easy: 0.5245, mod: 0.3098, hard: 0.3079
[INFO]: 2023-12-04 19:20:35,270 test_iter 5000 gr cyclist --> easy: 0.0281, mod: 0.0146, hard: 0.0155
[INFO]: 2023-12-04 19:20:35,271 test_iter 5000 3d cyclist --> easy: 0.0244, mod: 0.0135, hard: 0.0134
[INFO]: 2023-12-04 19:23:07,874 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2711, cls: 0.0593, iou: 0.1411), misc (ry: 0.39, z: 0.59), dt: 0.72, eta: 9.0h
[INFO]: 2023-12-04 19:25:42,952 iter: 5500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3004, cls: 0.0698, iou: 0.1490), misc (ry: 0.40, z: 0.65), dt: 0.72, eta: 8.9h
[INFO]: 2023-12-04 19:28:20,127 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2554, cls: 0.0605, iou: 0.1368), misc (ry: 0.39, z: 0.56), dt: 0.72, eta: 8.8h
[INFO]: 2023-12-04 19:30:53,472 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2733, cls: 0.0585, iou: 0.1401), misc (ry: 0.42, z: 0.61), dt: 0.71, eta: 8.7h
[INFO]: 2023-12-04 19:33:27,862 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2372, cls: 0.0553, iou: 0.1335), misc (ry: 0.31, z: 0.60), dt: 0.71, eta: 8.6h
[INFO]: 2023-12-04 19:36:02,245 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2230, cls: 0.0598, iou: 0.1346), misc (ry: 0.33, z: 0.57), dt: 0.70, eta: 8.5h
[INFO]: 2023-12-04 19:38:35,280 iter: 6750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3215, cls: 0.0666, iou: 0.1472), misc (ry: 0.51, z: 0.64), dt: 0.70, eta: 8.4h
[INFO]: 2023-12-04 19:41:08,553 iter: 7000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2797, cls: 0.0533, iou: 0.1359), misc (ry: 0.45, z: 0.55), dt: 0.70, eta: 8.3h
[INFO]: 2023-12-04 19:43:40,384 iter: 7250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2085, cls: 0.0544, iou: 0.1265), misc (ry: 0.33, z: 0.49), dt: 0.69, eta: 8.2h
[INFO]: 2023-12-04 19:46:14,514 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2181, cls: 0.0553, iou: 0.1311), misc (ry: 0.32, z: 0.58), dt: 0.69, eta: 8.2h
[INFO]: 2023-12-04 19:48:48,757 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1979, cls: 0.0506, iou: 0.1288), misc (ry: 0.30, z: 0.55), dt: 0.69, eta: 8.1h
[INFO]: 2023-12-04 19:51:22,720 iter: 8000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1908, cls: 0.0520, iou: 0.1224), misc (ry: 0.30, z: 0.49), dt: 0.69, eta: 8.0h
[INFO]: 2023-12-04 19:53:56,043 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1886, cls: 0.0496, iou: 0.1235), misc (ry: 0.26, z: 0.56), dt: 0.68, eta: 7.9h
[INFO]: 2023-12-04 19:56:30,509 iter: 8500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1724, cls: 0.0457, iou: 0.1196), misc (ry: 0.25, z: 0.54), dt: 0.68, eta: 7.9h
[INFO]: 2023-12-04 19:59:06,193 iter: 8750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1634, cls: 0.0466, iou: 0.1179), misc (ry: 0.25, z: 0.47), dt: 0.68, eta: 7.8h
[INFO]: 2023-12-04 20:01:41,187 iter: 9000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1509, cls: 0.0457, iou: 0.1148), misc (ry: 0.22, z: 0.50), dt: 0.68, eta: 7.7h
[INFO]: 2023-12-04 20:04:15,191 iter: 9250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1486, cls: 0.0473, iou: 0.1159), misc (ry: 0.26, z: 0.45), dt: 0.68, eta: 7.7h
[INFO]: 2023-12-04 20:06:48,765 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1539, cls: 0.0444, iou: 0.1126), misc (ry: 0.24, z: 0.48), dt: 0.68, eta: 7.6h
[INFO]: 2023-12-04 20:09:22,696 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1513, cls: 0.0466, iou: 0.1144), misc (ry: 0.25, z: 0.45), dt: 0.67, eta: 7.5h
[INFO]: 2023-12-04 20:11:57,452 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1587, cls: 0.0466, iou: 0.1123), misc (ry: 0.24, z: 0.46), dt: 0.67, eta: 7.5h
[INFO]: 2023-12-04 20:14:26,371 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-12-04 20:16:53,290 testing 2000/3769, dt: 0.147, eta: 4.3m
[INFO]: 2023-12-04 20:19:19,921 testing 3000/3769, dt: 0.147, eta: 1.9m
[INFO]: 2023-12-04 20:21:21,896 test_iter 10000 2d car --> easy: 0.8880, mod: 0.8229, hard: 0.6676
[INFO]: 2023-12-04 20:21:21,897 test_iter 10000 gr car --> easy: 0.2412, mod: 0.1825, hard: 0.1658
[INFO]: 2023-12-04 20:21:21,898 test_iter 10000 3d car --> easy: 0.1835, mod: 0.1426, hard: 0.1271
[INFO]: 2023-12-04 20:21:21,898 test_iter 10000 2d pedestrian --> easy: 0.6446, mod: 0.5601, hard: 0.4826
[INFO]: 2023-12-04 20:21:21,899 test_iter 10000 gr pedestrian --> easy: 0.0483, mod: 0.0465, hard: 0.0423
[INFO]: 2023-12-04 20:21:21,899 test_iter 10000 3d pedestrian --> easy: 0.0406, mod: 0.0372, hard: 0.0366
[INFO]: 2023-12-04 20:21:21,900 test_iter 10000 2d cyclist --> easy: 0.6261, mod: 0.3937, hard: 0.3840
[INFO]: 2023-12-04 20:21:21,901 test_iter 10000 gr cyclist --> easy: 0.0502, mod: 0.0411, hard: 0.0411
[INFO]: 2023-12-04 20:21:21,901 test_iter 10000 3d cyclist --> easy: 0.0441, mod: 0.0303, hard: 0.0303
[INFO]: 2023-12-04 20:23:53,673 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1531, cls: 0.0422, iou: 0.1104), misc (ry: 0.23, z: 0.48), dt: 0.73, eta: 8.0h
[INFO]: 2023-12-04 20:26:28,671 iter: 10500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1551, cls: 0.0508, iou: 0.1160), misc (ry: 0.25, z: 0.47), dt: 0.72, eta: 7.9h
[INFO]: 2023-12-04 20:29:02,668 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1670, cls: 0.0493, iou: 0.1226), misc (ry: 0.25, z: 0.51), dt: 0.72, eta: 7.9h
[INFO]: 2023-12-04 20:31:37,539 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1728, cls: 0.0478, iou: 0.1169), misc (ry: 0.29, z: 0.51), dt: 0.72, eta: 7.8h
[INFO]: 2023-12-04 20:34:12,647 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2005, cls: 0.0467, iou: 0.1216), misc (ry: 0.35, z: 0.51), dt: 0.72, eta: 7.7h
[INFO]: 2023-12-04 20:36:46,125 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1442, cls: 0.0465, iou: 0.1134), misc (ry: 0.23, z: 0.47), dt: 0.71, eta: 7.6h
[INFO]: 2023-12-04 20:39:22,161 iter: 11750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2544, cls: 0.0571, iou: 0.1377), misc (ry: 0.37, z: 0.58), dt: 0.71, eta: 7.6h
[INFO]: 2023-12-04 20:41:52,265 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1952, cls: 0.0474, iou: 0.1241), misc (ry: 0.29, z: 0.53), dt: 0.71, eta: 7.5h
[INFO]: 2023-12-04 20:44:26,584 iter: 12250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1866, cls: 0.0524, iou: 0.1198), misc (ry: 0.24, z: 0.52), dt: 0.71, eta: 7.4h
[INFO]: 2023-12-04 20:47:01,144 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1553, cls: 0.0472, iou: 0.1139), misc (ry: 0.24, z: 0.49), dt: 0.71, eta: 7.4h
[INFO]: 2023-12-04 20:49:35,430 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1441, cls: 0.0426, iou: 0.1051), misc (ry: 0.25, z: 0.44), dt: 0.71, eta: 7.3h
[INFO]: 2023-12-04 20:52:09,044 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1704, cls: 0.0497, iou: 0.1211), misc (ry: 0.28, z: 0.48), dt: 0.70, eta: 7.2h
[INFO]: 2023-12-04 20:54:43,779 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1414, cls: 0.0453, iou: 0.1113), misc (ry: 0.23, z: 0.45), dt: 0.70, eta: 7.2h
[INFO]: 2023-12-04 20:57:19,287 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1316, cls: 0.0452, iou: 0.1102), misc (ry: 0.22, z: 0.45), dt: 0.70, eta: 7.1h
[INFO]: 2023-12-04 20:59:52,813 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1393, cls: 0.0450, iou: 0.1107), misc (ry: 0.22, z: 0.46), dt: 0.70, eta: 7.0h
[INFO]: 2023-12-04 21:02:23,502 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1259, cls: 0.0409, iou: 0.1021), misc (ry: 0.23, z: 0.40), dt: 0.70, eta: 7.0h
[INFO]: 2023-12-04 21:04:55,299 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1229, cls: 0.0418, iou: 0.1069), misc (ry: 0.21, z: 0.47), dt: 0.70, eta: 6.9h
[INFO]: 2023-12-04 21:07:31,859 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1637, cls: 0.0431, iou: 0.1117), misc (ry: 0.26, z: 0.52), dt: 0.69, eta: 6.8h
[INFO]: 2023-12-04 21:10:05,144 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1593, cls: 0.0502, iou: 0.1129), misc (ry: 0.27, z: 0.43), dt: 0.69, eta: 6.8h
[INFO]: 2023-12-04 21:12:38,687 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1402, cls: 0.0444, iou: 0.1100), misc (ry: 0.23, z: 0.45), dt: 0.69, eta: 6.7h
[INFO]: 2023-12-04 21:15:04,989 testing 1000/3769, dt: 0.144, eta: 6.7m
[INFO]: 2023-12-04 21:17:30,064 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-12-04 21:19:53,687 testing 3000/3769, dt: 0.144, eta: 1.9m
[INFO]: 2023-12-04 21:21:52,997 test_iter 15000 2d car --> easy: 0.8961, mod: 0.8206, hard: 0.6707
[INFO]: 2023-12-04 21:21:52,998 test_iter 15000 gr car --> easy: 0.2444, mod: 0.1833, hard: 0.1640
[INFO]: 2023-12-04 21:21:52,998 test_iter 15000 3d car --> easy: 0.1466, mod: 0.1101, hard: 0.0916
[INFO]: 2023-12-04 21:21:52,999 test_iter 15000 2d pedestrian --> easy: 0.6751, mod: 0.5923, hard: 0.5091
[INFO]: 2023-12-04 21:21:53,000 test_iter 15000 gr pedestrian --> easy: 0.0423, mod: 0.0426, hard: 0.0359
[INFO]: 2023-12-04 21:21:53,000 test_iter 15000 3d pedestrian --> easy: 0.0361, mod: 0.0306, hard: 0.0317
[INFO]: 2023-12-04 21:21:53,001 test_iter 15000 2d cyclist --> easy: 0.7041, mod: 0.4721, hard: 0.4611
[INFO]: 2023-12-04 21:21:53,001 test_iter 15000 gr cyclist --> easy: 0.1148, mod: 0.1023, hard: 0.0992
[INFO]: 2023-12-04 21:21:53,002 test_iter 15000 3d cyclist --> easy: 0.1040, mod: 0.0982, hard: 0.0982
[INFO]: 2023-12-04 21:24:26,498 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1279, cls: 0.0400, iou: 0.1028), misc (ry: 0.21, z: 0.46), dt: 0.73, eta: 7.0h
[INFO]: 2023-12-04 21:26:58,131 iter: 15500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0386, iou: 0.0985), misc (ry: 0.20, z: 0.41), dt: 0.72, eta: 6.9h
[INFO]: 2023-12-04 21:29:30,892 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1195, cls: 0.0400, iou: 0.1044), misc (ry: 0.20, z: 0.43), dt: 0.72, eta: 6.9h
[INFO]: 2023-12-04 21:32:02,155 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1101, cls: 0.0369, iou: 0.1015), misc (ry: 0.19, z: 0.41), dt: 0.72, eta: 6.8h
[INFO]: 2023-12-04 21:34:36,798 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0994, cls: 0.0392, iou: 0.0980), misc (ry: 0.18, z: 0.37), dt: 0.72, eta: 6.7h
[INFO]: 2023-12-04 21:37:10,317 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1102, cls: 0.0386, iou: 0.1002), misc (ry: 0.21, z: 0.41), dt: 0.72, eta: 6.7h
[INFO]: 2023-12-04 21:39:44,420 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1166, cls: 0.0409, iou: 0.1036), misc (ry: 0.21, z: 0.40), dt: 0.72, eta: 6.6h
[INFO]: 2023-12-04 21:42:18,778 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1523, cls: 0.0450, iou: 0.1091), misc (ry: 0.24, z: 0.41), dt: 0.71, eta: 6.6h
[INFO]: 2023-12-04 21:44:54,964 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1354, cls: 0.0431, iou: 0.1037), misc (ry: 0.25, z: 0.44), dt: 0.71, eta: 6.5h
[INFO]: 2023-12-04 21:47:29,670 iter: 17500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1148, cls: 0.0386, iou: 0.0976), misc (ry: 0.21, z: 0.39), dt: 0.71, eta: 6.4h
[INFO]: 2023-12-04 21:50:02,664 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1134, cls: 0.0417, iou: 0.1008), misc (ry: 0.20, z: 0.37), dt: 0.71, eta: 6.4h
[INFO]: 2023-12-04 21:52:38,143 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1126, cls: 0.0462, iou: 0.1042), misc (ry: 0.21, z: 0.38), dt: 0.71, eta: 6.3h
[INFO]: 2023-12-04 21:55:11,461 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1143, cls: 0.0403, iou: 0.1009), misc (ry: 0.19, z: 0.41), dt: 0.71, eta: 6.2h
[INFO]: 2023-12-04 21:57:44,834 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1042, cls: 0.0392, iou: 0.1004), misc (ry: 0.19, z: 0.42), dt: 0.71, eta: 6.2h
[INFO]: 2023-12-04 22:00:18,056 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1034, cls: 0.0385, iou: 0.0972), misc (ry: 0.20, z: 0.39), dt: 0.71, eta: 6.1h
[INFO]: 2023-12-04 22:02:51,864 iter: 19000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1030, cls: 0.0395, iou: 0.0965), misc (ry: 0.20, z: 0.37), dt: 0.70, eta: 6.1h
[INFO]: 2023-12-04 22:05:27,022 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0934, cls: 0.0382, iou: 0.0919), misc (ry: 0.17, z: 0.39), dt: 0.70, eta: 6.0h
[INFO]: 2023-12-04 22:07:59,713 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0929, cls: 0.0367, iou: 0.0926), misc (ry: 0.18, z: 0.38), dt: 0.70, eta: 5.9h
[INFO]: 2023-12-04 22:10:32,818 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0827, cls: 0.0367, iou: 0.0905), misc (ry: 0.17, z: 0.35), dt: 0.70, eta: 5.9h
[INFO]: 2023-12-04 22:13:05,038 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0958, cls: 0.0345, iou: 0.0917), misc (ry: 0.22, z: 0.37), dt: 0.70, eta: 5.8h
[INFO]: 2023-12-04 22:15:33,838 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-12-04 22:17:58,663 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-12-04 22:20:25,625 testing 3000/3769, dt: 0.146, eta: 1.9m
[INFO]: 2023-12-04 22:22:24,899 test_iter 20000 2d car --> easy: 0.8558, mod: 0.8288, hard: 0.6765
[INFO]: 2023-12-04 22:22:24,900 test_iter 20000 gr car --> easy: 0.2325, mod: 0.1796, hard: 0.1588
[INFO]: 2023-12-04 22:22:24,901 test_iter 20000 3d car --> easy: 0.1821, mod: 0.1496, hard: 0.1285
[INFO]: 2023-12-04 22:22:24,901 test_iter 20000 2d pedestrian --> easy: 0.7271, mod: 0.5875, hard: 0.5035
[INFO]: 2023-12-04 22:22:24,902 test_iter 20000 gr pedestrian --> easy: 0.1136, mod: 0.1100, hard: 0.1040
[INFO]: 2023-12-04 22:22:24,902 test_iter 20000 3d pedestrian --> easy: 0.1066, mod: 0.1030, hard: 0.0996
[INFO]: 2023-12-04 22:22:24,903 test_iter 20000 2d cyclist --> easy: 0.5792, mod: 0.3723, hard: 0.3695
[INFO]: 2023-12-04 22:22:24,904 test_iter 20000 gr cyclist --> easy: 0.0349, mod: 0.0272, hard: 0.0285
[INFO]: 2023-12-04 22:22:24,904 test_iter 20000 3d cyclist --> easy: 0.0344, mod: 0.0263, hard: 0.0207
[INFO]: 2023-12-04 22:25:01,225 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1008, cls: 0.0390, iou: 0.0970), misc (ry: 0.19, z: 0.36), dt: 0.73, eta: 6.0h
[INFO]: 2023-12-04 22:27:33,142 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1282, cls: 0.0385, iou: 0.1005), misc (ry: 0.23, z: 0.44), dt: 0.73, eta: 5.9h
[INFO]: 2023-12-04 22:30:04,992 iter: 20750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1572, cls: 0.0416, iou: 0.1034), misc (ry: 0.31, z: 0.44), dt: 0.72, eta: 5.9h
[INFO]: 2023-12-04 22:32:39,790 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1421, cls: 0.0432, iou: 0.1049), misc (ry: 0.28, z: 0.45), dt: 0.72, eta: 5.8h
[INFO]: 2023-12-04 22:35:11,611 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1127, cls: 0.0400, iou: 0.1000), misc (ry: 0.21, z: 0.42), dt: 0.72, eta: 5.8h
[INFO]: 2023-12-04 22:37:45,631 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1095, cls: 0.0382, iou: 0.0964), misc (ry: 0.21, z: 0.44), dt: 0.72, eta: 5.7h
[INFO]: 2023-12-04 22:40:22,544 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0932, cls: 0.0391, iou: 0.0964), misc (ry: 0.19, z: 0.38), dt: 0.72, eta: 5.6h
[INFO]: 2023-12-04 22:42:57,198 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0873, cls: 0.0379, iou: 0.0924), misc (ry: 0.16, z: 0.36), dt: 0.72, eta: 5.6h
[INFO]: 2023-12-04 22:45:31,050 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0934, cls: 0.0387, iou: 0.0951), misc (ry: 0.19, z: 0.34), dt: 0.72, eta: 5.5h
[INFO]: 2023-12-04 22:48:04,683 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0907, cls: 0.0373, iou: 0.0913), misc (ry: 0.17, z: 0.39), dt: 0.72, eta: 5.5h
[INFO]: 2023-12-04 22:50:38,494 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0367, iou: 0.0883), misc (ry: 0.18, z: 0.35), dt: 0.71, eta: 5.4h
[INFO]: 2023-12-04 22:53:13,539 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0808, cls: 0.0353, iou: 0.0900), misc (ry: 0.16, z: 0.36), dt: 0.71, eta: 5.4h
[INFO]: 2023-12-04 22:55:47,841 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0824, cls: 0.0354, iou: 0.0886), misc (ry: 0.17, z: 0.35), dt: 0.71, eta: 5.3h
[INFO]: 2023-12-04 22:58:18,520 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0807, cls: 0.0362, iou: 0.0859), misc (ry: 0.17, z: 0.34), dt: 0.71, eta: 5.2h
[INFO]: 2023-12-04 23:00:51,460 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0773, cls: 0.0365, iou: 0.0890), misc (ry: 0.15, z: 0.36), dt: 0.71, eta: 5.2h
[INFO]: 2023-12-04 23:03:24,487 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0755, cls: 0.0344, iou: 0.0867), misc (ry: 0.15, z: 0.37), dt: 0.71, eta: 5.1h
[INFO]: 2023-12-04 23:06:00,385 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0356, iou: 0.0852), misc (ry: 0.15, z: 0.36), dt: 0.71, eta: 5.1h
[INFO]: 2023-12-04 23:08:34,402 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0761, cls: 0.0362, iou: 0.0864), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 5.0h
[INFO]: 2023-12-04 23:11:07,231 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0692, cls: 0.0366, iou: 0.0818), misc (ry: 0.15, z: 0.31), dt: 0.71, eta: 5.0h
[INFO]: 2023-12-04 23:13:43,554 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0693, cls: 0.0350, iou: 0.0829), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 4.9h
[INFO]: 2023-12-04 23:16:09,356 testing 1000/3769, dt: 0.144, eta: 6.6m
[INFO]: 2023-12-04 23:18:36,491 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-12-04 23:21:00,152 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-12-04 23:23:00,855 test_iter 25000 2d car --> easy: 0.9115, mod: 0.8373, hard: 0.6775
[INFO]: 2023-12-04 23:23:00,856 test_iter 25000 gr car --> easy: 0.2179, mod: 0.1622, hard: 0.1413
[INFO]: 2023-12-04 23:23:00,857 test_iter 25000 3d car --> easy: 0.1447, mod: 0.1181, hard: 0.0927
[INFO]: 2023-12-04 23:23:00,857 test_iter 25000 2d pedestrian --> easy: 0.6586, mod: 0.5773, hard: 0.4977
[INFO]: 2023-12-04 23:23:00,858 test_iter 25000 gr pedestrian --> easy: 0.1276, mod: 0.1152, hard: 0.1132
[INFO]: 2023-12-04 23:23:00,859 test_iter 25000 3d pedestrian --> easy: 0.1115, mod: 0.1123, hard: 0.1037
[INFO]: 2023-12-04 23:23:00,859 test_iter 25000 2d cyclist --> easy: 0.6575, mod: 0.4132, hard: 0.4068
[INFO]: 2023-12-04 23:23:00,860 test_iter 25000 gr cyclist --> easy: 0.0635, mod: 0.0563, hard: 0.0567
[INFO]: 2023-12-04 23:23:00,860 test_iter 25000 3d cyclist --> easy: 0.0630, mod: 0.0554, hard: 0.0557
[INFO]: 2023-12-04 23:25:34,573 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0339, iou: 0.0831), misc (ry: 0.17, z: 0.33), dt: 0.73, eta: 5.0h
[INFO]: 2023-12-04 23:28:08,854 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0679, cls: 0.0353, iou: 0.0808), misc (ry: 0.15, z: 0.32), dt: 0.73, eta: 4.9h
[INFO]: 2023-12-04 23:30:41,328 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0627, cls: 0.0321, iou: 0.0779), misc (ry: 0.13, z: 0.30), dt: 0.72, eta: 4.9h
[INFO]: 2023-12-04 23:33:14,256 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0782, cls: 0.0349, iou: 0.0856), misc (ry: 0.15, z: 0.35), dt: 0.72, eta: 4.8h
[INFO]: 2023-12-04 23:35:47,489 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0673, cls: 0.0339, iou: 0.0826), misc (ry: 0.15, z: 0.31), dt: 0.72, eta: 4.8h
[INFO]: 2023-12-04 23:38:18,015 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0635, cls: 0.0326, iou: 0.0800), misc (ry: 0.14, z: 0.33), dt: 0.72, eta: 4.7h
[INFO]: 2023-12-04 23:40:52,124 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0599, cls: 0.0321, iou: 0.0784), misc (ry: 0.14, z: 0.30), dt: 0.72, eta: 4.7h
[INFO]: 2023-12-04 23:43:29,432 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0629, cls: 0.0343, iou: 0.0800), misc (ry: 0.14, z: 0.31), dt: 0.72, eta: 4.6h
[INFO]: 2023-12-04 23:46:03,621 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0610, cls: 0.0326, iou: 0.0764), misc (ry: 0.13, z: 0.34), dt: 0.72, eta: 4.5h
[INFO]: 2023-12-04 23:48:35,855 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0329, iou: 0.0781), misc (ry: 0.14, z: 0.28), dt: 0.72, eta: 4.5h
[INFO]: 2023-12-04 23:51:10,106 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0687, cls: 0.0351, iou: 0.0812), misc (ry: 0.15, z: 0.30), dt: 0.72, eta: 4.4h
[INFO]: 2023-12-04 23:53:44,814 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0341, iou: 0.0776), misc (ry: 0.14, z: 0.29), dt: 0.72, eta: 4.4h
[INFO]: 2023-12-04 23:56:17,056 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0600, cls: 0.0316, iou: 0.0780), misc (ry: 0.13, z: 0.31), dt: 0.71, eta: 4.3h
[INFO]: 2023-12-04 23:58:50,532 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0836, cls: 0.0331, iou: 0.0790), misc (ry: 0.20, z: 0.30), dt: 0.71, eta: 4.3h
[INFO]: 2023-12-05 00:01:22,333 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0735, cls: 0.0342, iou: 0.0810), misc (ry: 0.18, z: 0.31), dt: 0.71, eta: 4.2h
[INFO]: 2023-12-05 00:03:58,800 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0616, cls: 0.0318, iou: 0.0751), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 4.2h
[INFO]: 2023-12-05 00:06:32,235 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0670, cls: 0.0315, iou: 0.0768), misc (ry: 0.15, z: 0.33), dt: 0.71, eta: 4.1h
[INFO]: 2023-12-05 00:09:02,916 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0535, cls: 0.0308, iou: 0.0735), misc (ry: 0.12, z: 0.29), dt: 0.71, eta: 4.0h
[INFO]: 2023-12-05 00:11:37,308 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0604, cls: 0.0312, iou: 0.0752), misc (ry: 0.15, z: 0.28), dt: 0.71, eta: 4.0h
[INFO]: 2023-12-05 00:14:11,381 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0322, iou: 0.0760), misc (ry: 0.14, z: 0.28), dt: 0.71, eta: 3.9h
[INFO]: 2023-12-05 00:16:37,252 testing 1000/3769, dt: 0.144, eta: 6.6m
[INFO]: 2023-12-05 00:19:01,423 testing 2000/3769, dt: 0.144, eta: 4.2m
[INFO]: 2023-12-05 00:21:24,020 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-12-05 00:23:22,868 test_iter 30000 2d car --> easy: 0.8878, mod: 0.8284, hard: 0.6711
[INFO]: 2023-12-05 00:23:22,869 test_iter 30000 gr car --> easy: 0.2385, mod: 0.2032, hard: 0.1724
[INFO]: 2023-12-05 00:23:22,869 test_iter 30000 3d car --> easy: 0.1814, mod: 0.1575, hard: 0.1333
[INFO]: 2023-12-05 00:23:22,870 test_iter 30000 2d pedestrian --> easy: 0.6673, mod: 0.5872, hard: 0.5043
[INFO]: 2023-12-05 00:23:22,871 test_iter 30000 gr pedestrian --> easy: 0.0675, mod: 0.0668, hard: 0.0620
[INFO]: 2023-12-05 00:23:22,871 test_iter 30000 3d pedestrian --> easy: 0.0641, mod: 0.0619, hard: 0.0566
[INFO]: 2023-12-05 00:23:22,872 test_iter 30000 2d cyclist --> easy: 0.6435, mod: 0.4713, hard: 0.4042
[INFO]: 2023-12-05 00:23:22,873 test_iter 30000 gr cyclist --> easy: 0.0643, mod: 0.0549, hard: 0.0552
[INFO]: 2023-12-05 00:23:22,873 test_iter 30000 3d cyclist --> easy: 0.0613, mod: 0.0541, hard: 0.0543
[INFO]: 2023-12-05 00:25:55,977 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0545, cls: 0.0304, iou: 0.0749), misc (ry: 0.13, z: 0.27), dt: 0.73, eta: 4.0h
[INFO]: 2023-12-05 00:28:26,114 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0311, iou: 0.0743), misc (ry: 0.13, z: 0.31), dt: 0.73, eta: 3.9h
[INFO]: 2023-12-05 00:30:57,553 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0585, cls: 0.0331, iou: 0.0752), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.9h
[INFO]: 2023-12-05 00:33:29,313 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0489, cls: 0.0315, iou: 0.0716), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.8h
[INFO]: 2023-12-05 00:36:02,163 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0477, cls: 0.0308, iou: 0.0695), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.8h
[INFO]: 2023-12-05 00:38:33,167 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0476, cls: 0.0289, iou: 0.0698), misc (ry: 0.13, z: 0.29), dt: 0.72, eta: 3.7h
[INFO]: 2023-12-05 00:41:07,418 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0531, cls: 0.0318, iou: 0.0730), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.7h
[INFO]: 2023-12-05 00:43:41,753 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0554, cls: 0.0318, iou: 0.0742), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.6h
[INFO]: 2023-12-05 00:46:14,608 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0524, cls: 0.0308, iou: 0.0706), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.5h
[INFO]: 2023-12-05 00:48:44,859 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0466, cls: 0.0292, iou: 0.0704), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.5h
[INFO]: 2023-12-05 00:51:14,686 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0522, cls: 0.0302, iou: 0.0704), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.4h
[INFO]: 2023-12-05 00:53:50,334 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0299, iou: 0.0683), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.4h
[INFO]: 2023-12-05 00:56:21,753 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0498, cls: 0.0294, iou: 0.0692), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.3h
[INFO]: 2023-12-05 00:58:55,284 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0505, cls: 0.0313, iou: 0.0725), misc (ry: 0.13, z: 0.28), dt: 0.71, eta: 3.3h
[INFO]: 2023-12-05 01:01:30,208 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0450, cls: 0.0297, iou: 0.0665), misc (ry: 0.12, z: 0.26), dt: 0.71, eta: 3.2h
[INFO]: 2023-12-05 01:04:04,075 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0428, cls: 0.0289, iou: 0.0643), misc (ry: 0.11, z: 0.25), dt: 0.71, eta: 3.2h
[INFO]: 2023-12-05 01:06:36,424 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0475, cls: 0.0318, iou: 0.0677), misc (ry: 0.13, z: 0.25), dt: 0.71, eta: 3.1h
[INFO]: 2023-12-05 01:09:07,866 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0302, iou: 0.0655), misc (ry: 0.12, z: 0.25), dt: 0.71, eta: 3.1h
[INFO]: 2023-12-05 01:11:44,140 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0424, cls: 0.0304, iou: 0.0649), misc (ry: 0.12, z: 0.24), dt: 0.71, eta: 3.0h
[INFO]: 2023-12-05 01:14:18,322 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0288, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.71, eta: 3.0h
[INFO]: 2023-12-05 01:16:44,600 testing 1000/3769, dt: 0.144, eta: 6.7m
[INFO]: 2023-12-05 01:19:08,261 testing 2000/3769, dt: 0.144, eta: 4.2m
[INFO]: 2023-12-05 01:21:31,242 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-12-05 01:23:30,450 test_iter 35000 2d car --> easy: 0.9049, mod: 0.8379, hard: 0.6764
[INFO]: 2023-12-05 01:23:30,451 test_iter 35000 gr car --> easy: 0.2406, mod: 0.2046, hard: 0.1746
[INFO]: 2023-12-05 01:23:30,451 test_iter 35000 3d car --> easy: 0.1858, mod: 0.1586, hard: 0.1315
[INFO]: 2023-12-05 01:23:30,452 test_iter 35000 2d pedestrian --> easy: 0.6647, mod: 0.5845, hard: 0.5001
[INFO]: 2023-12-05 01:23:30,453 test_iter 35000 gr pedestrian --> easy: 0.0818, mod: 0.0695, hard: 0.0678
[INFO]: 2023-12-05 01:23:30,453 test_iter 35000 3d pedestrian --> easy: 0.0669, mod: 0.0665, hard: 0.0587
[INFO]: 2023-12-05 01:23:30,454 test_iter 35000 2d cyclist --> easy: 0.6443, mod: 0.4115, hard: 0.4023
[INFO]: 2023-12-05 01:23:30,455 test_iter 35000 gr cyclist --> easy: 0.0321, mod: 0.0268, hard: 0.0192
[INFO]: 2023-12-05 01:23:30,455 test_iter 35000 3d cyclist --> easy: 0.0295, mod: 0.0179, hard: 0.0179
[INFO]: 2023-12-05 01:26:05,706 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0294, iou: 0.0654), misc (ry: 0.11, z: 0.24), dt: 0.73, eta: 3.0h
[INFO]: 2023-12-05 01:28:37,583 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0425, cls: 0.0294, iou: 0.0642), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.9h
[INFO]: 2023-12-05 01:31:11,333 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0398, cls: 0.0290, iou: 0.0607), misc (ry: 0.10, z: 0.24), dt: 0.72, eta: 2.9h
[INFO]: 2023-12-05 01:33:47,567 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0301, iou: 0.0623), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.8h
[INFO]: 2023-12-05 01:36:19,446 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0288, iou: 0.0609), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.8h
[INFO]: 2023-12-05 01:38:54,087 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0398, cls: 0.0289, iou: 0.0643), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.7h
[INFO]: 2023-12-05 01:41:28,113 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0279, iou: 0.0619), misc (ry: 0.10, z: 0.24), dt: 0.72, eta: 2.7h
[INFO]: 2023-12-05 01:44:02,363 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0442, cls: 0.0289, iou: 0.0656), misc (ry: 0.11, z: 0.27), dt: 0.72, eta: 2.6h
[INFO]: 2023-12-05 01:46:34,780 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0395, cls: 0.0289, iou: 0.0619), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.5h
[INFO]: 2023-12-05 01:49:09,771 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0390, cls: 0.0282, iou: 0.0616), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.5h
[INFO]: 2023-12-05 01:51:41,385 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0292, iou: 0.0595), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.4h
[INFO]: 2023-12-05 01:54:15,817 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0380, cls: 0.0283, iou: 0.0595), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.4h
[INFO]: 2023-12-05 01:56:50,904 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0286, iou: 0.0622), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.3h
[INFO]: 2023-12-05 01:59:25,113 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0283, iou: 0.0580), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.3h
[INFO]: 2023-12-05 02:01:59,015 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0364, cls: 0.0281, iou: 0.0590), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.2h
[INFO]: 2023-12-05 02:04:29,580 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0376, cls: 0.0288, iou: 0.0596), misc (ry: 0.10, z: 0.23), dt: 0.71, eta: 2.2h
[INFO]: 2023-12-05 02:07:00,652 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0289, iou: 0.0593), misc (ry: 0.10, z: 0.22), dt: 0.71, eta: 2.1h
[INFO]: 2023-12-05 02:09:35,567 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0370, cls: 0.0279, iou: 0.0570), misc (ry: 0.10, z: 0.23), dt: 0.71, eta: 2.1h
[INFO]: 2023-12-05 02:12:11,857 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0389, cls: 0.0290, iou: 0.0597), misc (ry: 0.11, z: 0.23), dt: 0.71, eta: 2.0h
[INFO]: 2023-12-05 02:14:46,208 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0386, cls: 0.0290, iou: 0.0593), misc (ry: 0.10, z: 0.23), dt: 0.71, eta: 2.0h
[INFO]: 2023-12-05 02:17:14,724 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-12-05 02:19:38,790 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-12-05 02:22:00,368 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-12-05 02:23:58,087 test_iter 40000 2d car --> easy: 0.9221, mod: 0.8461, hard: 0.6828
[INFO]: 2023-12-05 02:23:58,089 test_iter 40000 gr car --> easy: 0.2674, mod: 0.2137, hard: 0.1795
[INFO]: 2023-12-05 02:23:58,089 test_iter 40000 3d car --> easy: 0.2030, mod: 0.1694, hard: 0.1377
[INFO]: 2023-12-05 02:23:58,090 test_iter 40000 2d pedestrian --> easy: 0.6542, mod: 0.5760, hard: 0.4949
[INFO]: 2023-12-05 02:23:58,090 test_iter 40000 gr pedestrian --> easy: 0.0681, mod: 0.0569, hard: 0.0558
[INFO]: 2023-12-05 02:23:58,091 test_iter 40000 3d pedestrian --> easy: 0.0535, mod: 0.0536, hard: 0.0458
[INFO]: 2023-12-05 02:23:58,092 test_iter 40000 2d cyclist --> easy: 0.6463, mod: 0.4130, hard: 0.4038
[INFO]: 2023-12-05 02:23:58,092 test_iter 40000 gr cyclist --> easy: 0.0594, mod: 0.0560, hard: 0.0561
[INFO]: 2023-12-05 02:23:58,093 test_iter 40000 3d cyclist --> easy: 0.0576, mod: 0.0550, hard: 0.0552
[INFO]: 2023-12-05 02:26:28,751 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0326, cls: 0.0260, iou: 0.0548), misc (ry: 0.10, z: 0.22), dt: 0.73, eta: 2.0h
[INFO]: 2023-12-05 02:29:03,854 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0330, cls: 0.0287, iou: 0.0551), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.9h
[INFO]: 2023-12-05 02:31:37,885 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0269, iou: 0.0557), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.9h
[INFO]: 2023-12-05 02:34:09,075 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0276, iou: 0.0548), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.8h
[INFO]: 2023-12-05 02:36:42,376 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0331, cls: 0.0277, iou: 0.0556), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.8h
[INFO]: 2023-12-05 02:39:13,643 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0383, cls: 0.0297, iou: 0.0569), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.7h
[INFO]: 2023-12-05 02:41:48,315 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0278, iou: 0.0530), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.7h
[INFO]: 2023-12-05 02:44:22,030 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0346, cls: 0.0291, iou: 0.0543), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.6h
[INFO]: 2023-12-05 02:46:55,289 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0285, iou: 0.0536), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.6h
[INFO]: 2023-12-05 02:49:27,466 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0266, iou: 0.0518), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.5h
[INFO]: 2023-12-05 02:52:01,198 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0297, cls: 0.0264, iou: 0.0526), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 1.4h
[INFO]: 2023-12-05 02:54:33,244 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0281, cls: 0.0250, iou: 0.0503), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 1.4h
[INFO]: 2023-12-05 02:57:05,275 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0274, iou: 0.0525), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.3h
[INFO]: 2023-12-05 02:59:41,354 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0272, iou: 0.0503), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.3h
[INFO]: 2023-12-05 03:02:12,040 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0272, iou: 0.0521), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 1.2h
[INFO]: 2023-12-05 03:04:42,582 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0270, iou: 0.0512), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.2h
[INFO]: 2023-12-05 03:07:14,126 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0293, cls: 0.0269, iou: 0.0498), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.1h
[INFO]: 2023-12-05 03:09:48,074 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0323, cls: 0.0279, iou: 0.0495), misc (ry: 0.10, z: 0.20), dt: 0.71, eta: 1.1h
[INFO]: 2023-12-05 03:12:21,086 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0274, iou: 0.0496), misc (ry: 0.10, z: 0.20), dt: 0.71, eta: 1.0h
[INFO]: 2023-12-05 03:14:53,773 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0283, cls: 0.0270, iou: 0.0496), misc (ry: 0.09, z: 0.20), dt: 0.71, eta: 59.5m
[INFO]: 2023-12-05 03:17:19,671 testing 1000/3769, dt: 0.144, eta: 6.6m
[INFO]: 2023-12-05 03:19:43,046 testing 2000/3769, dt: 0.144, eta: 4.2m
[INFO]: 2023-12-05 03:22:06,989 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-12-05 03:24:05,639 test_iter 45000 2d car --> easy: 0.9177, mod: 0.8433, hard: 0.6811
[INFO]: 2023-12-05 03:24:05,640 test_iter 45000 gr car --> easy: 0.2637, mod: 0.2162, hard: 0.1797
[INFO]: 2023-12-05 03:24:05,640 test_iter 45000 3d car --> easy: 0.2016, mod: 0.1702, hard: 0.1526
[INFO]: 2023-12-05 03:24:05,641 test_iter 45000 2d pedestrian --> easy: 0.6516, mod: 0.5746, hard: 0.4934
[INFO]: 2023-12-05 03:24:05,642 test_iter 45000 gr pedestrian --> easy: 0.0700, mod: 0.0579, hard: 0.0546
[INFO]: 2023-12-05 03:24:05,642 test_iter 45000 3d pedestrian --> easy: 0.0526, mod: 0.0509, hard: 0.0420
[INFO]: 2023-12-05 03:24:05,643 test_iter 45000 2d cyclist --> easy: 0.6731, mod: 0.4228, hard: 0.4164
[INFO]: 2023-12-05 03:24:05,643 test_iter 45000 gr cyclist --> easy: 0.1253, mod: 0.1040, hard: 0.1042
[INFO]: 2023-12-05 03:24:05,644 test_iter 45000 3d cyclist --> easy: 0.1087, mod: 0.1028, hard: 0.1030
[INFO]: 2023-12-05 03:26:41,839 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0328, cls: 0.0269, iou: 0.0499), misc (ry: 0.10, z: 0.21), dt: 0.73, eta: 57.4m
[INFO]: 2023-12-05 03:29:14,680 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0287, cls: 0.0265, iou: 0.0488), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 54.4m
[INFO]: 2023-12-05 03:31:47,705 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0302, iou: 0.0522), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 51.3m
[INFO]: 2023-12-05 03:34:22,552 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0271, iou: 0.0496), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 48.2m
[INFO]: 2023-12-05 03:36:55,135 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0280, iou: 0.0495), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 45.2m
[INFO]: 2023-12-05 03:39:28,035 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0283, cls: 0.0264, iou: 0.0474), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 42.1m
[INFO]: 2023-12-05 03:42:01,781 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0297, cls: 0.0266, iou: 0.0473), misc (ry: 0.10, z: 0.19), dt: 0.72, eta: 39.1m
[INFO]: 2023-12-05 03:44:36,180 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0285, cls: 0.0279, iou: 0.0482), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 36.1m
[INFO]: 2023-12-05 03:47:11,201 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0290, cls: 0.0273, iou: 0.0471), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 33.0m
[INFO]: 2023-12-05 03:49:46,699 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0264, cls: 0.0273, iou: 0.0454), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 30.0m
[INFO]: 2023-12-05 03:52:19,928 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0263, cls: 0.0261, iou: 0.0473), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 27.0m
[INFO]: 2023-12-05 03:54:54,483 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0260, cls: 0.0250, iou: 0.0452), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 24.0m
[INFO]: 2023-12-05 03:57:28,799 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0326, cls: 0.0297, iou: 0.0490), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 21.0m
[INFO]: 2023-12-05 04:00:02,746 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0264, cls: 0.0266, iou: 0.0452), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 18.0m
[INFO]: 2023-12-05 04:02:35,383 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0263, cls: 0.0255, iou: 0.0445), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 15.0m
[INFO]: 2023-12-05 04:05:07,621 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0266, cls: 0.0266, iou: 0.0447), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 12.0m
[INFO]: 2023-12-05 04:07:44,332 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0272, cls: 0.0266, iou: 0.0439), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 9.0m
[INFO]: 2023-12-05 04:10:17,844 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0290, cls: 0.0272, iou: 0.0455), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 6.0m
[INFO]: 2023-12-05 04:12:51,271 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0231, cls: 0.0247, iou: 0.0408), misc (ry: 0.08, z: 0.17), dt: 0.72, eta: 3.0m
[INFO]: 2023-12-05 04:15:23,259 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0298, cls: 0.0282, iou: 0.0460), misc (ry: 0.09, z: 0.18), dt: 0.71, eta: 0.7s
[INFO]: 2023-12-05 04:17:50,123 testing 1000/3769, dt: 0.145, eta: 6.7m
[INFO]: 2023-12-05 04:20:14,333 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-12-05 04:22:39,791 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-12-05 04:24:39,557 test_iter 50000 2d car --> easy: 0.9188, mod: 0.8452, hard: 0.6813
[INFO]: 2023-12-05 04:24:39,559 test_iter 50000 gr car --> easy: 0.2681, mod: 0.2159, hard: 0.1819
[INFO]: 2023-12-05 04:24:39,559 test_iter 50000 3d car --> easy: 0.2032, mod: 0.1727, hard: 0.1534
[INFO]: 2023-12-05 04:24:39,560 test_iter 50000 2d pedestrian --> easy: 0.6628, mod: 0.5851, hard: 0.5038
[INFO]: 2023-12-05 04:24:39,561 test_iter 50000 gr pedestrian --> easy: 0.0675, mod: 0.0575, hard: 0.0568
[INFO]: 2023-12-05 04:24:39,561 test_iter 50000 3d pedestrian --> easy: 0.0482, mod: 0.0536, hard: 0.0486
[INFO]: 2023-12-05 04:24:39,562 test_iter 50000 2d cyclist --> easy: 0.6641, mod: 0.4215, hard: 0.4146
[INFO]: 2023-12-05 04:24:39,562 test_iter 50000 gr cyclist --> easy: 0.1080, mod: 0.1000, hard: 0.1002
[INFO]: 2023-12-05 04:24:39,563 test_iter 50000 3d cyclist --> easy: 0.1038, mod: 0.0909, hard: 0.0909
