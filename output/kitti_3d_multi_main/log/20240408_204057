[INFO]: 2024-04-08 20:40:57,820 ==开始处理数据集==
[INFO]: 2024-04-08 20:40:57,820 命中imdb缓存.
[INFO]: 2024-04-08 20:40:59,073 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-08 20:40:59,073 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-08 20:41:01,454 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-08 20:41:01,454 ==数据集处理完毕==
[INFO]: 2024-04-08 20:41:04,457 ==开始生成anchors==
[INFO]: 2024-04-08 20:41:04,458 ==anchors生成完毕==
[INFO]: 2024-04-08 20:41:07,461 ==开始计算bbox参数==
[INFO]: 2024-04-08 20:41:07,461 命中bbox的回归均值缓存
[INFO]: 2024-04-08 20:41:07,462 命中bbox的回归标准差缓存
[INFO]: 2024-04-08 20:41:07,462 ==bbox参数计算完毕==
[INFO]: 2024-04-08 20:41:15,497 设置保存完成
[INFO]: 2024-04-08 20:41:18,501 训练配置一览
[INFO]: 2024-04-08 20:41:20,509 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-08 20:41:26,284 装载完成
[INFO]: 2024-04-08 20:41:29,287 神经网络结构一览
[INFO]: 2024-04-08 20:41:31,290 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-08 20:41:31,318 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-08 20:44:20,088 iter: 250, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5303, cls: 0.1146, iou: 0.1928), misc (ry: 0.56, z: 0.97), dt: 0.68, eta: 9.4h
[INFO]: 2024-04-08 20:47:07,595 iter: 500, acc (bg: 1.00, fg: 0.87, iou: 0.80), loss (bbox_3d: 0.8062, cls: 0.1575, iou: 0.2336), misc (ry: 0.84, z: 1.15), dt: 0.67, eta: 9.3h
[INFO]: 2024-04-08 20:49:50,891 iter: 750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5599, cls: 0.1058, iou: 0.1903), misc (ry: 0.63, z: 0.93), dt: 0.67, eta: 9.1h
[INFO]: 2024-04-08 20:52:36,854 iter: 1000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4525, cls: 0.0870, iou: 0.1765), misc (ry: 0.52, z: 0.83), dt: 0.67, eta: 9.1h
[INFO]: 2024-04-08 20:55:26,871 iter: 1250, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4760, cls: 0.1017, iou: 0.1823), misc (ry: 0.50, z: 0.92), dt: 0.67, eta: 9.1h
[INFO]: 2024-04-08 20:58:09,998 iter: 1500, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5042, cls: 0.1108, iou: 0.1902), misc (ry: 0.57, z: 0.85), dt: 0.67, eta: 9.0h
[INFO]: 2024-04-08 21:00:58,789 iter: 1750, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5134, cls: 0.0931, iou: 0.1868), misc (ry: 0.63, z: 0.86), dt: 0.67, eta: 8.9h
[INFO]: 2024-04-08 21:03:46,509 iter: 2000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3902, cls: 0.0801, iou: 0.1624), misc (ry: 0.43, z: 0.72), dt: 0.67, eta: 8.9h
[INFO]: 2024-04-08 21:06:31,764 iter: 2250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3608, cls: 0.0752, iou: 0.1578), misc (ry: 0.44, z: 0.72), dt: 0.67, eta: 8.8h
[INFO]: 2024-04-08 21:09:21,305 iter: 2500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3617, cls: 0.0721, iou: 0.1617), misc (ry: 0.47, z: 0.70), dt: 0.67, eta: 8.8h
[INFO]: 2024-04-08 21:12:04,578 iter: 2750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3590, cls: 0.0754, iou: 0.1629), misc (ry: 0.47, z: 0.72), dt: 0.67, eta: 8.8h
[INFO]: 2024-04-08 21:14:53,508 iter: 3000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3374, cls: 0.0794, iou: 0.1642), misc (ry: 0.43, z: 0.70), dt: 0.67, eta: 8.7h
[INFO]: 2024-04-08 21:17:40,587 iter: 3250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4281, cls: 0.0821, iou: 0.1656), misc (ry: 0.54, z: 0.77), dt: 0.67, eta: 8.7h
[INFO]: 2024-04-08 21:20:27,218 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3225, cls: 0.0694, iou: 0.1499), misc (ry: 0.38, z: 0.68), dt: 0.67, eta: 8.6h
[INFO]: 2024-04-08 21:23:18,606 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2882, cls: 0.0685, iou: 0.1486), misc (ry: 0.36, z: 0.63), dt: 0.67, eta: 8.6h
[INFO]: 2024-04-08 21:26:04,823 iter: 4000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2876, cls: 0.0640, iou: 0.1483), misc (ry: 0.37, z: 0.66), dt: 0.67, eta: 8.5h
[INFO]: 2024-04-08 21:28:52,358 iter: 4250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2752, cls: 0.0600, iou: 0.1409), misc (ry: 0.36, z: 0.65), dt: 0.67, eta: 8.5h
[INFO]: 2024-04-08 21:31:39,959 iter: 4500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2569, cls: 0.0626, iou: 0.1406), misc (ry: 0.32, z: 0.58), dt: 0.67, eta: 8.5h
[INFO]: 2024-04-08 21:34:26,680 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2736, cls: 0.0636, iou: 0.1440), misc (ry: 0.40, z: 0.61), dt: 0.67, eta: 8.4h
[INFO]: 2024-04-08 21:37:13,868 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2824, cls: 0.0605, iou: 0.1430), misc (ry: 0.39, z: 0.64), dt: 0.67, eta: 8.4h
[INFO]: 2024-04-08 21:40:04,224 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2603, cls: 0.0603, iou: 0.1440), misc (ry: 0.36, z: 0.57), dt: 0.67, eta: 8.3h
[INFO]: 2024-04-08 21:42:53,211 iter: 5500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2667, cls: 0.0596, iou: 0.1409), misc (ry: 0.35, z: 0.58), dt: 0.67, eta: 8.3h
[INFO]: 2024-04-08 21:45:41,596 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2285, cls: 0.0578, iou: 0.1352), misc (ry: 0.29, z: 0.58), dt: 0.67, eta: 8.2h
[INFO]: 2024-04-08 21:48:31,284 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2102, cls: 0.0531, iou: 0.1318), misc (ry: 0.27, z: 0.55), dt: 0.67, eta: 8.2h
[INFO]: 2024-04-08 21:51:20,038 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2186, cls: 0.0574, iou: 0.1311), misc (ry: 0.27, z: 0.57), dt: 0.67, eta: 8.1h
[INFO]: 2024-04-08 21:54:09,233 iter: 6500, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.3148, cls: 0.0709, iou: 0.1498), misc (ry: 0.43, z: 0.63), dt: 0.67, eta: 8.1h
[INFO]: 2024-04-08 21:56:55,566 iter: 6750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2983, cls: 0.0682, iou: 0.1402), misc (ry: 0.43, z: 0.60), dt: 0.67, eta: 8.1h
[INFO]: 2024-04-08 21:59:41,290 iter: 7000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3424, cls: 0.0788, iou: 0.1525), misc (ry: 0.46, z: 0.68), dt: 0.67, eta: 8.0h
[INFO]: 2024-04-08 22:02:33,866 iter: 7250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2635, cls: 0.0629, iou: 0.1422), misc (ry: 0.34, z: 0.66), dt: 0.67, eta: 8.0h
[INFO]: 2024-04-08 22:05:20,808 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2602, cls: 0.0560, iou: 0.1387), misc (ry: 0.36, z: 0.59), dt: 0.67, eta: 7.9h
[INFO]: 2024-04-08 22:08:06,543 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2414, cls: 0.0561, iou: 0.1348), misc (ry: 0.35, z: 0.57), dt: 0.67, eta: 7.9h
[INFO]: 2024-04-08 22:10:55,972 iter: 8000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2321, cls: 0.0566, iou: 0.1348), misc (ry: 0.33, z: 0.54), dt: 0.67, eta: 7.8h
[INFO]: 2024-04-08 22:13:43,069 iter: 8250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2097, cls: 0.0554, iou: 0.1331), misc (ry: 0.28, z: 0.60), dt: 0.67, eta: 7.8h
[INFO]: 2024-04-08 22:16:29,139 iter: 8500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1983, cls: 0.0528, iou: 0.1265), misc (ry: 0.28, z: 0.53), dt: 0.67, eta: 7.7h
[INFO]: 2024-04-08 22:19:13,816 iter: 8750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1642, cls: 0.0493, iou: 0.1205), misc (ry: 0.23, z: 0.48), dt: 0.67, eta: 7.7h
[INFO]: 2024-04-08 22:21:58,780 iter: 9000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1936, cls: 0.0545, iou: 0.1297), misc (ry: 0.25, z: 0.53), dt: 0.67, eta: 7.6h
[INFO]: 2024-04-08 22:24:44,793 iter: 9250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2185, cls: 0.0527, iou: 0.1295), misc (ry: 0.33, z: 0.53), dt: 0.67, eta: 7.6h
[INFO]: 2024-04-08 22:27:32,539 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1758, cls: 0.0479, iou: 0.1223), misc (ry: 0.27, z: 0.48), dt: 0.67, eta: 7.5h
[INFO]: 2024-04-08 22:30:19,896 iter: 9750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1847, cls: 0.0517, iou: 0.1238), misc (ry: 0.26, z: 0.48), dt: 0.67, eta: 7.5h
[INFO]: 2024-04-08 22:33:06,966 iter: 10000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1950, cls: 0.0533, iou: 0.1255), misc (ry: 0.32, z: 0.48), dt: 0.67, eta: 7.4h
[INFO]: 2024-04-08 22:42:31,065 test_iter 10000 2d car --> easy: 0.8872, mod: 0.8039, hard: 0.6641
[INFO]: 2024-04-08 22:42:31,066 test_iter 10000 gr car --> easy: 0.1314, mod: 0.1247, hard: 0.1137
[INFO]: 2024-04-08 22:42:31,066 test_iter 10000 3d car --> easy: 0.1108, mod: 0.1052, hard: 0.0977
[INFO]: 2024-04-08 22:42:31,067 test_iter 10000 2d pedestrian --> easy: 0.6694, mod: 0.5867, hard: 0.5040
[INFO]: 2024-04-08 22:42:31,067 test_iter 10000 gr pedestrian --> easy: 0.0291, mod: 0.0227, hard: 0.0227
[INFO]: 2024-04-08 22:42:31,068 test_iter 10000 3d pedestrian --> easy: 0.0227, mod: 0.0227, hard: 0.0227
[INFO]: 2024-04-08 22:42:31,068 test_iter 10000 2d cyclist --> easy: 0.4788, mod: 0.3334, hard: 0.2785
[INFO]: 2024-04-08 22:42:31,069 test_iter 10000 gr cyclist --> easy: 0.0150, mod: 0.0089, hard: 0.0092
[INFO]: 2024-04-08 22:42:31,069 test_iter 10000 3d cyclist --> easy: 0.0150, mod: 0.0089, hard: 0.0092
[INFO]: 2024-04-08 22:45:15,401 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1835, cls: 0.0528, iou: 0.1217), misc (ry: 0.25, z: 0.52), dt: 0.72, eta: 8.0h
[INFO]: 2024-04-08 22:48:01,128 iter: 10500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1946, cls: 0.0504, iou: 0.1204), misc (ry: 0.30, z: 0.53), dt: 0.72, eta: 7.9h
[INFO]: 2024-04-08 22:50:44,233 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1760, cls: 0.0511, iou: 0.1241), misc (ry: 0.28, z: 0.51), dt: 0.72, eta: 7.9h
[INFO]: 2024-04-08 22:53:28,606 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1652, cls: 0.0494, iou: 0.1163), misc (ry: 0.23, z: 0.47), dt: 0.72, eta: 7.8h
[INFO]: 2024-04-08 22:56:18,881 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1489, cls: 0.0448, iou: 0.1131), misc (ry: 0.23, z: 0.45), dt: 0.72, eta: 7.7h
[INFO]: 2024-04-08 22:59:06,730 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1386, cls: 0.0446, iou: 0.1121), misc (ry: 0.23, z: 0.45), dt: 0.72, eta: 7.7h
[INFO]: 2024-04-08 23:01:54,942 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1394, cls: 0.0458, iou: 0.1122), misc (ry: 0.23, z: 0.45), dt: 0.72, eta: 7.6h
[INFO]: 2024-04-08 23:04:44,330 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1427, cls: 0.0484, iou: 0.1181), misc (ry: 0.20, z: 0.47), dt: 0.72, eta: 7.6h
[INFO]: 2024-04-08 23:07:32,918 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1409, cls: 0.0462, iou: 0.1130), misc (ry: 0.23, z: 0.44), dt: 0.72, eta: 7.5h
[INFO]: 2024-04-08 23:10:21,793 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1574, cls: 0.0490, iou: 0.1129), misc (ry: 0.27, z: 0.44), dt: 0.71, eta: 7.4h
[INFO]: 2024-04-08 23:13:09,891 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1326, cls: 0.0437, iou: 0.1079), misc (ry: 0.20, z: 0.45), dt: 0.71, eta: 7.4h
[INFO]: 2024-04-08 23:15:59,907 iter: 13000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1789, cls: 0.0517, iou: 0.1189), misc (ry: 0.29, z: 0.51), dt: 0.71, eta: 7.3h
[INFO]: 2024-04-08 23:18:48,682 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1455, cls: 0.0449, iou: 0.1107), misc (ry: 0.21, z: 0.45), dt: 0.71, eta: 7.3h
[INFO]: 2024-04-08 23:21:34,073 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1476, cls: 0.0465, iou: 0.1126), misc (ry: 0.22, z: 0.47), dt: 0.71, eta: 7.2h
[INFO]: 2024-04-08 23:24:16,707 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1346, cls: 0.0419, iou: 0.1099), misc (ry: 0.20, z: 0.47), dt: 0.71, eta: 7.2h
[INFO]: 2024-04-08 23:27:06,289 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1531, cls: 0.0469, iou: 0.1129), misc (ry: 0.24, z: 0.44), dt: 0.71, eta: 7.1h
[INFO]: 2024-04-08 23:29:53,228 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1323, cls: 0.0441, iou: 0.1072), misc (ry: 0.21, z: 0.41), dt: 0.71, eta: 7.0h
[INFO]: 2024-04-08 23:32:41,346 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1275, cls: 0.0424, iou: 0.1053), misc (ry: 0.20, z: 0.43), dt: 0.71, eta: 7.0h
[INFO]: 2024-04-08 23:35:26,760 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1229, cls: 0.0436, iou: 0.1057), misc (ry: 0.21, z: 0.38), dt: 0.71, eta: 6.9h
[INFO]: 2024-04-08 23:38:14,927 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1466, cls: 0.0474, iou: 0.1118), misc (ry: 0.27, z: 0.45), dt: 0.71, eta: 6.9h
[INFO]: 2024-04-08 23:41:02,421 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1589, cls: 0.0453, iou: 0.1112), misc (ry: 0.27, z: 0.45), dt: 0.71, eta: 6.8h
[INFO]: 2024-04-08 23:43:51,830 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1477, cls: 0.0456, iou: 0.1123), misc (ry: 0.23, z: 0.43), dt: 0.71, eta: 6.8h
[INFO]: 2024-04-08 23:46:40,969 iter: 15750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1268, cls: 0.0425, iou: 0.1087), misc (ry: 0.19, z: 0.43), dt: 0.71, eta: 6.7h
[INFO]: 2024-04-08 23:49:31,829 iter: 16000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1231, cls: 0.0427, iou: 0.1041), misc (ry: 0.20, z: 0.41), dt: 0.71, eta: 6.7h
[INFO]: 2024-04-08 23:52:21,744 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1281, cls: 0.0417, iou: 0.1050), misc (ry: 0.19, z: 0.43), dt: 0.70, eta: 6.6h
[INFO]: 2024-04-08 23:55:09,457 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1210, cls: 0.0411, iou: 0.1030), misc (ry: 0.19, z: 0.39), dt: 0.70, eta: 6.6h
[INFO]: 2024-04-08 23:57:57,559 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1038, cls: 0.0409, iou: 0.0993), misc (ry: 0.17, z: 0.39), dt: 0.70, eta: 6.5h
[INFO]: 2024-04-09 00:00:48,607 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1513, cls: 0.0437, iou: 0.1094), misc (ry: 0.27, z: 0.45), dt: 0.70, eta: 6.4h
[INFO]: 2024-04-09 00:03:36,318 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1381, cls: 0.0445, iou: 0.1097), misc (ry: 0.23, z: 0.45), dt: 0.70, eta: 6.4h
[INFO]: 2024-04-09 00:06:25,868 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1006, cls: 0.0380, iou: 0.0981), misc (ry: 0.18, z: 0.39), dt: 0.70, eta: 6.3h
[INFO]: 2024-04-09 00:09:15,008 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1229, cls: 0.0433, iou: 0.1084), misc (ry: 0.20, z: 0.39), dt: 0.70, eta: 6.3h
[INFO]: 2024-04-09 00:12:07,701 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1172, cls: 0.0421, iou: 0.1031), misc (ry: 0.19, z: 0.42), dt: 0.70, eta: 6.2h
[INFO]: 2024-04-09 00:14:57,232 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1329, cls: 0.0422, iou: 0.1064), misc (ry: 0.21, z: 0.43), dt: 0.70, eta: 6.2h
[INFO]: 2024-04-09 00:17:47,329 iter: 18500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1290, cls: 0.0412, iou: 0.1067), misc (ry: 0.22, z: 0.46), dt: 0.70, eta: 6.1h
[INFO]: 2024-04-09 00:20:36,727 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1226, cls: 0.0420, iou: 0.1044), misc (ry: 0.20, z: 0.47), dt: 0.70, eta: 6.1h
[INFO]: 2024-04-09 00:23:22,907 iter: 19000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1123, cls: 0.0404, iou: 0.0985), misc (ry: 0.18, z: 0.41), dt: 0.70, eta: 6.0h
[INFO]: 2024-04-09 00:26:13,353 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1052, cls: 0.0392, iou: 0.0964), misc (ry: 0.19, z: 0.42), dt: 0.70, eta: 6.0h
[INFO]: 2024-04-09 00:29:00,009 iter: 19500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1044, cls: 0.0403, iou: 0.0979), misc (ry: 0.19, z: 0.38), dt: 0.70, eta: 5.9h
[INFO]: 2024-04-09 00:31:50,010 iter: 19750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1287, cls: 0.0413, iou: 0.1033), misc (ry: 0.23, z: 0.42), dt: 0.70, eta: 5.9h
[INFO]: 2024-04-09 00:34:40,486 iter: 20000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1321, cls: 0.0450, iou: 0.1022), misc (ry: 0.23, z: 0.38), dt: 0.70, eta: 5.8h
[INFO]: 2024-04-09 00:44:05,173 test_iter 20000 2d car --> easy: 0.8993, mod: 0.8203, hard: 0.6715
[INFO]: 2024-04-09 00:44:05,174 test_iter 20000 gr car --> easy: 0.2235, mod: 0.1777, hard: 0.1564
[INFO]: 2024-04-09 00:44:05,175 test_iter 20000 3d car --> easy: 0.1761, mod: 0.1437, hard: 0.1279
[INFO]: 2024-04-09 00:44:05,176 test_iter 20000 2d pedestrian --> easy: 0.6359, mod: 0.5584, hard: 0.4797
[INFO]: 2024-04-09 00:44:05,176 test_iter 20000 gr pedestrian --> easy: 0.1059, mod: 0.1007, hard: 0.1009
[INFO]: 2024-04-09 00:44:05,177 test_iter 20000 3d pedestrian --> easy: 0.1009, mod: 0.0987, hard: 0.0909
[INFO]: 2024-04-09 00:44:05,177 test_iter 20000 2d cyclist --> easy: 0.5813, mod: 0.3643, hard: 0.3636
[INFO]: 2024-04-09 00:44:05,178 test_iter 20000 gr cyclist --> easy: 0.0184, mod: 0.0092, hard: 0.0098
[INFO]: 2024-04-09 00:44:05,178 test_iter 20000 3d cyclist --> easy: 0.0138, mod: 0.0064, hard: 0.0068
[INFO]: 2024-04-09 00:46:52,566 iter: 20250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1266, cls: 0.0476, iou: 0.1110), misc (ry: 0.21, z: 0.38), dt: 0.73, eta: 6.0h
[INFO]: 2024-04-09 00:49:41,676 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1116, cls: 0.0404, iou: 0.1003), misc (ry: 0.19, z: 0.38), dt: 0.73, eta: 6.0h
[INFO]: 2024-04-09 00:52:29,701 iter: 20750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0991, cls: 0.0406, iou: 0.0965), misc (ry: 0.19, z: 0.37), dt: 0.73, eta: 5.9h
[INFO]: 2024-04-09 00:55:19,111 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1085, cls: 0.0387, iou: 0.0988), misc (ry: 0.18, z: 0.43), dt: 0.73, eta: 5.8h
[INFO]: 2024-04-09 00:58:05,515 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0990, cls: 0.0404, iou: 0.0960), misc (ry: 0.17, z: 0.40), dt: 0.72, eta: 5.8h
[INFO]: 2024-04-09 01:00:53,916 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0977, cls: 0.0370, iou: 0.0947), misc (ry: 0.17, z: 0.39), dt: 0.72, eta: 5.7h
[INFO]: 2024-04-09 01:03:44,186 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0963, cls: 0.0398, iou: 0.0940), misc (ry: 0.17, z: 0.37), dt: 0.72, eta: 5.7h
[INFO]: 2024-04-09 01:06:30,408 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0945, cls: 0.0387, iou: 0.0935), misc (ry: 0.17, z: 0.39), dt: 0.72, eta: 5.6h
[INFO]: 2024-04-09 01:09:16,576 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0921, cls: 0.0376, iou: 0.0947), misc (ry: 0.16, z: 0.38), dt: 0.72, eta: 5.6h
[INFO]: 2024-04-09 01:12:06,437 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0951, cls: 0.0382, iou: 0.0954), misc (ry: 0.17, z: 0.38), dt: 0.72, eta: 5.5h
[INFO]: 2024-04-09 01:14:57,502 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0921, cls: 0.0400, iou: 0.0914), misc (ry: 0.17, z: 0.36), dt: 0.72, eta: 5.5h
[INFO]: 2024-04-09 01:17:47,463 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0909, cls: 0.0377, iou: 0.0924), misc (ry: 0.16, z: 0.37), dt: 0.72, eta: 5.4h
[INFO]: 2024-04-09 01:20:35,954 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0913, cls: 0.0387, iou: 0.0960), misc (ry: 0.17, z: 0.37), dt: 0.72, eta: 5.4h
[INFO]: 2024-04-09 01:23:27,822 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0930, cls: 0.0388, iou: 0.0922), misc (ry: 0.17, z: 0.38), dt: 0.72, eta: 5.3h
[INFO]: 2024-04-09 01:26:15,633 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0886, cls: 0.0381, iou: 0.0900), misc (ry: 0.16, z: 0.35), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-09 01:29:05,692 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0815, cls: 0.0386, iou: 0.0874), misc (ry: 0.15, z: 0.37), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-09 01:31:54,944 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0820, cls: 0.0370, iou: 0.0848), misc (ry: 0.15, z: 0.33), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-09 01:34:44,011 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0821, cls: 0.0370, iou: 0.0885), misc (ry: 0.16, z: 0.34), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-09 01:37:31,757 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0869, cls: 0.0361, iou: 0.0862), misc (ry: 0.16, z: 0.34), dt: 0.72, eta: 5.0h
[INFO]: 2024-04-09 01:40:19,331 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0350, iou: 0.0844), misc (ry: 0.15, z: 0.35), dt: 0.72, eta: 5.0h
[INFO]: 2024-04-09 01:43:09,867 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0755, cls: 0.0336, iou: 0.0857), misc (ry: 0.16, z: 0.34), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-09 01:45:58,175 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0836, cls: 0.0392, iou: 0.0872), misc (ry: 0.14, z: 0.35), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-09 01:48:45,537 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0862, cls: 0.0361, iou: 0.0891), misc (ry: 0.15, z: 0.40), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-09 01:51:31,023 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0830, cls: 0.0362, iou: 0.0876), misc (ry: 0.16, z: 0.37), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-09 01:54:18,125 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0764, cls: 0.0350, iou: 0.0850), misc (ry: 0.15, z: 0.34), dt: 0.71, eta: 4.7h
[INFO]: 2024-04-09 01:57:08,417 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0767, cls: 0.0374, iou: 0.0851), misc (ry: 0.15, z: 0.34), dt: 0.71, eta: 4.7h
[INFO]: 2024-04-09 01:59:57,385 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0750, cls: 0.0344, iou: 0.0827), misc (ry: 0.16, z: 0.35), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-09 02:02:49,737 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0743, cls: 0.0354, iou: 0.0815), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-09 02:05:38,829 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0705, cls: 0.0347, iou: 0.0820), misc (ry: 0.14, z: 0.32), dt: 0.71, eta: 4.5h
[INFO]: 2024-04-09 02:08:28,876 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0683, cls: 0.0347, iou: 0.0812), misc (ry: 0.14, z: 0.33), dt: 0.71, eta: 4.5h
[INFO]: 2024-04-09 02:11:18,797 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0343, iou: 0.0843), misc (ry: 0.14, z: 0.35), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-09 02:14:06,689 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0655, cls: 0.0342, iou: 0.0827), misc (ry: 0.13, z: 0.32), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-09 02:16:54,274 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0667, cls: 0.0342, iou: 0.0816), misc (ry: 0.13, z: 0.32), dt: 0.71, eta: 4.3h
[INFO]: 2024-04-09 02:19:37,904 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0621, cls: 0.0335, iou: 0.0804), misc (ry: 0.13, z: 0.31), dt: 0.71, eta: 4.3h
[INFO]: 2024-04-09 02:22:24,442 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0629, cls: 0.0340, iou: 0.0792), misc (ry: 0.13, z: 0.31), dt: 0.71, eta: 4.2h
[INFO]: 2024-04-09 02:25:11,344 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0815, cls: 0.0353, iou: 0.0834), misc (ry: 0.19, z: 0.32), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-09 02:27:57,074 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0688, cls: 0.0341, iou: 0.0806), misc (ry: 0.14, z: 0.33), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-09 02:30:44,716 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0752, cls: 0.0354, iou: 0.0829), misc (ry: 0.14, z: 0.33), dt: 0.71, eta: 4.0h
[INFO]: 2024-04-09 02:33:31,148 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0675, cls: 0.0375, iou: 0.0808), misc (ry: 0.14, z: 0.30), dt: 0.71, eta: 4.0h
[INFO]: 2024-04-09 02:36:23,884 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0632, cls: 0.0331, iou: 0.0779), misc (ry: 0.14, z: 0.31), dt: 0.71, eta: 3.9h
[INFO]: 2024-04-09 02:45:42,002 test_iter 30000 2d car --> easy: 0.8998, mod: 0.8314, hard: 0.6755
[INFO]: 2024-04-09 02:45:42,003 test_iter 30000 gr car --> easy: 0.2537, mod: 0.1903, hard: 0.1697
[INFO]: 2024-04-09 02:45:42,003 test_iter 30000 3d car --> easy: 0.1707, mod: 0.1297, hard: 0.1016
[INFO]: 2024-04-09 02:45:42,004 test_iter 30000 2d pedestrian --> easy: 0.6523, mod: 0.5735, hard: 0.4926
[INFO]: 2024-04-09 02:45:42,005 test_iter 30000 gr pedestrian --> easy: 0.1164, mod: 0.1182, hard: 0.1151
[INFO]: 2024-04-09 02:45:42,005 test_iter 30000 3d pedestrian --> easy: 0.0678, mod: 0.1133, hard: 0.1033
[INFO]: 2024-04-09 02:45:42,006 test_iter 30000 2d cyclist --> easy: 0.6255, mod: 0.4456, hard: 0.4380
[INFO]: 2024-04-09 02:45:42,006 test_iter 30000 gr cyclist --> easy: 0.0331, mod: 0.0238, hard: 0.0251
[INFO]: 2024-04-09 02:45:42,007 test_iter 30000 3d cyclist --> easy: 0.0251, mod: 0.0199, hard: 0.0192
[INFO]: 2024-04-09 02:48:28,095 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0662, cls: 0.0325, iou: 0.0780), misc (ry: 0.13, z: 0.33), dt: 0.73, eta: 4.0h
[INFO]: 2024-04-09 02:51:14,721 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0348, iou: 0.0802), misc (ry: 0.14, z: 0.33), dt: 0.73, eta: 3.9h
[INFO]: 2024-04-09 02:54:04,717 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0846, cls: 0.0344, iou: 0.0800), misc (ry: 0.20, z: 0.32), dt: 0.73, eta: 3.9h
[INFO]: 2024-04-09 02:56:54,496 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0778, cls: 0.0333, iou: 0.0789), misc (ry: 0.17, z: 0.34), dt: 0.73, eta: 3.8h
[INFO]: 2024-04-09 02:59:42,375 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0750, cls: 0.0355, iou: 0.0802), misc (ry: 0.16, z: 0.32), dt: 0.73, eta: 3.8h
[INFO]: 2024-04-09 03:02:30,189 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0664, cls: 0.0346, iou: 0.0796), misc (ry: 0.16, z: 0.32), dt: 0.73, eta: 3.7h
[INFO]: 2024-04-09 03:05:17,979 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0634, cls: 0.0336, iou: 0.0801), misc (ry: 0.15, z: 0.32), dt: 0.73, eta: 3.7h
[INFO]: 2024-04-09 03:08:07,214 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0696, cls: 0.0352, iou: 0.0825), misc (ry: 0.15, z: 0.30), dt: 0.72, eta: 3.6h
[INFO]: 2024-04-09 03:10:57,194 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0607, cls: 0.0350, iou: 0.0755), misc (ry: 0.13, z: 0.30), dt: 0.72, eta: 3.6h
[INFO]: 2024-04-09 03:13:44,578 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0612, cls: 0.0345, iou: 0.0765), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-09 03:16:31,985 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0330, iou: 0.0717), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-09 03:19:18,820 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0632, cls: 0.0345, iou: 0.0765), misc (ry: 0.13, z: 0.30), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-09 03:22:07,119 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0530, cls: 0.0322, iou: 0.0725), misc (ry: 0.13, z: 0.26), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-09 03:24:52,993 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0313, iou: 0.0726), misc (ry: 0.12, z: 0.31), dt: 0.72, eta: 3.3h
[INFO]: 2024-04-09 03:27:37,956 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0668, cls: 0.0366, iou: 0.0784), misc (ry: 0.15, z: 0.31), dt: 0.72, eta: 3.3h
[INFO]: 2024-04-09 03:30:22,139 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0551, cls: 0.0323, iou: 0.0742), misc (ry: 0.12, z: 0.30), dt: 0.72, eta: 3.2h
[INFO]: 2024-04-09 03:33:07,613 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0569, cls: 0.0320, iou: 0.0721), misc (ry: 0.12, z: 0.29), dt: 0.72, eta: 3.2h
[INFO]: 2024-04-09 03:35:50,793 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0539, cls: 0.0319, iou: 0.0719), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.1h
[INFO]: 2024-04-09 03:38:35,409 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0522, cls: 0.0322, iou: 0.0707), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.1h
[INFO]: 2024-04-09 03:41:24,739 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0568, cls: 0.0347, iou: 0.0716), misc (ry: 0.13, z: 0.27), dt: 0.72, eta: 3.0h
[INFO]: 2024-04-09 03:44:13,667 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0551, cls: 0.0320, iou: 0.0708), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 2.9h
[INFO]: 2024-04-09 03:47:02,941 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0533, cls: 0.0317, iou: 0.0711), misc (ry: 0.11, z: 0.28), dt: 0.72, eta: 2.9h
[INFO]: 2024-04-09 03:49:49,784 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0507, cls: 0.0313, iou: 0.0677), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 2.8h
[INFO]: 2024-04-09 03:52:35,904 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0317, iou: 0.0670), misc (ry: 0.12, z: 0.25), dt: 0.72, eta: 2.8h
[INFO]: 2024-04-09 03:55:21,603 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0539, cls: 0.0321, iou: 0.0692), misc (ry: 0.13, z: 0.29), dt: 0.72, eta: 2.7h
[INFO]: 2024-04-09 03:58:09,567 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0312, iou: 0.0656), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 2.7h
[INFO]: 2024-04-09 04:01:02,189 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0447, cls: 0.0306, iou: 0.0664), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.6h
[INFO]: 2024-04-09 04:03:52,017 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0488, cls: 0.0318, iou: 0.0680), misc (ry: 0.11, z: 0.26), dt: 0.72, eta: 2.6h
[INFO]: 2024-04-09 04:06:42,163 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0463, cls: 0.0310, iou: 0.0664), misc (ry: 0.11, z: 0.27), dt: 0.72, eta: 2.5h
[INFO]: 2024-04-09 04:09:28,801 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0486, cls: 0.0309, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 2.5h
[INFO]: 2024-04-09 04:12:13,436 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0315, iou: 0.0663), misc (ry: 0.12, z: 0.25), dt: 0.72, eta: 2.4h
[INFO]: 2024-04-09 04:14:59,563 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0470, cls: 0.0304, iou: 0.0667), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 2.4h
[INFO]: 2024-04-09 04:17:44,527 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0460, cls: 0.0314, iou: 0.0656), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.3h
[INFO]: 2024-04-09 04:20:31,714 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0452, cls: 0.0295, iou: 0.0626), misc (ry: 0.11, z: 0.27), dt: 0.72, eta: 2.3h
[INFO]: 2024-04-09 04:23:19,009 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0473, cls: 0.0317, iou: 0.0653), misc (ry: 0.11, z: 0.26), dt: 0.72, eta: 2.2h
[INFO]: 2024-04-09 04:26:11,891 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0479, cls: 0.0308, iou: 0.0651), misc (ry: 0.12, z: 0.26), dt: 0.71, eta: 2.2h
[INFO]: 2024-04-09 04:29:01,635 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0445, cls: 0.0326, iou: 0.0632), misc (ry: 0.11, z: 0.24), dt: 0.71, eta: 2.1h
[INFO]: 2024-04-09 04:31:45,092 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0475, cls: 0.0317, iou: 0.0636), misc (ry: 0.12, z: 0.24), dt: 0.71, eta: 2.1h
[INFO]: 2024-04-09 04:34:31,861 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0489, cls: 0.0306, iou: 0.0624), misc (ry: 0.12, z: 0.25), dt: 0.71, eta: 2.0h
[INFO]: 2024-04-09 04:37:16,222 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0428, cls: 0.0315, iou: 0.0624), misc (ry: 0.11, z: 0.24), dt: 0.71, eta: 2.0h
[INFO]: 2024-04-09 04:46:38,683 test_iter 40000 2d car --> easy: 0.8824, mod: 0.8215, hard: 0.6688
[INFO]: 2024-04-09 04:46:38,684 test_iter 40000 gr car --> easy: 0.2555, mod: 0.2093, hard: 0.1771
[INFO]: 2024-04-09 04:46:38,684 test_iter 40000 3d car --> easy: 0.1934, mod: 0.1667, hard: 0.1337
[INFO]: 2024-04-09 04:46:38,685 test_iter 40000 2d pedestrian --> easy: 0.6682, mod: 0.5886, hard: 0.5054
[INFO]: 2024-04-09 04:46:38,685 test_iter 40000 gr pedestrian --> easy: 0.1252, mod: 0.1142, hard: 0.1100
[INFO]: 2024-04-09 04:46:38,686 test_iter 40000 3d pedestrian --> easy: 0.0658, mod: 0.0626, hard: 0.0570
[INFO]: 2024-04-09 04:46:38,686 test_iter 40000 2d cyclist --> easy: 0.6325, mod: 0.3955, hard: 0.3920
[INFO]: 2024-04-09 04:46:38,687 test_iter 40000 gr cyclist --> easy: 0.0318, mod: 0.0272, hard: 0.0268
[INFO]: 2024-04-09 04:46:38,687 test_iter 40000 3d cyclist --> easy: 0.0311, mod: 0.0247, hard: 0.0260
[INFO]: 2024-04-09 04:49:33,095 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0453, cls: 0.0325, iou: 0.0619), misc (ry: 0.11, z: 0.24), dt: 0.73, eta: 2.0h
[INFO]: 2024-04-09 04:52:17,215 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0320, iou: 0.0634), misc (ry: 0.12, z: 0.24), dt: 0.73, eta: 1.9h
[INFO]: 2024-04-09 04:55:01,918 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0411, cls: 0.0308, iou: 0.0612), misc (ry: 0.11, z: 0.24), dt: 0.73, eta: 1.9h
[INFO]: 2024-04-09 04:57:51,433 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0417, cls: 0.0314, iou: 0.0610), misc (ry: 0.11, z: 0.23), dt: 0.73, eta: 1.8h
[INFO]: 2024-04-09 05:00:44,442 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0440, cls: 0.0321, iou: 0.0603), misc (ry: 0.10, z: 0.23), dt: 0.73, eta: 1.8h
[INFO]: 2024-04-09 05:03:28,594 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0410, cls: 0.0298, iou: 0.0594), misc (ry: 0.11, z: 0.23), dt: 0.73, eta: 1.7h
[INFO]: 2024-04-09 05:06:11,459 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0364, cls: 0.0294, iou: 0.0564), misc (ry: 0.11, z: 0.22), dt: 0.73, eta: 1.7h
[INFO]: 2024-04-09 05:08:56,976 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0400, cls: 0.0297, iou: 0.0587), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.6h
[INFO]: 2024-04-09 05:11:43,673 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0294, iou: 0.0580), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 1.6h
[INFO]: 2024-04-09 05:14:30,807 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0393, cls: 0.0311, iou: 0.0574), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.5h
[INFO]: 2024-04-09 05:17:14,444 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0417, cls: 0.0301, iou: 0.0589), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 1.5h
[INFO]: 2024-04-09 05:19:57,167 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0359, cls: 0.0279, iou: 0.0554), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.4h
[INFO]: 2024-04-09 05:22:47,890 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0365, cls: 0.0296, iou: 0.0560), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.4h
[INFO]: 2024-04-09 05:25:39,103 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0408, cls: 0.0301, iou: 0.0583), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 1.3h
[INFO]: 2024-04-09 05:28:30,040 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0415, cls: 0.0295, iou: 0.0579), misc (ry: 0.11, z: 0.22), dt: 0.72, eta: 1.3h
[INFO]: 2024-04-09 05:31:17,106 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0350, cls: 0.0293, iou: 0.0540), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.2h
[INFO]: 2024-04-09 05:34:01,024 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0367, cls: 0.0288, iou: 0.0559), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.2h
[INFO]: 2024-04-09 05:36:51,438 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0363, cls: 0.0293, iou: 0.0551), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.1h
[INFO]: 2024-04-09 05:39:44,282 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0397, cls: 0.0305, iou: 0.0544), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.1h
[INFO]: 2024-04-09 05:42:29,328 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0324, cls: 0.0283, iou: 0.0524), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.0h
[INFO]: 2024-04-09 05:45:16,880 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0346, cls: 0.0283, iou: 0.0533), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 57.1m
[INFO]: 2024-04-09 05:48:02,549 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0287, iou: 0.0521), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 54.1m
[INFO]: 2024-04-09 05:50:49,470 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0343, cls: 0.0287, iou: 0.0522), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 51.0m
[INFO]: 2024-04-09 05:53:41,809 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0341, cls: 0.0273, iou: 0.0523), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 48.0m
[INFO]: 2024-04-09 05:56:32,363 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0330, cls: 0.0291, iou: 0.0517), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 45.0m
[INFO]: 2024-04-09 05:59:24,469 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0320, cls: 0.0279, iou: 0.0512), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 42.0m
[INFO]: 2024-04-09 06:02:16,306 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0319, cls: 0.0280, iou: 0.0515), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 39.0m
[INFO]: 2024-04-09 06:05:07,360 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0362, cls: 0.0291, iou: 0.0524), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 36.0m
[INFO]: 2024-04-09 06:07:56,829 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0386, cls: 0.0293, iou: 0.0537), misc (ry: 0.11, z: 0.21), dt: 0.72, eta: 33.0m
[INFO]: 2024-04-09 06:10:42,264 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0368, cls: 0.0303, iou: 0.0533), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 30.0m
[INFO]: 2024-04-09 06:13:29,462 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0353, cls: 0.0291, iou: 0.0530), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 27.0m
[INFO]: 2024-04-09 06:16:19,661 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0337, cls: 0.0288, iou: 0.0511), misc (ry: 0.09, z: 0.22), dt: 0.72, eta: 24.0m
[INFO]: 2024-04-09 06:19:11,400 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0288, iou: 0.0511), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 21.0m
[INFO]: 2024-04-09 06:21:58,868 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0348, cls: 0.0294, iou: 0.0489), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 18.0m
[INFO]: 2024-04-09 06:24:42,759 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0383, cls: 0.0300, iou: 0.0540), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 15.0m
[INFO]: 2024-04-09 06:27:24,680 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0286, iou: 0.0498), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 12.0m
[INFO]: 2024-04-09 06:30:11,683 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0292, iou: 0.0496), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 9.0m
[INFO]: 2024-04-09 06:33:02,762 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0321, cls: 0.0284, iou: 0.0492), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 6.0m
[INFO]: 2024-04-09 06:35:52,791 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0289, iou: 0.0487), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 3.0m
[INFO]: 2024-04-09 06:38:42,877 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0285, iou: 0.0479), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 0.7s
[INFO]: 2024-04-09 06:48:03,237 test_iter 50000 2d car --> easy: 0.9081, mod: 0.8396, hard: 0.6799
[INFO]: 2024-04-09 06:48:03,238 test_iter 50000 gr car --> easy: 0.2774, mod: 0.2222, hard: 0.1856
[INFO]: 2024-04-09 06:48:03,238 test_iter 50000 3d car --> easy: 0.2123, mod: 0.1765, hard: 0.1551
[INFO]: 2024-04-09 06:48:03,239 test_iter 50000 2d pedestrian --> easy: 0.6620, mod: 0.5836, hard: 0.5010
[INFO]: 2024-04-09 06:48:03,239 test_iter 50000 gr pedestrian --> easy: 0.1258, mod: 0.1136, hard: 0.1111
[INFO]: 2024-04-09 06:48:03,240 test_iter 50000 3d pedestrian --> easy: 0.1106, mod: 0.1106, hard: 0.1037
[INFO]: 2024-04-09 06:48:03,241 test_iter 50000 2d cyclist --> easy: 0.6444, mod: 0.4084, hard: 0.4054
[INFO]: 2024-04-09 06:48:03,241 test_iter 50000 gr cyclist --> easy: 0.0649, mod: 0.0342, hard: 0.0337
[INFO]: 2024-04-09 06:48:03,242 test_iter 50000 3d cyclist --> easy: 0.0519, mod: 0.0324, hard: 0.0324
