[INFO]: 2024-04-07 19:28:55,408 ==开始处理数据集==
[INFO]: 2024-04-07 19:28:55,408 命中imdb缓存.
[INFO]: 2024-04-07 19:28:56,693 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-07 19:28:56,694 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-07 19:28:59,129 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-07 19:28:59,129 ==数据集处理完毕==
[INFO]: 2024-04-07 19:29:02,133 ==开始生成anchors==
[INFO]: 2024-04-07 19:29:02,133 ==anchors生成完毕==
[INFO]: 2024-04-07 19:29:05,136 ==开始计算bbox参数==
[INFO]: 2024-04-07 19:29:05,136 命中bbox的回归均值缓存
[INFO]: 2024-04-07 19:29:05,137 命中bbox的回归标准差缓存
[INFO]: 2024-04-07 19:29:05,137 ==bbox参数计算完毕==
[INFO]: 2024-04-07 19:29:13,168 设置保存完成
[INFO]: 2024-04-07 19:29:16,172 训练配置一览
[INFO]: 2024-04-07 19:29:18,178 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-07 19:29:23,991 装载完成
[INFO]: 2024-04-07 19:29:26,994 神经网络结构一览
[INFO]: 2024-04-07 19:29:28,996 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-07 19:29:29,023 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-07 19:32:17,398 iter: 250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3714, cls: 0.0738, iou: 0.1577), misc (ry: 0.47, z: 0.75), dt: 0.68, eta: 9.3h
[INFO]: 2024-04-07 19:35:08,190 iter: 500, acc (bg: 1.00, fg: 0.88, iou: 0.80), loss (bbox_3d: 0.7427, cls: 0.1490, iou: 0.2312), misc (ry: 0.78, z: 1.11), dt: 0.68, eta: 9.3h
[INFO]: 2024-04-07 19:37:57,456 iter: 750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5563, cls: 0.0985, iou: 0.1932), misc (ry: 0.64, z: 0.94), dt: 0.68, eta: 9.3h
[INFO]: 2024-04-07 19:40:47,587 iter: 1000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4261, cls: 0.0806, iou: 0.1706), misc (ry: 0.49, z: 0.81), dt: 0.68, eta: 9.2h
[INFO]: 2024-04-07 19:43:40,874 iter: 1250, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.4662, cls: 0.1017, iou: 0.1816), misc (ry: 0.48, z: 0.93), dt: 0.68, eta: 9.2h
[INFO]: 2024-04-07 19:46:33,517 iter: 1500, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.6201, cls: 0.1249, iou: 0.2047), misc (ry: 0.75, z: 0.90), dt: 0.68, eta: 9.2h
[INFO]: 2024-04-07 19:49:25,496 iter: 1750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5052, cls: 0.0947, iou: 0.1902), misc (ry: 0.58, z: 0.90), dt: 0.68, eta: 9.2h
[INFO]: 2024-04-07 19:52:18,445 iter: 2000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4304, cls: 0.0835, iou: 0.1647), misc (ry: 0.51, z: 0.76), dt: 0.68, eta: 9.1h
[INFO]: 2024-04-07 19:55:11,439 iter: 2250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3666, cls: 0.0816, iou: 0.1616), misc (ry: 0.43, z: 0.75), dt: 0.69, eta: 9.1h
[INFO]: 2024-04-07 19:58:03,403 iter: 2500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3702, cls: 0.0780, iou: 0.1641), misc (ry: 0.45, z: 0.71), dt: 0.69, eta: 9.1h
[INFO]: 2024-04-07 20:00:51,424 iter: 2750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3772, cls: 0.0747, iou: 0.1654), misc (ry: 0.47, z: 0.74), dt: 0.68, eta: 9.0h
[INFO]: 2024-04-07 20:03:41,942 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3076, cls: 0.0690, iou: 0.1538), misc (ry: 0.38, z: 0.68), dt: 0.68, eta: 8.9h
[INFO]: 2024-04-07 20:06:35,182 iter: 3250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2782, cls: 0.0604, iou: 0.1434), misc (ry: 0.38, z: 0.60), dt: 0.69, eta: 8.9h
[INFO]: 2024-04-07 20:09:27,688 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2822, cls: 0.0637, iou: 0.1434), misc (ry: 0.35, z: 0.60), dt: 0.69, eta: 8.9h
[INFO]: 2024-04-07 20:12:18,979 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2703, cls: 0.0643, iou: 0.1415), misc (ry: 0.34, z: 0.63), dt: 0.69, eta: 8.8h
[INFO]: 2024-04-07 20:15:10,839 iter: 4000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2510, cls: 0.0608, iou: 0.1416), misc (ry: 0.34, z: 0.58), dt: 0.69, eta: 8.8h
[INFO]: 2024-04-07 20:17:57,222 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2474, cls: 0.0564, iou: 0.1347), misc (ry: 0.35, z: 0.62), dt: 0.68, eta: 8.7h
[INFO]: 2024-04-07 20:20:46,702 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2347, cls: 0.0599, iou: 0.1384), misc (ry: 0.32, z: 0.54), dt: 0.68, eta: 8.6h
[INFO]: 2024-04-07 20:23:35,811 iter: 4750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2561, cls: 0.0649, iou: 0.1419), misc (ry: 0.34, z: 0.62), dt: 0.68, eta: 8.6h
[INFO]: 2024-04-07 20:26:32,959 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2588, cls: 0.0579, iou: 0.1385), misc (ry: 0.37, z: 0.62), dt: 0.68, eta: 8.6h
[INFO]: 2024-04-07 20:29:25,059 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2410, cls: 0.0583, iou: 0.1400), misc (ry: 0.34, z: 0.55), dt: 0.69, eta: 8.5h
[INFO]: 2024-04-07 20:32:15,608 iter: 5500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2517, cls: 0.0568, iou: 0.1385), misc (ry: 0.38, z: 0.55), dt: 0.68, eta: 8.5h
[INFO]: 2024-04-07 20:35:05,253 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2096, cls: 0.0559, iou: 0.1285), misc (ry: 0.28, z: 0.58), dt: 0.68, eta: 8.4h
[INFO]: 2024-04-07 20:37:54,740 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2057, cls: 0.0517, iou: 0.1281), misc (ry: 0.29, z: 0.52), dt: 0.68, eta: 8.4h
[INFO]: 2024-04-07 20:40:48,827 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1964, cls: 0.0549, iou: 0.1243), misc (ry: 0.26, z: 0.51), dt: 0.68, eta: 8.3h
[INFO]: 2024-04-07 20:43:36,454 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2093, cls: 0.0538, iou: 0.1275), misc (ry: 0.31, z: 0.54), dt: 0.68, eta: 8.3h
[INFO]: 2024-04-07 20:46:24,984 iter: 6750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1749, cls: 0.0496, iou: 0.1222), misc (ry: 0.25, z: 0.51), dt: 0.68, eta: 8.2h
[INFO]: 2024-04-07 20:49:12,029 iter: 7000, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.3087, cls: 0.0725, iou: 0.1457), misc (ry: 0.42, z: 0.66), dt: 0.68, eta: 8.2h
[INFO]: 2024-04-07 20:52:01,262 iter: 7250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2192, cls: 0.0556, iou: 0.1313), misc (ry: 0.30, z: 0.61), dt: 0.68, eta: 8.1h
[INFO]: 2024-04-07 20:54:49,605 iter: 7500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2496, cls: 0.0520, iou: 0.1310), misc (ry: 0.39, z: 0.56), dt: 0.68, eta: 8.1h
[INFO]: 2024-04-07 20:57:33,047 iter: 7750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2125, cls: 0.0502, iou: 0.1234), misc (ry: 0.31, z: 0.55), dt: 0.68, eta: 8.0h
[INFO]: 2024-04-07 21:00:19,971 iter: 8000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1771, cls: 0.0513, iou: 0.1264), misc (ry: 0.27, z: 0.51), dt: 0.68, eta: 8.0h
[INFO]: 2024-04-07 21:03:10,568 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1864, cls: 0.0498, iou: 0.1232), misc (ry: 0.26, z: 0.57), dt: 0.68, eta: 7.9h
[INFO]: 2024-04-07 21:05:57,304 iter: 8500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2213, cls: 0.0532, iou: 0.1267), misc (ry: 0.36, z: 0.55), dt: 0.68, eta: 7.9h
[INFO]: 2024-04-07 21:08:42,907 iter: 8750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1739, cls: 0.0489, iou: 0.1198), misc (ry: 0.26, z: 0.49), dt: 0.68, eta: 7.8h
[INFO]: 2024-04-07 21:11:29,519 iter: 9000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2182, cls: 0.0552, iou: 0.1306), misc (ry: 0.30, z: 0.58), dt: 0.68, eta: 7.7h
[INFO]: 2024-04-07 21:14:12,999 iter: 9250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2142, cls: 0.0526, iou: 0.1291), misc (ry: 0.30, z: 0.60), dt: 0.68, eta: 7.7h
[INFO]: 2024-04-07 21:17:02,415 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1648, cls: 0.0465, iou: 0.1184), misc (ry: 0.26, z: 0.48), dt: 0.68, eta: 7.6h
[INFO]: 2024-04-07 21:19:46,865 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1559, cls: 0.0482, iou: 0.1167), misc (ry: 0.23, z: 0.50), dt: 0.68, eta: 7.6h
[INFO]: 2024-04-07 21:22:31,481 iter: 10000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2072, cls: 0.0535, iou: 0.1262), misc (ry: 0.36, z: 0.48), dt: 0.68, eta: 7.5h
[INFO]: 2024-04-07 21:31:56,028 test_iter 10000 2d car --> easy: 0.8659, mod: 0.7947, hard: 0.6523
[INFO]: 2024-04-07 21:31:56,029 test_iter 10000 gr car --> easy: 0.1031, mod: 0.0805, hard: 0.0690
[INFO]: 2024-04-07 21:31:56,030 test_iter 10000 3d car --> easy: 0.0535, mod: 0.0472, hard: 0.0391
[INFO]: 2024-04-07 21:31:56,031 test_iter 10000 2d pedestrian --> easy: 0.6704, mod: 0.5912, hard: 0.5089
[INFO]: 2024-04-07 21:31:56,031 test_iter 10000 gr pedestrian --> easy: 0.0393, mod: 0.0366, hard: 0.0303
[INFO]: 2024-04-07 21:31:56,032 test_iter 10000 3d pedestrian --> easy: 0.0346, mod: 0.0303, hard: 0.0303
[INFO]: 2024-04-07 21:31:56,032 test_iter 10000 2d cyclist --> easy: 0.5124, mod: 0.3617, hard: 0.3026
[INFO]: 2024-04-07 21:31:56,033 test_iter 10000 gr cyclist --> easy: 0.0152, mod: 0.0084, hard: 0.0086
[INFO]: 2024-04-07 21:31:56,033 test_iter 10000 3d cyclist --> easy: 0.0148, mod: 0.0084, hard: 0.0085
[INFO]: 2024-04-07 21:34:45,345 iter: 10250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2026, cls: 0.0541, iou: 0.1233), misc (ry: 0.30, z: 0.52), dt: 0.73, eta: 8.1h
[INFO]: 2024-04-07 21:37:33,655 iter: 10500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2432, cls: 0.0588, iou: 0.1305), misc (ry: 0.36, z: 0.59), dt: 0.73, eta: 8.0h
[INFO]: 2024-04-07 21:40:18,490 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1900, cls: 0.0511, iou: 0.1238), misc (ry: 0.30, z: 0.53), dt: 0.73, eta: 8.0h
[INFO]: 2024-04-07 21:43:01,347 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1523, cls: 0.0498, iou: 0.1156), misc (ry: 0.22, z: 0.45), dt: 0.73, eta: 7.9h
[INFO]: 2024-04-07 21:45:46,835 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1717, cls: 0.0456, iou: 0.1137), misc (ry: 0.28, z: 0.47), dt: 0.73, eta: 7.8h
[INFO]: 2024-04-07 21:48:36,085 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1462, cls: 0.0439, iou: 0.1108), misc (ry: 0.23, z: 0.47), dt: 0.73, eta: 7.8h
[INFO]: 2024-04-07 21:51:26,757 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1906, cls: 0.0486, iou: 0.1182), misc (ry: 0.33, z: 0.50), dt: 0.72, eta: 7.7h
[INFO]: 2024-04-07 21:54:15,243 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1576, cls: 0.0502, iou: 0.1186), misc (ry: 0.25, z: 0.49), dt: 0.72, eta: 7.6h
[INFO]: 2024-04-07 21:57:03,501 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1467, cls: 0.0465, iou: 0.1138), misc (ry: 0.24, z: 0.45), dt: 0.72, eta: 7.6h
[INFO]: 2024-04-07 21:59:53,157 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1597, cls: 0.0487, iou: 0.1136), misc (ry: 0.27, z: 0.44), dt: 0.72, eta: 7.5h
[INFO]: 2024-04-07 22:02:41,919 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1278, cls: 0.0427, iou: 0.1075), misc (ry: 0.19, z: 0.43), dt: 0.72, eta: 7.5h
[INFO]: 2024-04-07 22:05:27,176 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1449, cls: 0.0483, iou: 0.1094), misc (ry: 0.23, z: 0.46), dt: 0.72, eta: 7.4h
[INFO]: 2024-04-07 22:08:10,825 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1419, cls: 0.0444, iou: 0.1085), misc (ry: 0.21, z: 0.47), dt: 0.72, eta: 7.3h
[INFO]: 2024-04-07 22:10:57,342 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1703, cls: 0.0479, iou: 0.1153), misc (ry: 0.27, z: 0.50), dt: 0.72, eta: 7.3h
[INFO]: 2024-04-07 22:13:44,633 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1644, cls: 0.0452, iou: 0.1155), misc (ry: 0.27, z: 0.50), dt: 0.72, eta: 7.2h
[INFO]: 2024-04-07 22:16:28,533 iter: 14000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2077, cls: 0.0500, iou: 0.1207), misc (ry: 0.34, z: 0.48), dt: 0.72, eta: 7.2h
[INFO]: 2024-04-07 22:19:13,515 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1408, cls: 0.0450, iou: 0.1099), misc (ry: 0.24, z: 0.43), dt: 0.71, eta: 7.1h
[INFO]: 2024-04-07 22:21:59,929 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1447, cls: 0.0442, iou: 0.1083), misc (ry: 0.23, z: 0.43), dt: 0.71, eta: 7.0h
[INFO]: 2024-04-07 22:24:45,463 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1294, cls: 0.0452, iou: 0.1093), misc (ry: 0.21, z: 0.41), dt: 0.71, eta: 7.0h
[INFO]: 2024-04-07 22:27:28,080 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1348, cls: 0.0445, iou: 0.1084), misc (ry: 0.23, z: 0.45), dt: 0.71, eta: 6.9h
[INFO]: 2024-04-07 22:30:11,843 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1171, cls: 0.0444, iou: 0.1053), misc (ry: 0.19, z: 0.42), dt: 0.71, eta: 6.9h
[INFO]: 2024-04-07 22:32:57,746 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1342, cls: 0.0447, iou: 0.1083), misc (ry: 0.22, z: 0.43), dt: 0.71, eta: 6.8h
[INFO]: 2024-04-07 22:35:43,756 iter: 15750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1286, cls: 0.0421, iou: 0.1040), misc (ry: 0.19, z: 0.45), dt: 0.71, eta: 6.8h
[INFO]: 2024-04-07 22:38:31,166 iter: 16000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1204, cls: 0.0427, iou: 0.1025), misc (ry: 0.20, z: 0.43), dt: 0.71, eta: 6.7h
[INFO]: 2024-04-07 22:41:17,174 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1172, cls: 0.0425, iou: 0.1036), misc (ry: 0.19, z: 0.43), dt: 0.71, eta: 6.6h
[INFO]: 2024-04-07 22:44:02,462 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1207, cls: 0.0411, iou: 0.1037), misc (ry: 0.19, z: 0.41), dt: 0.71, eta: 6.6h
[INFO]: 2024-04-07 22:46:48,242 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1066, cls: 0.0404, iou: 0.0988), misc (ry: 0.17, z: 0.40), dt: 0.71, eta: 6.5h
[INFO]: 2024-04-07 22:49:36,271 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1321, cls: 0.0442, iou: 0.1067), misc (ry: 0.23, z: 0.44), dt: 0.71, eta: 6.5h
[INFO]: 2024-04-07 22:52:22,275 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1151, cls: 0.0429, iou: 0.1046), misc (ry: 0.19, z: 0.43), dt: 0.71, eta: 6.4h
[INFO]: 2024-04-07 22:55:05,712 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1007, cls: 0.0368, iou: 0.0960), misc (ry: 0.17, z: 0.43), dt: 0.70, eta: 6.4h
[INFO]: 2024-04-07 22:57:46,061 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1237, cls: 0.0422, iou: 0.1055), misc (ry: 0.22, z: 0.38), dt: 0.70, eta: 6.3h
[INFO]: 2024-04-07 23:00:34,407 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1221, cls: 0.0411, iou: 0.1024), misc (ry: 0.19, z: 0.47), dt: 0.70, eta: 6.3h
[INFO]: 2024-04-07 23:03:25,401 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1158, cls: 0.0412, iou: 0.1025), misc (ry: 0.19, z: 0.43), dt: 0.70, eta: 6.2h
[INFO]: 2024-04-07 23:06:12,149 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1065, cls: 0.0392, iou: 0.0987), misc (ry: 0.18, z: 0.43), dt: 0.70, eta: 6.2h
[INFO]: 2024-04-07 23:08:58,980 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1155, cls: 0.0401, iou: 0.0996), misc (ry: 0.18, z: 0.46), dt: 0.70, eta: 6.1h
[INFO]: 2024-04-07 23:11:42,679 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1170, cls: 0.0390, iou: 0.0978), misc (ry: 0.18, z: 0.48), dt: 0.70, eta: 6.0h
[INFO]: 2024-04-07 23:14:31,407 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1104, cls: 0.0387, iou: 0.0957), misc (ry: 0.18, z: 0.45), dt: 0.70, eta: 6.0h
[INFO]: 2024-04-07 23:17:20,897 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1010, cls: 0.0394, iou: 0.0968), misc (ry: 0.17, z: 0.39), dt: 0.70, eta: 5.9h
[INFO]: 2024-04-07 23:20:11,320 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1062, cls: 0.0395, iou: 0.0978), misc (ry: 0.19, z: 0.41), dt: 0.70, eta: 5.9h
[INFO]: 2024-04-07 23:23:04,157 iter: 20000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1047, cls: 0.0420, iou: 0.0967), misc (ry: 0.17, z: 0.37), dt: 0.70, eta: 5.8h
[INFO]: 2024-04-07 23:32:25,360 test_iter 20000 2d car --> easy: 0.8761, mod: 0.8184, hard: 0.6653
[INFO]: 2024-04-07 23:32:25,361 test_iter 20000 gr car --> easy: 0.1956, mod: 0.1832, hard: 0.1668
[INFO]: 2024-04-07 23:32:25,362 test_iter 20000 3d car --> easy: 0.1386, mod: 0.1535, hard: 0.1287
[INFO]: 2024-04-07 23:32:25,362 test_iter 20000 2d pedestrian --> easy: 0.6506, mod: 0.5714, hard: 0.4927
[INFO]: 2024-04-07 23:32:25,363 test_iter 20000 gr pedestrian --> easy: 0.0606, mod: 0.0584, hard: 0.0567
[INFO]: 2024-04-07 23:32:25,364 test_iter 20000 3d pedestrian --> easy: 0.0565, mod: 0.0548, hard: 0.0455
[INFO]: 2024-04-07 23:32:25,364 test_iter 20000 2d cyclist --> easy: 0.5102, mod: 0.3585, hard: 0.3580
[INFO]: 2024-04-07 23:32:25,365 test_iter 20000 gr cyclist --> easy: 0.0251, mod: 0.0233, hard: 0.0130
[INFO]: 2024-04-07 23:32:25,365 test_iter 20000 3d cyclist --> easy: 0.0215, mod: 0.0114, hard: 0.0114
[INFO]: 2024-04-07 23:35:12,700 iter: 20250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0435, iou: 0.1016), misc (ry: 0.19, z: 0.36), dt: 0.73, eta: 6.0h
[INFO]: 2024-04-07 23:37:56,370 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0915, cls: 0.0384, iou: 0.0936), misc (ry: 0.16, z: 0.36), dt: 0.73, eta: 6.0h
[INFO]: 2024-04-07 23:40:41,416 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0883, cls: 0.0384, iou: 0.0919), misc (ry: 0.16, z: 0.35), dt: 0.73, eta: 5.9h
[INFO]: 2024-04-07 23:43:27,002 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0987, cls: 0.0383, iou: 0.0961), misc (ry: 0.17, z: 0.40), dt: 0.73, eta: 5.8h
[INFO]: 2024-04-07 23:46:14,480 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0939, cls: 0.0389, iou: 0.0934), misc (ry: 0.17, z: 0.39), dt: 0.72, eta: 5.8h
[INFO]: 2024-04-07 23:49:00,335 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0940, cls: 0.0365, iou: 0.0917), misc (ry: 0.16, z: 0.40), dt: 0.72, eta: 5.7h
[INFO]: 2024-04-07 23:51:47,753 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0864, cls: 0.0384, iou: 0.0890), misc (ry: 0.17, z: 0.34), dt: 0.72, eta: 5.7h
[INFO]: 2024-04-07 23:54:38,067 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0913, cls: 0.0378, iou: 0.0914), misc (ry: 0.17, z: 0.38), dt: 0.72, eta: 5.6h
[INFO]: 2024-04-07 23:57:25,423 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0872, cls: 0.0364, iou: 0.0911), misc (ry: 0.15, z: 0.40), dt: 0.72, eta: 5.6h
[INFO]: 2024-04-08 00:00:12,347 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0841, cls: 0.0365, iou: 0.0898), misc (ry: 0.16, z: 0.36), dt: 0.72, eta: 5.5h
[INFO]: 2024-04-08 00:03:00,637 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.1012, cls: 0.0396, iou: 0.0896), misc (ry: 0.19, z: 0.39), dt: 0.72, eta: 5.5h
[INFO]: 2024-04-08 00:05:48,188 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0910, cls: 0.0370, iou: 0.0912), misc (ry: 0.16, z: 0.37), dt: 0.72, eta: 5.4h
[INFO]: 2024-04-08 00:08:37,382 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0908, cls: 0.0379, iou: 0.0943), misc (ry: 0.16, z: 0.39), dt: 0.72, eta: 5.4h
[INFO]: 2024-04-08 00:11:24,412 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0891, cls: 0.0377, iou: 0.0907), misc (ry: 0.16, z: 0.37), dt: 0.72, eta: 5.3h
[INFO]: 2024-04-08 00:14:13,192 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0839, cls: 0.0377, iou: 0.0888), misc (ry: 0.16, z: 0.33), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-08 00:17:04,234 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0785, cls: 0.0379, iou: 0.0867), misc (ry: 0.15, z: 0.36), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-08 00:19:55,756 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0777, cls: 0.0365, iou: 0.0839), misc (ry: 0.15, z: 0.34), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-08 00:22:43,216 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0789, cls: 0.0362, iou: 0.0858), misc (ry: 0.15, z: 0.35), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-08 00:25:28,352 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0794, cls: 0.0354, iou: 0.0845), misc (ry: 0.15, z: 0.33), dt: 0.72, eta: 5.0h
[INFO]: 2024-04-08 00:28:16,040 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0345, iou: 0.0856), misc (ry: 0.14, z: 0.35), dt: 0.72, eta: 5.0h
[INFO]: 2024-04-08 00:31:02,684 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0731, cls: 0.0335, iou: 0.0837), misc (ry: 0.16, z: 0.34), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-08 00:33:52,602 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0377, iou: 0.0852), misc (ry: 0.14, z: 0.34), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-08 00:36:41,140 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0736, cls: 0.0355, iou: 0.0830), misc (ry: 0.14, z: 0.33), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-08 00:39:27,612 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0768, cls: 0.0351, iou: 0.0860), misc (ry: 0.16, z: 0.35), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-08 00:42:16,151 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0348, iou: 0.0827), misc (ry: 0.14, z: 0.34), dt: 0.71, eta: 4.7h
[INFO]: 2024-04-08 00:45:02,477 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0771, cls: 0.0369, iou: 0.0841), misc (ry: 0.15, z: 0.33), dt: 0.71, eta: 4.7h
[INFO]: 2024-04-08 00:47:48,308 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0703, cls: 0.0338, iou: 0.0812), misc (ry: 0.15, z: 0.33), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-08 00:50:37,257 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0721, cls: 0.0349, iou: 0.0802), misc (ry: 0.14, z: 0.32), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-08 00:53:27,487 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0692, cls: 0.0346, iou: 0.0798), misc (ry: 0.14, z: 0.34), dt: 0.71, eta: 4.5h
[INFO]: 2024-04-08 00:56:15,118 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0669, cls: 0.0341, iou: 0.0777), misc (ry: 0.15, z: 0.31), dt: 0.71, eta: 4.5h
[INFO]: 2024-04-08 00:59:01,659 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0715, cls: 0.0337, iou: 0.0838), misc (ry: 0.15, z: 0.35), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-08 01:01:49,310 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0675, cls: 0.0334, iou: 0.0796), misc (ry: 0.14, z: 0.33), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-08 01:04:36,636 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0636, cls: 0.0334, iou: 0.0781), misc (ry: 0.13, z: 0.30), dt: 0.71, eta: 4.3h
[INFO]: 2024-04-08 01:07:23,823 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0568, cls: 0.0333, iou: 0.0767), misc (ry: 0.13, z: 0.29), dt: 0.71, eta: 4.2h
[INFO]: 2024-04-08 01:10:13,367 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0594, cls: 0.0333, iou: 0.0768), misc (ry: 0.13, z: 0.30), dt: 0.71, eta: 4.2h
[INFO]: 2024-04-08 01:13:04,006 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0643, cls: 0.0344, iou: 0.0784), misc (ry: 0.15, z: 0.30), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-08 01:15:51,634 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0608, cls: 0.0336, iou: 0.0779), misc (ry: 0.13, z: 0.31), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-08 01:18:44,817 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0664, cls: 0.0344, iou: 0.0791), misc (ry: 0.13, z: 0.33), dt: 0.71, eta: 4.0h
[INFO]: 2024-04-08 01:21:39,665 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0619, cls: 0.0364, iou: 0.0780), misc (ry: 0.13, z: 0.29), dt: 0.71, eta: 4.0h
[INFO]: 2024-04-08 01:24:30,170 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0591, cls: 0.0324, iou: 0.0758), misc (ry: 0.15, z: 0.29), dt: 0.71, eta: 3.9h
[INFO]: 2024-04-08 01:33:48,772 test_iter 30000 2d car --> easy: 0.9103, mod: 0.8396, hard: 0.6789
[INFO]: 2024-04-08 01:33:48,773 test_iter 30000 gr car --> easy: 0.2434, mod: 0.2049, hard: 0.1711
[INFO]: 2024-04-08 01:33:48,773 test_iter 30000 3d car --> easy: 0.1631, mod: 0.1359, hard: 0.1081
[INFO]: 2024-04-08 01:33:48,774 test_iter 30000 2d pedestrian --> easy: 0.6617, mod: 0.5823, hard: 0.5006
[INFO]: 2024-04-08 01:33:48,775 test_iter 30000 gr pedestrian --> easy: 0.0511, mod: 0.0486, hard: 0.0443
[INFO]: 2024-04-08 01:33:48,775 test_iter 30000 3d pedestrian --> easy: 0.0492, mod: 0.0447, hard: 0.0424
[INFO]: 2024-04-08 01:33:48,776 test_iter 30000 2d cyclist --> easy: 0.5606, mod: 0.3847, hard: 0.3831
[INFO]: 2024-04-08 01:33:48,776 test_iter 30000 gr cyclist --> easy: 0.0347, mod: 0.0227, hard: 0.0227
[INFO]: 2024-04-08 01:33:48,777 test_iter 30000 3d cyclist --> easy: 0.0319, mod: 0.0227, hard: 0.0227
[INFO]: 2024-04-08 01:36:36,313 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0617, cls: 0.0319, iou: 0.0770), misc (ry: 0.13, z: 0.33), dt: 0.73, eta: 4.0h
[INFO]: 2024-04-08 01:39:27,647 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0643, cls: 0.0342, iou: 0.0767), misc (ry: 0.13, z: 0.30), dt: 0.73, eta: 3.9h
[INFO]: 2024-04-08 01:42:15,683 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0328, iou: 0.0761), misc (ry: 0.14, z: 0.30), dt: 0.73, eta: 3.9h
[INFO]: 2024-04-08 01:45:07,117 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0596, cls: 0.0323, iou: 0.0733), misc (ry: 0.13, z: 0.31), dt: 0.73, eta: 3.8h
[INFO]: 2024-04-08 01:48:00,499 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0628, cls: 0.0339, iou: 0.0757), misc (ry: 0.13, z: 0.30), dt: 0.73, eta: 3.8h
[INFO]: 2024-04-08 01:50:49,154 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0600, cls: 0.0332, iou: 0.0766), misc (ry: 0.14, z: 0.30), dt: 0.73, eta: 3.7h
[INFO]: 2024-04-08 01:53:34,669 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0622, cls: 0.0330, iou: 0.0779), misc (ry: 0.14, z: 0.33), dt: 0.73, eta: 3.7h
[INFO]: 2024-04-08 01:56:22,173 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0655, cls: 0.0348, iou: 0.0806), misc (ry: 0.14, z: 0.30), dt: 0.73, eta: 3.6h
[INFO]: 2024-04-08 01:59:08,855 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0341, iou: 0.0730), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.6h
[INFO]: 2024-04-08 02:01:56,167 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0589, cls: 0.0336, iou: 0.0742), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-08 02:04:40,549 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0523, cls: 0.0323, iou: 0.0710), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-08 02:07:23,575 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0335, iou: 0.0743), misc (ry: 0.13, z: 0.30), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-08 02:10:09,226 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0510, cls: 0.0315, iou: 0.0710), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-08 02:12:55,023 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0593, cls: 0.0308, iou: 0.0720), misc (ry: 0.12, z: 0.32), dt: 0.72, eta: 3.3h
[INFO]: 2024-04-08 02:15:42,046 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0358, iou: 0.0750), misc (ry: 0.14, z: 0.30), dt: 0.72, eta: 3.3h
[INFO]: 2024-04-08 02:18:29,588 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0536, cls: 0.0317, iou: 0.0719), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.2h
[INFO]: 2024-04-08 02:21:17,415 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0551, cls: 0.0316, iou: 0.0706), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.2h
[INFO]: 2024-04-08 02:24:10,264 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0515, cls: 0.0314, iou: 0.0702), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.1h
[INFO]: 2024-04-08 02:27:00,056 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0495, cls: 0.0318, iou: 0.0682), misc (ry: 0.11, z: 0.27), dt: 0.72, eta: 3.1h
[INFO]: 2024-04-08 02:29:50,269 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0547, cls: 0.0342, iou: 0.0703), misc (ry: 0.13, z: 0.27), dt: 0.72, eta: 3.0h
[INFO]: 2024-04-08 02:32:41,639 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0527, cls: 0.0316, iou: 0.0694), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.0h
[INFO]: 2024-04-08 02:35:29,509 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0501, cls: 0.0308, iou: 0.0691), misc (ry: 0.12, z: 0.29), dt: 0.72, eta: 2.9h
[INFO]: 2024-04-08 02:38:18,142 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0486, cls: 0.0307, iou: 0.0677), misc (ry: 0.11, z: 0.27), dt: 0.72, eta: 2.8h
[INFO]: 2024-04-08 02:41:07,818 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0453, cls: 0.0311, iou: 0.0658), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.8h
[INFO]: 2024-04-08 02:43:58,495 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0491, cls: 0.0314, iou: 0.0665), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 2.7h
[INFO]: 2024-04-08 02:46:45,683 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0450, cls: 0.0308, iou: 0.0643), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.7h
[INFO]: 2024-04-08 02:49:34,714 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0301, iou: 0.0638), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.6h
[INFO]: 2024-04-08 02:52:22,818 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0476, cls: 0.0315, iou: 0.0670), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 2.6h
[INFO]: 2024-04-08 02:55:10,459 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0305, iou: 0.0630), misc (ry: 0.11, z: 0.26), dt: 0.72, eta: 2.5h
[INFO]: 2024-04-08 02:58:00,728 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0468, cls: 0.0307, iou: 0.0646), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 2.5h
[INFO]: 2024-04-08 03:00:47,345 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0440, cls: 0.0309, iou: 0.0645), misc (ry: 0.12, z: 0.25), dt: 0.72, eta: 2.4h
[INFO]: 2024-04-08 03:03:33,869 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0438, cls: 0.0299, iou: 0.0650), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.4h
[INFO]: 2024-04-08 03:06:22,323 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0308, iou: 0.0637), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.3h
[INFO]: 2024-04-08 03:09:10,834 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0411, cls: 0.0291, iou: 0.0609), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.3h
[INFO]: 2024-04-08 03:11:59,692 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0455, cls: 0.0312, iou: 0.0626), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.2h
[INFO]: 2024-04-08 03:14:45,031 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0448, cls: 0.0302, iou: 0.0633), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 2.2h
[INFO]: 2024-04-08 03:17:31,126 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0427, cls: 0.0319, iou: 0.0616), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.1h
[INFO]: 2024-04-08 03:20:16,791 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0457, cls: 0.0313, iou: 0.0624), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.1h
[INFO]: 2024-04-08 03:23:01,587 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0443, cls: 0.0301, iou: 0.0596), misc (ry: 0.11, z: 0.24), dt: 0.71, eta: 2.0h
[INFO]: 2024-04-08 03:25:48,194 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0425, cls: 0.0308, iou: 0.0605), misc (ry: 0.11, z: 0.24), dt: 0.71, eta: 2.0h
[INFO]: 2024-04-08 03:35:07,305 test_iter 40000 2d car --> easy: 0.9056, mod: 0.8384, hard: 0.6782
[INFO]: 2024-04-08 03:35:07,306 test_iter 40000 gr car --> easy: 0.2345, mod: 0.2010, hard: 0.1702
[INFO]: 2024-04-08 03:35:07,307 test_iter 40000 3d car --> easy: 0.1869, mod: 0.1610, hard: 0.1323
[INFO]: 2024-04-08 03:35:07,307 test_iter 40000 2d pedestrian --> easy: 0.6622, mod: 0.5832, hard: 0.5020
[INFO]: 2024-04-08 03:35:07,308 test_iter 40000 gr pedestrian --> easy: 0.0473, mod: 0.0466, hard: 0.0384
[INFO]: 2024-04-08 03:35:07,309 test_iter 40000 3d pedestrian --> easy: 0.0431, mod: 0.0360, hard: 0.0341
[INFO]: 2024-04-08 03:35:07,309 test_iter 40000 2d cyclist --> easy: 0.5269, mod: 0.3720, hard: 0.3691
[INFO]: 2024-04-08 03:35:07,310 test_iter 40000 gr cyclist --> easy: 0.0343, mod: 0.0317, hard: 0.0227
[INFO]: 2024-04-08 03:35:07,310 test_iter 40000 3d cyclist --> easy: 0.0330, mod: 0.0227, hard: 0.0227
[INFO]: 2024-04-08 03:37:54,319 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0320, iou: 0.0608), misc (ry: 0.10, z: 0.24), dt: 0.73, eta: 2.0h
[INFO]: 2024-04-08 03:40:42,200 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0423, cls: 0.0314, iou: 0.0618), misc (ry: 0.12, z: 0.23), dt: 0.73, eta: 1.9h
[INFO]: 2024-04-08 03:43:27,590 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0388, cls: 0.0305, iou: 0.0603), misc (ry: 0.10, z: 0.23), dt: 0.73, eta: 1.9h
[INFO]: 2024-04-08 03:46:14,864 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0397, cls: 0.0305, iou: 0.0593), misc (ry: 0.11, z: 0.23), dt: 0.73, eta: 1.8h
[INFO]: 2024-04-08 03:49:05,362 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0315, iou: 0.0593), misc (ry: 0.10, z: 0.24), dt: 0.73, eta: 1.8h
[INFO]: 2024-04-08 03:51:53,258 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0421, cls: 0.0294, iou: 0.0580), misc (ry: 0.11, z: 0.23), dt: 0.73, eta: 1.7h
[INFO]: 2024-04-08 03:54:47,246 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0355, cls: 0.0292, iou: 0.0557), misc (ry: 0.11, z: 0.22), dt: 0.73, eta: 1.7h
[INFO]: 2024-04-08 03:57:34,734 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0392, cls: 0.0294, iou: 0.0579), misc (ry: 0.10, z: 0.23), dt: 0.73, eta: 1.6h
[INFO]: 2024-04-08 04:00:25,270 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0549, cls: 0.0299, iou: 0.0606), misc (ry: 0.16, z: 0.25), dt: 0.73, eta: 1.6h
[INFO]: 2024-04-08 04:03:14,237 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0409, cls: 0.0310, iou: 0.0582), misc (ry: 0.12, z: 0.24), dt: 0.73, eta: 1.5h
[INFO]: 2024-04-08 04:05:58,660 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0427, cls: 0.0303, iou: 0.0596), misc (ry: 0.12, z: 0.24), dt: 0.72, eta: 1.5h
[INFO]: 2024-04-08 04:08:50,312 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0353, cls: 0.0275, iou: 0.0548), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 1.4h
[INFO]: 2024-04-08 04:11:42,714 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0353, cls: 0.0293, iou: 0.0553), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.4h
[INFO]: 2024-04-08 04:14:37,671 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0402, cls: 0.0300, iou: 0.0574), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 1.3h
[INFO]: 2024-04-08 04:17:26,607 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0399, cls: 0.0292, iou: 0.0574), misc (ry: 0.11, z: 0.22), dt: 0.72, eta: 1.3h
[INFO]: 2024-04-08 04:20:20,248 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0348, cls: 0.0290, iou: 0.0534), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.2h
[INFO]: 2024-04-08 04:23:07,806 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0360, cls: 0.0286, iou: 0.0546), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.2h
[INFO]: 2024-04-08 04:25:55,763 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0358, cls: 0.0291, iou: 0.0530), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.1h
[INFO]: 2024-04-08 04:28:45,500 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0387, cls: 0.0304, iou: 0.0532), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 1.1h
[INFO]: 2024-04-08 04:31:34,152 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0281, iou: 0.0513), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.0h
[INFO]: 2024-04-08 04:34:18,611 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0335, cls: 0.0281, iou: 0.0523), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 57.2m
[INFO]: 2024-04-08 04:37:00,153 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0287, iou: 0.0511), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 54.2m
[INFO]: 2024-04-08 04:39:44,784 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0329, cls: 0.0286, iou: 0.0514), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 51.1m
[INFO]: 2024-04-08 04:42:29,773 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0335, cls: 0.0272, iou: 0.0513), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 48.1m
[INFO]: 2024-04-08 04:45:12,365 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0286, iou: 0.0502), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 45.1m
[INFO]: 2024-04-08 04:47:56,762 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0309, cls: 0.0277, iou: 0.0499), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 42.0m
[INFO]: 2024-04-08 04:50:41,249 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0278, iou: 0.0506), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 39.0m
[INFO]: 2024-04-08 04:53:25,335 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0344, cls: 0.0288, iou: 0.0516), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 36.0m
[INFO]: 2024-04-08 04:56:09,383 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0361, cls: 0.0288, iou: 0.0518), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 33.0m
[INFO]: 2024-04-08 04:58:58,368 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0362, cls: 0.0299, iou: 0.0519), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 30.0m
[INFO]: 2024-04-08 05:01:41,607 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0347, cls: 0.0287, iou: 0.0515), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 27.0m
[INFO]: 2024-04-08 05:04:30,116 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0333, cls: 0.0285, iou: 0.0501), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 24.0m
[INFO]: 2024-04-08 05:07:13,885 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0285, iou: 0.0493), misc (ry: 0.10, z: 0.19), dt: 0.72, eta: 21.0m
[INFO]: 2024-04-08 05:09:58,579 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0292, iou: 0.0482), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 18.0m
[INFO]: 2024-04-08 05:12:42,307 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0365, cls: 0.0297, iou: 0.0528), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 15.0m
[INFO]: 2024-04-08 05:15:29,740 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0282, iou: 0.0487), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 12.0m
[INFO]: 2024-04-08 05:18:17,725 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0324, cls: 0.0290, iou: 0.0486), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 9.0m
[INFO]: 2024-04-08 05:21:05,656 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0280, iou: 0.0481), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 6.0m
[INFO]: 2024-04-08 05:23:53,571 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0287, iou: 0.0479), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 3.0m
[INFO]: 2024-04-08 05:26:39,077 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0295, cls: 0.0282, iou: 0.0466), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 0.7s
[INFO]: 2024-04-08 05:35:55,117 test_iter 50000 2d car --> easy: 0.9097, mod: 0.8428, hard: 0.6808
[INFO]: 2024-04-08 05:35:55,118 test_iter 50000 gr car --> easy: 0.2614, mod: 0.2139, hard: 0.1803
[INFO]: 2024-04-08 05:35:55,119 test_iter 50000 3d car --> easy: 0.2039, mod: 0.1715, hard: 0.1525
[INFO]: 2024-04-08 05:35:55,119 test_iter 50000 2d pedestrian --> easy: 0.6604, mod: 0.5829, hard: 0.5015
[INFO]: 2024-04-08 05:35:55,120 test_iter 50000 gr pedestrian --> easy: 0.0870, mod: 0.1177, hard: 0.1122
[INFO]: 2024-04-08 05:35:55,120 test_iter 50000 3d pedestrian --> easy: 0.0563, mod: 0.0531, hard: 0.0474
[INFO]: 2024-04-08 05:35:55,121 test_iter 50000 2d cyclist --> easy: 0.5583, mod: 0.3951, hard: 0.3898
[INFO]: 2024-04-08 05:35:55,122 test_iter 50000 gr cyclist --> easy: 0.0244, mod: 0.0114, hard: 0.0118
[INFO]: 2024-04-08 05:35:55,122 test_iter 50000 3d cyclist --> easy: 0.0221, mod: 0.0107, hard: 0.0114
