[INFO]: 2023-10-29 22:44:08,926 Preloading imdb.
[INFO]: 2023-10-29 22:44:10,323 weighted respectively as 1.05 and 0.00
[INFO]: 2023-10-29 22:44:10,324 Found 3534 foreground and 178 empty images
[INFO]: 2023-10-29 22:44:12,899 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-10-29 22:44:12,903 conf: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          5000                                    
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000_pkl'
}
[INFO]: 2023-10-29 22:44:13,768 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): PConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-10-29 22:46:48,773 iter: 250, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2181, cls: 0.0624, iou: 0.1301), misc (ry: 0.33, z: 0.56), dt: 0.62, eta: 8.6h
[INFO]: 2023-10-29 22:49:21,145 iter: 500, acc (bg: 1.00, fg: 0.87, iou: 0.81), loss (bbox_3d: 0.7942, cls: 0.1581, iou: 0.2254), misc (ry: 0.85, z: 1.16), dt: 0.62, eta: 8.5h
[INFO]: 2023-10-29 22:51:55,660 iter: 750, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6895, cls: 0.1332, iou: 0.2163), misc (ry: 0.72, z: 1.01), dt: 0.62, eta: 8.4h
[INFO]: 2023-10-29 22:54:28,123 iter: 1000, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.7032, cls: 0.1265, iou: 0.2148), misc (ry: 0.73, z: 1.03), dt: 0.61, eta: 8.4h
[INFO]: 2023-10-29 22:57:00,437 iter: 1250, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.5039, cls: 0.1028, iou: 0.1847), misc (ry: 0.56, z: 0.84), dt: 0.61, eta: 8.3h
[INFO]: 2023-10-29 22:59:33,883 iter: 1500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4989, cls: 0.0960, iou: 0.1854), misc (ry: 0.58, z: 0.92), dt: 0.61, eta: 8.3h
[INFO]: 2023-10-29 23:02:08,894 iter: 1750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3920, cls: 0.0822, iou: 0.1610), misc (ry: 0.48, z: 0.72), dt: 0.61, eta: 8.2h
[INFO]: 2023-10-29 23:04:42,458 iter: 2000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3508, cls: 0.0689, iou: 0.1572), misc (ry: 0.44, z: 0.70), dt: 0.61, eta: 8.2h
[INFO]: 2023-10-29 23:07:18,917 iter: 2250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3529, cls: 0.0727, iou: 0.1562), misc (ry: 0.49, z: 0.67), dt: 0.62, eta: 8.2h
[INFO]: 2023-10-29 23:09:55,337 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3244, cls: 0.0704, iou: 0.1548), misc (ry: 0.39, z: 0.65), dt: 0.62, eta: 8.1h
[INFO]: 2023-10-29 23:12:29,189 iter: 2750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.4154, cls: 0.0771, iou: 0.1605), misc (ry: 0.52, z: 0.74), dt: 0.62, eta: 8.1h
[INFO]: 2023-10-29 23:15:01,679 iter: 3000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3845, cls: 0.0770, iou: 0.1659), misc (ry: 0.51, z: 0.68), dt: 0.62, eta: 8.0h
[INFO]: 2023-10-29 23:17:32,034 iter: 3250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3534, cls: 0.0631, iou: 0.1536), misc (ry: 0.44, z: 0.74), dt: 0.61, eta: 8.0h
[INFO]: 2023-10-29 23:20:06,955 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3184, cls: 0.0670, iou: 0.1477), misc (ry: 0.41, z: 0.63), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-29 23:22:40,080 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3043, cls: 0.0671, iou: 0.1484), misc (ry: 0.39, z: 0.67), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-29 23:25:15,015 iter: 4000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2417, cls: 0.0625, iou: 0.1375), misc (ry: 0.30, z: 0.60), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-29 23:27:47,257 iter: 4250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2489, cls: 0.0581, iou: 0.1377), misc (ry: 0.33, z: 0.59), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-29 23:30:18,955 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2277, cls: 0.0550, iou: 0.1330), misc (ry: 0.33, z: 0.59), dt: 0.61, eta: 7.8h
[INFO]: 2023-10-29 23:32:54,844 iter: 4750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2515, cls: 0.0601, iou: 0.1371), misc (ry: 0.36, z: 0.58), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-29 23:35:31,406 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2479, cls: 0.0543, iou: 0.1332), misc (ry: 0.35, z: 0.65), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-29 23:38:02,341 testing 1000/3769, dt: 0.146, eta: 6.7m
[INFO]: 2023-10-29 23:40:30,743 testing 2000/3769, dt: 0.147, eta: 4.3m
[INFO]: 2023-10-29 23:42:59,385 testing 3000/3769, dt: 0.148, eta: 1.9m
[INFO]: 2023-10-29 23:44:59,817 test_iter 5000 2d car --> easy: 0.9008, mod: 0.7599, hard: 0.6636
[INFO]: 2023-10-29 23:44:59,818 test_iter 5000 gr car --> easy: 0.1891, mod: 0.1608, hard: 0.1429
[INFO]: 2023-10-29 23:44:59,819 test_iter 5000 3d car --> easy: 0.1399, mod: 0.1208, hard: 0.1162
[INFO]: 2023-10-29 23:44:59,819 test_iter 5000 2d pedestrian --> easy: 0.6257, mod: 0.5376, hard: 0.4659
[INFO]: 2023-10-29 23:44:59,820 test_iter 5000 gr pedestrian --> easy: 0.1119, mod: 0.1114, hard: 0.0995
[INFO]: 2023-10-29 23:44:59,820 test_iter 5000 3d pedestrian --> easy: 0.1097, mod: 0.1037, hard: 0.0985
[INFO]: 2023-10-29 23:44:59,821 test_iter 5000 2d cyclist --> easy: 0.2622, mod: 0.1840, hard: 0.1812
[INFO]: 2023-10-29 23:44:59,822 test_iter 5000 gr cyclist --> easy: 0.0093, mod: 0.0055, hard: 0.0059
[INFO]: 2023-10-29 23:44:59,822 test_iter 5000 3d cyclist --> easy: 0.0045, mod: 0.0045, hard: 0.0048
[INFO]: 2023-10-29 23:47:35,434 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2049, cls: 0.0548, iou: 0.1306), misc (ry: 0.26, z: 0.57), dt: 0.72, eta: 9.0h
[INFO]: 2023-10-29 23:50:10,024 iter: 5500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2128, cls: 0.0565, iou: 0.1324), misc (ry: 0.31, z: 0.56), dt: 0.72, eta: 8.9h
[INFO]: 2023-10-29 23:52:42,286 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2309, cls: 0.0538, iou: 0.1323), misc (ry: 0.32, z: 0.57), dt: 0.71, eta: 8.8h
[INFO]: 2023-10-29 23:55:17,271 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2166, cls: 0.0523, iou: 0.1267), misc (ry: 0.31, z: 0.57), dt: 0.71, eta: 8.7h
[INFO]: 2023-10-29 23:57:50,022 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2245, cls: 0.0534, iou: 0.1319), misc (ry: 0.32, z: 0.58), dt: 0.71, eta: 8.6h
[INFO]: 2023-10-30 00:00:25,142 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2145, cls: 0.0529, iou: 0.1292), misc (ry: 0.28, z: 0.60), dt: 0.70, eta: 8.5h
[INFO]: 2023-10-30 00:02:57,968 iter: 6750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1848, cls: 0.0529, iou: 0.1237), misc (ry: 0.27, z: 0.50), dt: 0.70, eta: 8.4h
[INFO]: 2023-10-30 00:05:32,067 iter: 7000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1821, cls: 0.0466, iou: 0.1202), misc (ry: 0.29, z: 0.50), dt: 0.70, eta: 8.3h
[INFO]: 2023-10-30 00:08:02,917 iter: 7250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1903, cls: 0.0485, iou: 0.1220), misc (ry: 0.27, z: 0.49), dt: 0.69, eta: 8.2h
[INFO]: 2023-10-30 00:10:39,257 iter: 7500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1721, cls: 0.0511, iou: 0.1172), misc (ry: 0.23, z: 0.50), dt: 0.69, eta: 8.2h
[INFO]: 2023-10-30 00:13:12,626 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1927, cls: 0.0509, iou: 0.1230), misc (ry: 0.30, z: 0.54), dt: 0.69, eta: 8.1h
[INFO]: 2023-10-30 00:15:47,277 iter: 8000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1711, cls: 0.0504, iou: 0.1177), misc (ry: 0.23, z: 0.54), dt: 0.69, eta: 8.0h
[INFO]: 2023-10-30 00:18:22,845 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1661, cls: 0.0490, iou: 0.1163), misc (ry: 0.26, z: 0.46), dt: 0.68, eta: 7.9h
[INFO]: 2023-10-30 00:20:55,987 iter: 8500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1486, cls: 0.0456, iou: 0.1148), misc (ry: 0.23, z: 0.45), dt: 0.68, eta: 7.9h
[INFO]: 2023-10-30 00:23:31,486 iter: 8750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2156, cls: 0.0538, iou: 0.1243), misc (ry: 0.36, z: 0.48), dt: 0.68, eta: 7.8h
[INFO]: 2023-10-30 00:26:04,152 iter: 9000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1637, cls: 0.0474, iou: 0.1165), misc (ry: 0.29, z: 0.47), dt: 0.68, eta: 7.7h
[INFO]: 2023-10-30 00:28:37,539 iter: 9250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1578, cls: 0.0467, iou: 0.1179), misc (ry: 0.25, z: 0.45), dt: 0.68, eta: 7.7h
[INFO]: 2023-10-30 00:31:10,098 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1732, cls: 0.0497, iou: 0.1175), misc (ry: 0.28, z: 0.51), dt: 0.68, eta: 7.6h
[INFO]: 2023-10-30 00:33:41,973 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2121, cls: 0.0503, iou: 0.1259), misc (ry: 0.38, z: 0.52), dt: 0.67, eta: 7.5h
[INFO]: 2023-10-30 00:36:18,355 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1598, cls: 0.0486, iou: 0.1186), misc (ry: 0.25, z: 0.52), dt: 0.67, eta: 7.5h
[INFO]: 2023-10-30 00:38:49,753 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-10-30 00:41:14,040 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-10-30 00:43:38,080 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-10-30 00:45:37,915 test_iter 10000 2d car --> easy: 0.8906, mod: 0.8122, hard: 0.6664
[INFO]: 2023-10-30 00:45:37,915 test_iter 10000 gr car --> easy: 0.1503, mod: 0.1201, hard: 0.1036
[INFO]: 2023-10-30 00:45:37,916 test_iter 10000 3d car --> easy: 0.1013, mod: 0.0778, hard: 0.0713
[INFO]: 2023-10-30 00:45:37,916 test_iter 10000 2d pedestrian --> easy: 0.6410, mod: 0.5592, hard: 0.4812
[INFO]: 2023-10-30 00:45:37,917 test_iter 10000 gr pedestrian --> easy: 0.0437, mod: 0.0440, hard: 0.0361
[INFO]: 2023-10-30 00:45:37,917 test_iter 10000 3d pedestrian --> easy: 0.0360, mod: 0.0310, hard: 0.0311
[INFO]: 2023-10-30 00:45:37,918 test_iter 10000 2d cyclist --> easy: 0.5181, mod: 0.3578, hard: 0.3563
[INFO]: 2023-10-30 00:45:37,918 test_iter 10000 gr cyclist --> easy: 0.0309, mod: 0.0227, hard: 0.0227
[INFO]: 2023-10-30 00:45:37,919 test_iter 10000 3d cyclist --> easy: 0.0230, mod: 0.0182, hard: 0.0182
[INFO]: 2023-10-30 00:48:11,332 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1469, cls: 0.0463, iou: 0.1166), misc (ry: 0.25, z: 0.43), dt: 0.73, eta: 8.0h
[INFO]: 2023-10-30 00:50:45,088 iter: 10500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1408, cls: 0.0433, iou: 0.1089), misc (ry: 0.21, z: 0.46), dt: 0.72, eta: 7.9h
[INFO]: 2023-10-30 00:53:16,221 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1401, cls: 0.0439, iou: 0.1107), misc (ry: 0.24, z: 0.43), dt: 0.72, eta: 7.9h
[INFO]: 2023-10-30 00:55:51,326 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1574, cls: 0.0464, iou: 0.1128), misc (ry: 0.27, z: 0.44), dt: 0.72, eta: 7.8h
[INFO]: 2023-10-30 00:58:24,916 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1661, cls: 0.0463, iou: 0.1178), misc (ry: 0.25, z: 0.48), dt: 0.72, eta: 7.7h
[INFO]: 2023-10-30 01:00:56,223 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1635, cls: 0.0488, iou: 0.1171), misc (ry: 0.29, z: 0.48), dt: 0.71, eta: 7.6h
[INFO]: 2023-10-30 01:03:32,938 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1595, cls: 0.0461, iou: 0.1125), misc (ry: 0.26, z: 0.48), dt: 0.71, eta: 7.6h
[INFO]: 2023-10-30 01:06:08,396 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1437, cls: 0.0415, iou: 0.1096), misc (ry: 0.23, z: 0.46), dt: 0.71, eta: 7.5h
[INFO]: 2023-10-30 01:08:43,954 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1586, cls: 0.0454, iou: 0.1106), misc (ry: 0.26, z: 0.53), dt: 0.71, eta: 7.4h
[INFO]: 2023-10-30 01:11:18,409 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1323, cls: 0.0431, iou: 0.1069), misc (ry: 0.21, z: 0.44), dt: 0.71, eta: 7.4h
[INFO]: 2023-10-30 01:13:54,516 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1393, cls: 0.0420, iou: 0.1091), misc (ry: 0.23, z: 0.49), dt: 0.70, eta: 7.3h
[INFO]: 2023-10-30 01:16:27,716 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1416, cls: 0.0430, iou: 0.1097), misc (ry: 0.24, z: 0.47), dt: 0.70, eta: 7.2h
[INFO]: 2023-10-30 01:19:02,461 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1392, cls: 0.0450, iou: 0.1075), misc (ry: 0.23, z: 0.43), dt: 0.70, eta: 7.2h
[INFO]: 2023-10-30 01:21:32,680 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1221, cls: 0.0416, iou: 0.1022), misc (ry: 0.19, z: 0.42), dt: 0.70, eta: 7.1h
[INFO]: 2023-10-30 01:24:06,346 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1298, cls: 0.0470, iou: 0.1071), misc (ry: 0.19, z: 0.43), dt: 0.70, eta: 7.0h
[INFO]: 2023-10-30 01:26:42,241 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1257, cls: 0.0412, iou: 0.1066), misc (ry: 0.19, z: 0.46), dt: 0.70, eta: 7.0h
[INFO]: 2023-10-30 01:29:14,660 iter: 14250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1109, cls: 0.0391, iou: 0.0994), misc (ry: 0.18, z: 0.41), dt: 0.69, eta: 6.9h
[INFO]: 2023-10-30 01:31:47,556 iter: 14500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1154, cls: 0.0382, iou: 0.1007), misc (ry: 0.18, z: 0.44), dt: 0.69, eta: 6.8h
[INFO]: 2023-10-30 01:34:22,235 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1243, cls: 0.0404, iou: 0.1014), misc (ry: 0.21, z: 0.42), dt: 0.69, eta: 6.8h
[INFO]: 2023-10-30 01:36:54,763 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1302, cls: 0.0437, iou: 0.1064), misc (ry: 0.24, z: 0.42), dt: 0.69, eta: 6.7h
[INFO]: 2023-10-30 01:39:26,127 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-10-30 01:41:51,120 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-10-30 01:44:16,378 testing 3000/3769, dt: 0.146, eta: 1.9m
[INFO]: 2023-10-30 01:46:15,082 test_iter 15000 2d car --> easy: 0.8962, mod: 0.8242, hard: 0.6715
[INFO]: 2023-10-30 01:46:15,083 test_iter 15000 gr car --> easy: 0.2126, mod: 0.1737, hard: 0.1526
[INFO]: 2023-10-30 01:46:15,084 test_iter 15000 3d car --> easy: 0.1728, mod: 0.1431, hard: 0.1249
[INFO]: 2023-10-30 01:46:15,085 test_iter 15000 2d pedestrian --> easy: 0.6587, mod: 0.5790, hard: 0.4978
[INFO]: 2023-10-30 01:46:15,085 test_iter 15000 gr pedestrian --> easy: 0.0468, mod: 0.0482, hard: 0.0434
[INFO]: 2023-10-30 01:46:15,086 test_iter 15000 3d pedestrian --> easy: 0.0419, mod: 0.0397, hard: 0.0381
[INFO]: 2023-10-30 01:46:15,086 test_iter 15000 2d cyclist --> easy: 0.5413, mod: 0.3758, hard: 0.3130
[INFO]: 2023-10-30 01:46:15,087 test_iter 15000 gr cyclist --> easy: 0.0185, mod: 0.0130, hard: 0.0130
[INFO]: 2023-10-30 01:46:15,088 test_iter 15000 3d cyclist --> easy: 0.0183, mod: 0.0130, hard: 0.0130
[INFO]: 2023-10-30 01:48:46,565 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1272, cls: 0.0431, iou: 0.1068), misc (ry: 0.23, z: 0.43), dt: 0.73, eta: 7.0h
[INFO]: 2023-10-30 01:51:22,195 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1171, cls: 0.0399, iou: 0.1012), misc (ry: 0.20, z: 0.43), dt: 0.72, eta: 6.9h
[INFO]: 2023-10-30 01:53:56,429 iter: 15750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1171, cls: 0.0416, iou: 0.1032), misc (ry: 0.20, z: 0.44), dt: 0.72, eta: 6.9h
[INFO]: 2023-10-30 01:56:29,815 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1036, cls: 0.0371, iou: 0.0962), misc (ry: 0.20, z: 0.40), dt: 0.72, eta: 6.8h
[INFO]: 2023-10-30 01:59:02,204 iter: 16250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1071, cls: 0.0393, iou: 0.0988), misc (ry: 0.19, z: 0.40), dt: 0.72, eta: 6.7h
[INFO]: 2023-10-30 02:01:37,798 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0999, cls: 0.0416, iou: 0.0957), misc (ry: 0.19, z: 0.38), dt: 0.72, eta: 6.7h
[INFO]: 2023-10-30 02:04:11,689 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1020, cls: 0.0386, iou: 0.0959), misc (ry: 0.20, z: 0.38), dt: 0.72, eta: 6.6h
[INFO]: 2023-10-30 02:06:45,881 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1063, cls: 0.0386, iou: 0.0975), misc (ry: 0.20, z: 0.40), dt: 0.71, eta: 6.6h
[INFO]: 2023-10-30 02:09:21,107 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1117, cls: 0.0420, iou: 0.1014), misc (ry: 0.19, z: 0.40), dt: 0.71, eta: 6.5h
[INFO]: 2023-10-30 02:11:54,938 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1011, cls: 0.0400, iou: 0.0982), misc (ry: 0.19, z: 0.38), dt: 0.71, eta: 6.4h
[INFO]: 2023-10-30 02:14:30,110 iter: 17750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0951, cls: 0.0384, iou: 0.0945), misc (ry: 0.18, z: 0.40), dt: 0.71, eta: 6.4h
[INFO]: 2023-10-30 02:17:03,190 iter: 18000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0968, cls: 0.0356, iou: 0.0929), misc (ry: 0.17, z: 0.41), dt: 0.71, eta: 6.3h
[INFO]: 2023-10-30 02:19:40,461 iter: 18250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0916, cls: 0.0388, iou: 0.0937), misc (ry: 0.17, z: 0.37), dt: 0.71, eta: 6.2h
[INFO]: 2023-10-30 02:22:11,565 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0877, cls: 0.0359, iou: 0.0907), misc (ry: 0.17, z: 0.37), dt: 0.71, eta: 6.2h
[INFO]: 2023-10-30 02:24:46,859 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0933, cls: 0.0398, iou: 0.0927), misc (ry: 0.19, z: 0.37), dt: 0.71, eta: 6.1h
[INFO]: 2023-10-30 02:27:22,507 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0804, cls: 0.0361, iou: 0.0899), misc (ry: 0.16, z: 0.35), dt: 0.70, eta: 6.1h
[INFO]: 2023-10-30 02:29:56,018 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0843, cls: 0.0381, iou: 0.0892), misc (ry: 0.17, z: 0.34), dt: 0.70, eta: 6.0h
[INFO]: 2023-10-30 02:32:30,167 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0810, cls: 0.0360, iou: 0.0875), misc (ry: 0.15, z: 0.35), dt: 0.70, eta: 6.0h
[INFO]: 2023-10-30 02:35:04,754 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0946, cls: 0.0382, iou: 0.0938), misc (ry: 0.19, z: 0.37), dt: 0.70, eta: 5.9h
[INFO]: 2023-10-30 02:37:39,779 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0934, cls: 0.0348, iou: 0.0886), misc (ry: 0.17, z: 0.42), dt: 0.70, eta: 5.8h
[INFO]: 2023-10-30 02:40:09,544 testing 1000/3769, dt: 0.145, eta: 6.7m
[INFO]: 2023-10-30 02:42:32,907 testing 2000/3769, dt: 0.144, eta: 4.3m
[INFO]: 2023-10-30 02:44:56,223 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-10-30 02:46:56,288 test_iter 20000 2d car --> easy: 0.8826, mod: 0.8220, hard: 0.6668
[INFO]: 2023-10-30 02:46:56,289 test_iter 20000 gr car --> easy: 0.2211, mod: 0.1607, hard: 0.1679
[INFO]: 2023-10-30 02:46:56,289 test_iter 20000 3d car --> easy: 0.1576, mod: 0.1206, hard: 0.0993
[INFO]: 2023-10-30 02:46:56,290 test_iter 20000 2d pedestrian --> easy: 0.6683, mod: 0.5858, hard: 0.5029
[INFO]: 2023-10-30 02:46:56,290 test_iter 20000 gr pedestrian --> easy: 0.0563, mod: 0.0583, hard: 0.0560
[INFO]: 2023-10-30 02:46:56,291 test_iter 20000 3d pedestrian --> easy: 0.0495, mod: 0.0502, hard: 0.0446
[INFO]: 2023-10-30 02:46:56,291 test_iter 20000 2d cyclist --> easy: 0.5812, mod: 0.3744, hard: 0.3642
[INFO]: 2023-10-30 02:46:56,292 test_iter 20000 gr cyclist --> easy: 0.0366, mod: 0.0296, hard: 0.0227
[INFO]: 2023-10-30 02:46:56,292 test_iter 20000 3d cyclist --> easy: 0.0366, mod: 0.0295, hard: 0.0227
[INFO]: 2023-10-30 02:49:28,762 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0786, cls: 0.0368, iou: 0.0861), misc (ry: 0.15, z: 0.34), dt: 0.73, eta: 6.0h
[INFO]: 2023-10-30 02:51:59,884 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0813, cls: 0.0353, iou: 0.0878), misc (ry: 0.16, z: 0.39), dt: 0.73, eta: 5.9h
[INFO]: 2023-10-30 02:54:37,109 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0713, cls: 0.0341, iou: 0.0850), misc (ry: 0.15, z: 0.34), dt: 0.72, eta: 5.9h
[INFO]: 2023-10-30 02:57:09,807 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0736, cls: 0.0326, iou: 0.0849), misc (ry: 0.15, z: 0.34), dt: 0.72, eta: 5.8h
[INFO]: 2023-10-30 02:59:43,772 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0755, cls: 0.0334, iou: 0.0843), misc (ry: 0.15, z: 0.36), dt: 0.72, eta: 5.8h
[INFO]: 2023-10-30 03:02:19,249 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0773, cls: 0.0348, iou: 0.0858), misc (ry: 0.16, z: 0.36), dt: 0.72, eta: 5.7h
[INFO]: 2023-10-30 03:04:54,498 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0719, cls: 0.0340, iou: 0.0832), misc (ry: 0.13, z: 0.32), dt: 0.72, eta: 5.6h
[INFO]: 2023-10-30 03:07:25,604 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0350, iou: 0.0851), misc (ry: 0.15, z: 0.34), dt: 0.72, eta: 5.6h
[INFO]: 2023-10-30 03:10:00,779 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0868, cls: 0.0360, iou: 0.0867), misc (ry: 0.18, z: 0.35), dt: 0.72, eta: 5.5h
[INFO]: 2023-10-30 03:12:36,072 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0780, cls: 0.0357, iou: 0.0871), misc (ry: 0.17, z: 0.33), dt: 0.72, eta: 5.5h
[INFO]: 2023-10-30 03:15:07,274 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0976, cls: 0.0364, iou: 0.0902), misc (ry: 0.21, z: 0.34), dt: 0.71, eta: 5.4h
[INFO]: 2023-10-30 03:17:43,429 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1322, cls: 0.0388, iou: 0.0950), misc (ry: 0.28, z: 0.36), dt: 0.71, eta: 5.4h
[INFO]: 2023-10-30 03:20:18,350 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1031, cls: 0.0410, iou: 0.0942), misc (ry: 0.21, z: 0.37), dt: 0.71, eta: 5.3h
[INFO]: 2023-10-30 03:22:50,276 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0785, cls: 0.0363, iou: 0.0869), misc (ry: 0.15, z: 0.34), dt: 0.71, eta: 5.2h
[INFO]: 2023-10-30 03:25:23,910 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0678, cls: 0.0330, iou: 0.0834), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 5.2h
[INFO]: 2023-10-30 03:27:58,844 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0801, cls: 0.0347, iou: 0.0855), misc (ry: 0.19, z: 0.32), dt: 0.71, eta: 5.1h
[INFO]: 2023-10-30 03:30:33,468 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0803, cls: 0.0360, iou: 0.0882), misc (ry: 0.17, z: 0.35), dt: 0.71, eta: 5.1h
[INFO]: 2023-10-30 03:33:09,140 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0782, cls: 0.0367, iou: 0.0884), misc (ry: 0.16, z: 0.33), dt: 0.71, eta: 5.0h
[INFO]: 2023-10-30 03:35:44,236 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0894, cls: 0.0356, iou: 0.0849), misc (ry: 0.22, z: 0.33), dt: 0.71, eta: 5.0h
[INFO]: 2023-10-30 03:38:20,068 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1050, cls: 0.0393, iou: 0.0914), misc (ry: 0.21, z: 0.36), dt: 0.71, eta: 4.9h
[INFO]: 2023-10-30 03:41:00,024 testing 1000/3769, dt: 0.155, eta: 7.2m
[INFO]: 2023-10-30 03:43:32,199 testing 2000/3769, dt: 0.154, eta: 4.5m
[INFO]: 2023-10-30 03:46:03,825 testing 3000/3769, dt: 0.153, eta: 2.0m
[INFO]: 2023-10-30 03:48:09,049 test_iter 25000 2d car --> easy: 0.9046, mod: 0.8335, hard: 0.6756
[INFO]: 2023-10-30 03:48:09,051 test_iter 25000 gr car --> easy: 0.2606, mod: 0.1893, hard: 0.1701
[INFO]: 2023-10-30 03:48:09,051 test_iter 25000 3d car --> easy: 0.1973, mod: 0.1578, hard: 0.1312
[INFO]: 2023-10-30 03:48:09,052 test_iter 25000 2d pedestrian --> easy: 0.6482, mod: 0.5717, hard: 0.4917
[INFO]: 2023-10-30 03:48:09,053 test_iter 25000 gr pedestrian --> easy: 0.1175, mod: 0.1136, hard: 0.1053
[INFO]: 2023-10-30 03:48:09,054 test_iter 25000 3d pedestrian --> easy: 0.1124, mod: 0.1026, hard: 0.0998
[INFO]: 2023-10-30 03:48:09,054 test_iter 25000 2d cyclist --> easy: 0.6541, mod: 0.4102, hard: 0.3999
[INFO]: 2023-10-30 03:48:09,055 test_iter 25000 gr cyclist --> easy: 0.0550, mod: 0.0549, hard: 0.0455
[INFO]: 2023-10-30 03:48:09,056 test_iter 25000 3d cyclist --> easy: 0.0540, mod: 0.0455, hard: 0.0455
[INFO]: 2023-10-30 03:50:41,281 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0778, cls: 0.0373, iou: 0.0884), misc (ry: 0.16, z: 0.34), dt: 0.73, eta: 5.0h
[INFO]: 2023-10-30 03:53:15,427 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0872, cls: 0.0351, iou: 0.0885), misc (ry: 0.19, z: 0.36), dt: 0.73, eta: 4.9h
[INFO]: 2023-10-30 03:55:51,028 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0901, cls: 0.0358, iou: 0.0886), misc (ry: 0.17, z: 0.41), dt: 0.73, eta: 4.9h
[INFO]: 2023-10-30 03:58:22,069 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0913, cls: 0.0332, iou: 0.0866), misc (ry: 0.17, z: 0.41), dt: 0.72, eta: 4.8h
[INFO]: 2023-10-30 04:00:56,697 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0799, cls: 0.0343, iou: 0.0833), misc (ry: 0.18, z: 0.33), dt: 0.72, eta: 4.8h
[INFO]: 2023-10-30 04:03:29,552 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0783, cls: 0.0342, iou: 0.0838), misc (ry: 0.16, z: 0.34), dt: 0.72, eta: 4.7h
[INFO]: 2023-10-30 04:06:04,676 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0660, cls: 0.0340, iou: 0.0796), misc (ry: 0.15, z: 0.31), dt: 0.72, eta: 4.7h
[INFO]: 2023-10-30 04:08:37,135 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0680, cls: 0.0344, iou: 0.0815), misc (ry: 0.14, z: 0.32), dt: 0.72, eta: 4.6h
[INFO]: 2023-10-30 04:11:12,340 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0629, cls: 0.0334, iou: 0.0778), misc (ry: 0.13, z: 0.31), dt: 0.72, eta: 4.5h
[INFO]: 2023-10-30 04:13:47,647 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0691, cls: 0.0329, iou: 0.0804), misc (ry: 0.14, z: 0.34), dt: 0.72, eta: 4.5h
[INFO]: 2023-10-30 04:16:21,979 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0657, cls: 0.0339, iou: 0.0797), misc (ry: 0.14, z: 0.32), dt: 0.72, eta: 4.4h
[INFO]: 2023-10-30 04:18:55,801 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0672, cls: 0.0341, iou: 0.0810), misc (ry: 0.15, z: 0.30), dt: 0.72, eta: 4.4h
[INFO]: 2023-10-30 04:21:29,833 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0581, cls: 0.0318, iou: 0.0751), misc (ry: 0.13, z: 0.28), dt: 0.72, eta: 4.3h
[INFO]: 2023-10-30 04:24:05,782 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0616, cls: 0.0317, iou: 0.0774), misc (ry: 0.14, z: 0.30), dt: 0.72, eta: 4.3h
[INFO]: 2023-10-30 04:26:40,732 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0625, cls: 0.0340, iou: 0.0773), misc (ry: 0.14, z: 0.30), dt: 0.71, eta: 4.2h
[INFO]: 2023-10-30 04:29:15,948 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0565, cls: 0.0331, iou: 0.0754), misc (ry: 0.13, z: 0.29), dt: 0.71, eta: 4.2h
[INFO]: 2023-10-30 04:31:47,202 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0530, cls: 0.0319, iou: 0.0749), misc (ry: 0.14, z: 0.29), dt: 0.71, eta: 4.1h
[INFO]: 2023-10-30 04:34:22,665 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0562, cls: 0.0325, iou: 0.0773), misc (ry: 0.14, z: 0.27), dt: 0.71, eta: 4.1h
[INFO]: 2023-10-30 04:36:58,170 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0527, cls: 0.0311, iou: 0.0726), misc (ry: 0.12, z: 0.28), dt: 0.71, eta: 4.0h
[INFO]: 2023-10-30 04:39:34,291 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0557, cls: 0.0324, iou: 0.0745), misc (ry: 0.12, z: 0.29), dt: 0.71, eta: 3.9h
[INFO]: 2023-10-30 04:42:04,260 testing 1000/3769, dt: 0.145, eta: 6.7m
[INFO]: 2023-10-30 04:44:29,170 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-10-30 04:46:51,901 testing 3000/3769, dt: 0.144, eta: 1.8m
[INFO]: 2023-10-30 04:48:51,606 test_iter 30000 2d car --> easy: 0.9007, mod: 0.8365, hard: 0.6769
[INFO]: 2023-10-30 04:48:51,608 test_iter 30000 gr car --> easy: 0.2528, mod: 0.2062, hard: 0.1738
[INFO]: 2023-10-30 04:48:51,608 test_iter 30000 3d car --> easy: 0.1980, mod: 0.1630, hard: 0.1340
[INFO]: 2023-10-30 04:48:51,609 test_iter 30000 2d pedestrian --> easy: 0.6586, mod: 0.5788, hard: 0.4973
[INFO]: 2023-10-30 04:48:51,609 test_iter 30000 gr pedestrian --> easy: 0.0528, mod: 0.0572, hard: 0.0457
[INFO]: 2023-10-30 04:48:51,610 test_iter 30000 3d pedestrian --> easy: 0.0434, mod: 0.0407, hard: 0.0409
[INFO]: 2023-10-30 04:48:51,611 test_iter 30000 2d cyclist --> easy: 0.6473, mod: 0.4699, hard: 0.4023
[INFO]: 2023-10-30 04:48:51,611 test_iter 30000 gr cyclist --> easy: 0.1087, mod: 0.1001, hard: 0.1001
[INFO]: 2023-10-30 04:48:51,612 test_iter 30000 3d cyclist --> easy: 0.0335, mod: 0.0250, hard: 0.0173
[INFO]: 2023-10-30 04:51:29,350 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0552, cls: 0.0341, iou: 0.0741), misc (ry: 0.12, z: 0.28), dt: 0.73, eta: 4.0h
[INFO]: 2023-10-30 04:54:03,269 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0557, cls: 0.0322, iou: 0.0747), misc (ry: 0.13, z: 0.30), dt: 0.73, eta: 3.9h
[INFO]: 2023-10-30 04:56:37,887 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0576, cls: 0.0340, iou: 0.0753), misc (ry: 0.14, z: 0.27), dt: 0.73, eta: 3.9h
[INFO]: 2023-10-30 04:59:12,030 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0592, cls: 0.0326, iou: 0.0732), misc (ry: 0.13, z: 0.30), dt: 0.73, eta: 3.8h
[INFO]: 2023-10-30 05:01:47,527 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0462, cls: 0.0300, iou: 0.0695), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.8h
[INFO]: 2023-10-30 05:04:25,040 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0529, cls: 0.0294, iou: 0.0708), misc (ry: 0.12, z: 0.28), dt: 0.72, eta: 3.7h
[INFO]: 2023-10-30 05:06:58,306 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0506, cls: 0.0318, iou: 0.0702), misc (ry: 0.13, z: 0.26), dt: 0.72, eta: 3.7h
[INFO]: 2023-10-30 05:09:31,188 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0487, cls: 0.0310, iou: 0.0693), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.6h
[INFO]: 2023-10-30 05:12:08,191 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0457, cls: 0.0291, iou: 0.0672), misc (ry: 0.12, z: 0.27), dt: 0.72, eta: 3.6h
[INFO]: 2023-10-30 05:14:42,967 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0484, cls: 0.0310, iou: 0.0699), misc (ry: 0.13, z: 0.26), dt: 0.72, eta: 3.5h
[INFO]: 2023-10-30 05:17:17,371 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0475, cls: 0.0306, iou: 0.0684), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.5h
[INFO]: 2023-10-30 05:19:52,850 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0460, cls: 0.0305, iou: 0.0683), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.4h
[INFO]: 2023-10-30 05:22:28,424 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0456, cls: 0.0306, iou: 0.0675), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.3h
[INFO]: 2023-10-30 05:25:04,225 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0303, iou: 0.0669), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.3h
[INFO]: 2023-10-30 05:27:39,122 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0432, cls: 0.0294, iou: 0.0655), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 3.2h
[INFO]: 2023-10-30 05:30:13,233 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0459, cls: 0.0315, iou: 0.0682), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.2h
[INFO]: 2023-10-30 05:32:49,028 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0421, cls: 0.0307, iou: 0.0648), misc (ry: 0.11, z: 0.25), dt: 0.72, eta: 3.1h
[INFO]: 2023-10-30 05:35:24,570 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0493, cls: 0.0330, iou: 0.0699), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 3.1h
[INFO]: 2023-10-30 05:37:57,476 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0441, cls: 0.0298, iou: 0.0655), misc (ry: 0.11, z: 0.26), dt: 0.71, eta: 3.0h
[INFO]: 2023-10-30 05:40:31,159 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0440, cls: 0.0294, iou: 0.0675), misc (ry: 0.12, z: 0.25), dt: 0.71, eta: 3.0h
[INFO]: 2023-10-30 05:43:01,547 testing 1000/3769, dt: 0.146, eta: 6.7m
[INFO]: 2023-10-30 05:45:25,827 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-10-30 05:47:52,421 testing 3000/3769, dt: 0.146, eta: 1.9m
[INFO]: 2023-10-30 05:49:52,458 test_iter 35000 2d car --> easy: 0.9146, mod: 0.8412, hard: 0.6813
[INFO]: 2023-10-30 05:49:52,459 test_iter 35000 gr car --> easy: 0.2846, mod: 0.2202, hard: 0.1839
[INFO]: 2023-10-30 05:49:52,460 test_iter 35000 3d car --> easy: 0.2139, mod: 0.1737, hard: 0.1385
[INFO]: 2023-10-30 05:49:52,461 test_iter 35000 2d pedestrian --> easy: 0.6621, mod: 0.5843, hard: 0.5016
[INFO]: 2023-10-30 05:49:52,461 test_iter 35000 gr pedestrian --> easy: 0.0743, mod: 0.0642, hard: 0.0609
[INFO]: 2023-10-30 05:49:52,462 test_iter 35000 3d pedestrian --> easy: 0.0528, mod: 0.0553, hard: 0.0474
[INFO]: 2023-10-30 05:49:52,462 test_iter 35000 2d cyclist --> easy: 0.6269, mod: 0.3995, hard: 0.3896
[INFO]: 2023-10-30 05:49:52,463 test_iter 35000 gr cyclist --> easy: 0.1217, mod: 0.1045, hard: 0.1017
[INFO]: 2023-10-30 05:49:52,464 test_iter 35000 3d cyclist --> easy: 0.0481, mod: 0.0293, hard: 0.0292
[INFO]: 2023-10-30 05:52:28,630 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0426, cls: 0.0293, iou: 0.0646), misc (ry: 0.11, z: 0.25), dt: 0.73, eta: 3.0h
[INFO]: 2023-10-30 05:55:02,775 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0285, iou: 0.0636), misc (ry: 0.11, z: 0.25), dt: 0.73, eta: 2.9h
[INFO]: 2023-10-30 05:57:38,669 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0432, cls: 0.0298, iou: 0.0646), misc (ry: 0.12, z: 0.25), dt: 0.73, eta: 2.9h
[INFO]: 2023-10-30 06:00:14,496 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0398, cls: 0.0287, iou: 0.0618), misc (ry: 0.10, z: 0.24), dt: 0.73, eta: 2.8h
[INFO]: 2023-10-30 06:02:51,292 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0445, cls: 0.0299, iou: 0.0633), misc (ry: 0.12, z: 0.25), dt: 0.73, eta: 2.8h
[INFO]: 2023-10-30 06:05:25,533 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0392, cls: 0.0299, iou: 0.0613), misc (ry: 0.11, z: 0.24), dt: 0.73, eta: 2.7h
[INFO]: 2023-10-30 06:08:00,619 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0349, cls: 0.0276, iou: 0.0599), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 2.7h
[INFO]: 2023-10-30 06:10:36,261 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0410, cls: 0.0317, iou: 0.0626), misc (ry: 0.12, z: 0.23), dt: 0.72, eta: 2.6h
[INFO]: 2023-10-30 06:13:08,344 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0344, cls: 0.0273, iou: 0.0587), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 2.6h
[INFO]: 2023-10-30 06:15:44,378 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0353, cls: 0.0281, iou: 0.0580), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 2.5h
[INFO]: 2023-10-30 06:18:19,119 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0370, cls: 0.0280, iou: 0.0598), misc (ry: 0.10, z: 0.24), dt: 0.72, eta: 2.5h
[INFO]: 2023-10-30 06:20:53,199 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0296, iou: 0.0584), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.4h
[INFO]: 2023-10-30 06:23:25,654 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0350, cls: 0.0284, iou: 0.0587), misc (ry: 0.10, z: 0.23), dt: 0.72, eta: 2.4h
[INFO]: 2023-10-30 06:26:01,926 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0392, cls: 0.0293, iou: 0.0604), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.3h
[INFO]: 2023-10-30 06:28:35,514 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0305, iou: 0.0622), misc (ry: 0.12, z: 0.26), dt: 0.72, eta: 2.2h
[INFO]: 2023-10-30 06:31:07,122 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0361, cls: 0.0291, iou: 0.0600), misc (ry: 0.10, z: 0.24), dt: 0.72, eta: 2.2h
[INFO]: 2023-10-30 06:33:42,663 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0365, cls: 0.0300, iou: 0.0589), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 2.1h
[INFO]: 2023-10-30 06:36:17,283 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0390, cls: 0.0298, iou: 0.0591), misc (ry: 0.11, z: 0.23), dt: 0.72, eta: 2.1h
[INFO]: 2023-10-30 06:38:56,318 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0348, cls: 0.0278, iou: 0.0572), misc (ry: 0.10, z: 0.22), dt: 0.72, eta: 2.0h
[INFO]: 2023-10-30 06:41:31,924 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0375, cls: 0.0294, iou: 0.0571), misc (ry: 0.11, z: 0.24), dt: 0.72, eta: 2.0h
[INFO]: 2023-10-30 06:43:59,529 testing 1000/3769, dt: 0.143, eta: 6.6m
[INFO]: 2023-10-30 06:46:21,638 testing 2000/3769, dt: 0.142, eta: 4.2m
[INFO]: 2023-10-30 06:48:44,006 testing 3000/3769, dt: 0.142, eta: 1.8m
[INFO]: 2023-10-30 06:50:43,616 test_iter 40000 2d car --> easy: 0.9055, mod: 0.8383, hard: 0.6790
[INFO]: 2023-10-30 06:50:43,617 test_iter 40000 gr car --> easy: 0.2804, mod: 0.2204, hard: 0.1863
[INFO]: 2023-10-30 06:50:43,618 test_iter 40000 3d car --> easy: 0.2170, mod: 0.1779, hard: 0.1577
[INFO]: 2023-10-30 06:50:43,619 test_iter 40000 2d pedestrian --> easy: 0.6652, mod: 0.5853, hard: 0.5021
[INFO]: 2023-10-30 06:50:43,619 test_iter 40000 gr pedestrian --> easy: 0.0692, mod: 0.0700, hard: 0.0664
[INFO]: 2023-10-30 06:50:43,620 test_iter 40000 3d pedestrian --> easy: 0.0513, mod: 0.0666, hard: 0.0574
[INFO]: 2023-10-30 06:50:43,620 test_iter 40000 2d cyclist --> easy: 0.6393, mod: 0.4049, hard: 0.3985
[INFO]: 2023-10-30 06:50:43,621 test_iter 40000 gr cyclist --> easy: 0.0507, mod: 0.0336, hard: 0.0339
[INFO]: 2023-10-30 06:50:43,622 test_iter 40000 3d cyclist --> easy: 0.0489, mod: 0.0314, hard: 0.0327
[INFO]: 2023-10-30 06:53:16,358 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0336, cls: 0.0277, iou: 0.0564), misc (ry: 0.10, z: 0.22), dt: 0.73, eta: 2.0h
[INFO]: 2023-10-30 06:55:49,248 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0325, cls: 0.0281, iou: 0.0543), misc (ry: 0.09, z: 0.21), dt: 0.73, eta: 1.9h
[INFO]: 2023-10-30 06:58:20,362 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0265, iou: 0.0539), misc (ry: 0.09, z: 0.21), dt: 0.73, eta: 1.9h
[INFO]: 2023-10-30 07:00:51,980 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0313, cls: 0.0282, iou: 0.0544), misc (ry: 0.10, z: 0.21), dt: 0.73, eta: 1.8h
[INFO]: 2023-10-30 07:03:25,490 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0286, iou: 0.0536), misc (ry: 0.10, z: 0.21), dt: 0.73, eta: 1.8h
[INFO]: 2023-10-30 07:06:00,068 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0341, cls: 0.0287, iou: 0.0544), misc (ry: 0.10, z: 0.21), dt: 0.73, eta: 1.7h
[INFO]: 2023-10-30 07:08:34,162 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0301, cls: 0.0281, iou: 0.0535), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.7h
[INFO]: 2023-10-30 07:11:09,868 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0301, cls: 0.0270, iou: 0.0519), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.6h
[INFO]: 2023-10-30 07:13:44,596 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0308, cls: 0.0269, iou: 0.0518), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 1.6h
[INFO]: 2023-10-30 07:16:17,067 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0319, cls: 0.0282, iou: 0.0515), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.5h
[INFO]: 2023-10-30 07:18:48,967 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0336, cls: 0.0287, iou: 0.0548), misc (ry: 0.10, z: 0.21), dt: 0.72, eta: 1.5h
[INFO]: 2023-10-30 07:21:22,119 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0299, cls: 0.0261, iou: 0.0511), misc (ry: 0.09, z: 0.21), dt: 0.72, eta: 1.4h
[INFO]: 2023-10-30 07:23:56,275 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0282, iou: 0.0519), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 1.4h
[INFO]: 2023-10-30 07:26:31,732 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0316, cls: 0.0284, iou: 0.0522), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.3h
[INFO]: 2023-10-30 07:29:06,924 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0294, cls: 0.0266, iou: 0.0500), misc (ry: 0.09, z: 0.20), dt: 0.72, eta: 1.2h
[INFO]: 2023-10-30 07:31:38,422 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0313, cls: 0.0269, iou: 0.0497), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.2h
[INFO]: 2023-10-30 07:34:13,023 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0288, iou: 0.0514), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.1h
[INFO]: 2023-10-30 07:36:47,353 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0334, cls: 0.0289, iou: 0.0520), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.1h
[INFO]: 2023-10-30 07:39:20,015 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0288, cls: 0.0269, iou: 0.0494), misc (ry: 0.10, z: 0.20), dt: 0.72, eta: 1.0h
[INFO]: 2023-10-30 07:41:54,086 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0290, cls: 0.0275, iou: 0.0489), misc (ry: 0.10, z: 0.19), dt: 0.72, eta: 59.8m
[INFO]: 2023-10-30 07:44:23,166 testing 1000/3769, dt: 0.144, eta: 6.7m
[INFO]: 2023-10-30 07:46:50,228 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-10-30 07:49:14,234 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-10-30 07:51:15,049 test_iter 45000 2d car --> easy: 0.8946, mod: 0.8349, hard: 0.6755
[INFO]: 2023-10-30 07:51:15,050 test_iter 45000 gr car --> easy: 0.2804, mod: 0.2208, hard: 0.1841
[INFO]: 2023-10-30 07:51:15,051 test_iter 45000 3d car --> easy: 0.2185, mod: 0.1769, hard: 0.1579
[INFO]: 2023-10-30 07:51:15,051 test_iter 45000 2d pedestrian --> easy: 0.7311, mod: 0.5873, hard: 0.5028
[INFO]: 2023-10-30 07:51:15,052 test_iter 45000 gr pedestrian --> easy: 0.0739, mod: 0.1180, hard: 0.1136
[INFO]: 2023-10-30 07:51:15,052 test_iter 45000 3d pedestrian --> easy: 0.0561, mod: 0.1136, hard: 0.1062
[INFO]: 2023-10-30 07:51:15,053 test_iter 45000 2d cyclist --> easy: 0.6445, mod: 0.4048, hard: 0.3984
[INFO]: 2023-10-30 07:51:15,054 test_iter 45000 gr cyclist --> easy: 0.1065, mod: 0.1000, hard: 0.1000
[INFO]: 2023-10-30 07:51:15,054 test_iter 45000 3d cyclist --> easy: 0.1064, mod: 0.0996, hard: 0.0996
[INFO]: 2023-10-30 07:53:48,954 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0312, cls: 0.0273, iou: 0.0508), misc (ry: 0.10, z: 0.20), dt: 0.73, eta: 57.7m
[INFO]: 2023-10-30 07:56:21,803 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0270, cls: 0.0260, iou: 0.0462), misc (ry: 0.09, z: 0.19), dt: 0.73, eta: 54.6m
[INFO]: 2023-10-30 07:58:57,711 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0295, cls: 0.0272, iou: 0.0483), misc (ry: 0.09, z: 0.20), dt: 0.73, eta: 51.5m
[INFO]: 2023-10-30 08:01:32,053 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0292, cls: 0.0289, iou: 0.0486), misc (ry: 0.09, z: 0.18), dt: 0.73, eta: 48.5m
[INFO]: 2023-10-30 08:04:05,243 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0268, iou: 0.0481), misc (ry: 0.09, z: 0.20), dt: 0.73, eta: 45.4m
[INFO]: 2023-10-30 08:06:41,932 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0278, iou: 0.0495), misc (ry: 0.10, z: 0.19), dt: 0.73, eta: 42.3m
[INFO]: 2023-10-30 08:09:14,430 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0253, cls: 0.0258, iou: 0.0454), misc (ry: 0.09, z: 0.18), dt: 0.73, eta: 39.3m
[INFO]: 2023-10-30 08:11:50,003 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0274, cls: 0.0266, iou: 0.0463), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 36.2m
[INFO]: 2023-10-30 08:14:23,477 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0281, iou: 0.0484), misc (ry: 0.10, z: 0.19), dt: 0.72, eta: 33.2m
[INFO]: 2023-10-30 08:16:57,407 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0255, cls: 0.0263, iou: 0.0445), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 30.2m
[INFO]: 2023-10-30 08:19:29,825 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0289, cls: 0.0270, iou: 0.0470), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 27.1m
[INFO]: 2023-10-30 08:22:04,300 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0283, cls: 0.0267, iou: 0.0463), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 24.1m
[INFO]: 2023-10-30 08:24:40,159 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0262, cls: 0.0273, iou: 0.0450), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 21.1m
[INFO]: 2023-10-30 08:27:11,580 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0264, cls: 0.0259, iou: 0.0435), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 18.0m
[INFO]: 2023-10-30 08:29:45,583 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0232, cls: 0.0253, iou: 0.0412), misc (ry: 0.08, z: 0.17), dt: 0.72, eta: 15.0m
[INFO]: 2023-10-30 08:32:19,761 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0273, cls: 0.0256, iou: 0.0433), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 12.0m
[INFO]: 2023-10-30 08:34:53,540 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0285, cls: 0.0272, iou: 0.0457), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 9.0m
[INFO]: 2023-10-30 08:37:27,466 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0275, cls: 0.0255, iou: 0.0430), misc (ry: 0.09, z: 0.19), dt: 0.72, eta: 6.0m
[INFO]: 2023-10-30 08:39:59,382 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0249, cls: 0.0259, iou: 0.0428), misc (ry: 0.09, z: 0.18), dt: 0.72, eta: 3.0m
[INFO]: 2023-10-30 08:42:34,937 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0263, cls: 0.0263, iou: 0.0429), misc (ry: 0.09, z: 0.17), dt: 0.72, eta: 0.7s
[INFO]: 2023-10-30 08:45:04,340 testing 1000/3769, dt: 0.145, eta: 6.7m
[INFO]: 2023-10-30 08:47:29,385 testing 2000/3769, dt: 0.145, eta: 4.3m
[INFO]: 2023-10-30 08:49:55,649 testing 3000/3769, dt: 0.145, eta: 1.9m
[INFO]: 2023-10-30 08:51:57,992 test_iter 50000 2d car --> easy: 0.9053, mod: 0.8397, hard: 0.6782
[INFO]: 2023-10-30 08:51:57,993 test_iter 50000 gr car --> easy: 0.2828, mod: 0.2213, hard: 0.1857
[INFO]: 2023-10-30 08:51:57,994 test_iter 50000 3d car --> easy: 0.2186, mod: 0.1781, hard: 0.1572
[INFO]: 2023-10-30 08:51:57,994 test_iter 50000 2d pedestrian --> easy: 0.6714, mod: 0.5914, hard: 0.5072
[INFO]: 2023-10-30 08:51:57,995 test_iter 50000 gr pedestrian --> easy: 0.0740, mod: 0.1187, hard: 0.1165
[INFO]: 2023-10-30 08:51:57,995 test_iter 50000 3d pedestrian --> easy: 0.0551, mod: 0.1152, hard: 0.1052
[INFO]: 2023-10-30 08:51:57,996 test_iter 50000 2d cyclist --> easy: 0.6442, mod: 0.4056, hard: 0.3987
[INFO]: 2023-10-30 08:51:57,997 test_iter 50000 gr cyclist --> easy: 0.0773, mod: 0.0591, hard: 0.0579
[INFO]: 2023-10-30 08:51:57,997 test_iter 50000 3d cyclist --> easy: 0.0650, mod: 0.0561, hard: 0.0563
