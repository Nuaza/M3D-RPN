[INFO]: 2024-04-24 11:19:49,230 ==开始处理数据集==
[INFO]: 2024-04-24 11:19:49,230 命中imdb缓存.
[INFO]: 2024-04-24 11:19:50,650 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-24 11:19:50,650 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-24 11:19:52,999 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-24 11:19:52,999 ==数据集处理完毕==
[INFO]: 2024-04-24 11:19:56,002 ==开始生成anchors==
[INFO]: 2024-04-24 11:19:56,003 ==anchors生成完毕==
[INFO]: 2024-04-24 11:19:59,006 ==开始计算bbox参数==
[INFO]: 2024-04-24 11:19:59,006 命中bbox的回归均值缓存
[INFO]: 2024-04-24 11:19:59,007 命中bbox的回归标准差缓存
[INFO]: 2024-04-24 11:19:59,007 ==bbox参数计算完毕==
[INFO]: 2024-04-24 11:20:07,045 设置保存完成
[INFO]: 2024-04-24 11:20:10,048 训练配置一览
[INFO]: 2024-04-24 11:20:12,057 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               114514                                  
    cuda_seed:              114514                                  
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-24 11:20:18,201 装载完成
[INFO]: 2024-04-24 11:20:21,205 神经网络结构一览
[INFO]: 2024-04-24 11:20:23,207 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (CDF): Sequential(
      (0): OREPA(
        (nonlinear): SiLU()
        (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (prop_feats): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (cls): Conv2d(1024, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): Sequential(
        (0): OREPA(
          (nonlinear): SiLU()
          (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-24 11:20:23,236 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-24 11:23:27,895 iter: 250, acc (bg: 1.00, fg: 0.93, iou: 0.81), loss (bbox_3d: 0.7010, cls: 0.1195, iou: 0.2181), misc (ry: 0.69, z: 1.36), dt: 0.74, eta: 10.2h
[INFO]: 2024-04-24 11:26:32,117 iter: 500, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6668, cls: 0.1241, iou: 0.2185), misc (ry: 0.72, z: 1.10), dt: 0.74, eta: 10.2h
[INFO]: 2024-04-24 11:29:38,322 iter: 750, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.8033, cls: 0.1392, iou: 0.2334), misc (ry: 0.81, z: 1.21), dt: 0.74, eta: 10.1h
[INFO]: 2024-04-24 11:32:45,622 iter: 1000, acc (bg: 1.00, fg: 0.91, iou: 0.80), loss (bbox_3d: 0.7235, cls: 0.1227, iou: 0.2247), misc (ry: 0.66, z: 1.28), dt: 0.74, eta: 10.1h
[INFO]: 2024-04-24 11:35:53,782 iter: 1250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.6070, cls: 0.0987, iou: 0.1962), misc (ry: 0.67, z: 1.05), dt: 0.74, eta: 10.1h
[INFO]: 2024-04-24 11:39:02,431 iter: 1500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4866, cls: 0.0866, iou: 0.1874), misc (ry: 0.50, z: 0.95), dt: 0.75, eta: 10.1h
[INFO]: 2024-04-24 11:42:11,622 iter: 1750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4582, cls: 0.0816, iou: 0.1848), misc (ry: 0.53, z: 0.91), dt: 0.75, eta: 10.0h
[INFO]: 2024-04-24 11:45:22,807 iter: 2000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4248, cls: 0.0765, iou: 0.1777), misc (ry: 0.48, z: 0.87), dt: 0.75, eta: 10.0h
[INFO]: 2024-04-24 11:48:31,848 iter: 2250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.3994, cls: 0.0755, iou: 0.1785), misc (ry: 0.47, z: 0.82), dt: 0.75, eta: 10.0h
[INFO]: 2024-04-24 11:51:37,704 iter: 2500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4158, cls: 0.0726, iou: 0.1746), misc (ry: 0.46, z: 0.87), dt: 0.75, eta: 9.9h
[INFO]: 2024-04-24 11:54:45,038 iter: 2750, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4657, cls: 0.0838, iou: 0.1884), misc (ry: 0.53, z: 0.96), dt: 0.75, eta: 9.8h
[INFO]: 2024-04-24 11:57:51,428 iter: 3000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3589, cls: 0.0737, iou: 0.1673), misc (ry: 0.40, z: 0.77), dt: 0.75, eta: 9.8h
[INFO]: 2024-04-24 12:01:02,038 iter: 3250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3680, cls: 0.0651, iou: 0.1678), misc (ry: 0.42, z: 0.85), dt: 0.75, eta: 9.7h
[INFO]: 2024-04-24 12:04:07,773 iter: 3500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4397, cls: 0.0743, iou: 0.1734), misc (ry: 0.56, z: 0.89), dt: 0.75, eta: 9.7h
[INFO]: 2024-04-24 12:07:15,540 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3563, cls: 0.0656, iou: 0.1679), misc (ry: 0.39, z: 0.78), dt: 0.75, eta: 9.6h
[INFO]: 2024-04-24 12:10:20,865 iter: 4000, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2987, cls: 0.0612, iou: 0.1575), misc (ry: 0.34, z: 0.74), dt: 0.75, eta: 9.6h
[INFO]: 2024-04-24 12:13:29,024 iter: 4250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3051, cls: 0.0627, iou: 0.1590), misc (ry: 0.36, z: 0.70), dt: 0.75, eta: 9.5h
[INFO]: 2024-04-24 12:16:31,720 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2933, cls: 0.0578, iou: 0.1564), misc (ry: 0.36, z: 0.73), dt: 0.75, eta: 9.5h
[INFO]: 2024-04-24 12:19:35,895 iter: 4750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3802, cls: 0.0698, iou: 0.1679), misc (ry: 0.51, z: 0.74), dt: 0.75, eta: 9.4h
[INFO]: 2024-04-24 12:22:44,375 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.3276, cls: 0.0621, iou: 0.1588), misc (ry: 0.43, z: 0.70), dt: 0.75, eta: 9.4h
[INFO]: 2024-04-24 12:25:48,753 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.85), loss (bbox_3d: 0.3418, cls: 0.0622, iou: 0.1613), misc (ry: 0.40, z: 0.76), dt: 0.75, eta: 9.3h
[INFO]: 2024-04-24 12:28:53,490 iter: 5500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.3083, cls: 0.0549, iou: 0.1559), misc (ry: 0.38, z: 0.81), dt: 0.75, eta: 9.2h
[INFO]: 2024-04-24 12:31:59,900 iter: 5750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3405, cls: 0.0667, iou: 0.1663), misc (ry: 0.47, z: 0.68), dt: 0.75, eta: 9.2h
[INFO]: 2024-04-24 12:35:03,133 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.3082, cls: 0.0577, iou: 0.1515), misc (ry: 0.47, z: 0.69), dt: 0.75, eta: 9.1h
[INFO]: 2024-04-24 12:38:07,031 iter: 6250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3057, cls: 0.0709, iou: 0.1601), misc (ry: 0.33, z: 0.77), dt: 0.75, eta: 9.1h
[INFO]: 2024-04-24 12:41:13,132 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2769, cls: 0.0568, iou: 0.1518), misc (ry: 0.35, z: 0.68), dt: 0.75, eta: 9.0h
[INFO]: 2024-04-24 12:44:17,240 iter: 6750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2331, cls: 0.0531, iou: 0.1437), misc (ry: 0.30, z: 0.63), dt: 0.75, eta: 9.0h
[INFO]: 2024-04-24 12:47:22,811 iter: 7000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2480, cls: 0.0551, iou: 0.1443), misc (ry: 0.32, z: 0.63), dt: 0.75, eta: 8.9h
[INFO]: 2024-04-24 12:50:29,145 iter: 7250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2741, cls: 0.0583, iou: 0.1535), misc (ry: 0.33, z: 0.71), dt: 0.75, eta: 8.9h
[INFO]: 2024-04-24 12:53:31,801 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2875, cls: 0.0583, iou: 0.1548), misc (ry: 0.36, z: 0.69), dt: 0.75, eta: 8.8h
[INFO]: 2024-04-24 12:56:35,466 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2302, cls: 0.0530, iou: 0.1446), misc (ry: 0.30, z: 0.62), dt: 0.74, eta: 8.7h
[INFO]: 2024-04-24 12:59:43,642 iter: 8000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2356, cls: 0.0525, iou: 0.1434), misc (ry: 0.33, z: 0.59), dt: 0.75, eta: 8.7h
[INFO]: 2024-04-24 13:02:52,344 iter: 8250, acc (bg: 1.00, fg: 0.98, iou: 0.87), loss (bbox_3d: 0.2418, cls: 0.0507, iou: 0.1416), misc (ry: 0.28, z: 0.66), dt: 0.75, eta: 8.6h
[INFO]: 2024-04-24 13:05:54,327 iter: 8500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2857, cls: 0.0568, iou: 0.1498), misc (ry: 0.42, z: 0.66), dt: 0.74, eta: 8.6h
[INFO]: 2024-04-24 13:08:57,632 iter: 8750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2649, cls: 0.0509, iou: 0.1432), misc (ry: 0.41, z: 0.65), dt: 0.74, eta: 8.5h
[INFO]: 2024-04-24 13:12:00,675 iter: 9000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2734, cls: 0.0528, iou: 0.1451), misc (ry: 0.39, z: 0.71), dt: 0.74, eta: 8.5h
[INFO]: 2024-04-24 13:15:02,179 iter: 9250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2392, cls: 0.0503, iou: 0.1397), misc (ry: 0.28, z: 0.70), dt: 0.74, eta: 8.4h
[INFO]: 2024-04-24 13:18:06,966 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2228, cls: 0.0495, iou: 0.1355), misc (ry: 0.29, z: 0.61), dt: 0.74, eta: 8.4h
[INFO]: 2024-04-24 13:21:11,604 iter: 9750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3021, cls: 0.0571, iou: 0.1466), misc (ry: 0.47, z: 0.66), dt: 0.74, eta: 8.3h
[INFO]: 2024-04-24 13:24:16,294 iter: 10000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2825, cls: 0.0617, iou: 0.1530), misc (ry: 0.38, z: 0.68), dt: 0.74, eta: 8.3h
[INFO]: 2024-04-24 13:34:47,671 test_iter 10000 2d car --> easy: 0.8909, mod: 0.8966, hard: 0.8030
[INFO]: 2024-04-24 13:34:47,672 test_iter 10000 gr car --> easy: 0.2385, mod: 0.1857, hard: 0.1591
[INFO]: 2024-04-24 13:34:47,672 test_iter 10000 3d car --> easy: 0.2213, mod: 0.1597, hard: 0.1466
[INFO]: 2024-04-24 13:34:47,673 test_iter 10000 2d pedestrian --> easy: 0.6000, mod: 0.5251, hard: 0.4546
[INFO]: 2024-04-24 13:34:47,674 test_iter 10000 gr pedestrian --> easy: 0.0351, mod: 0.0311, hard: 0.0281
[INFO]: 2024-04-24 13:34:47,674 test_iter 10000 3d pedestrian --> easy: 0.0289, mod: 0.0255, hard: 0.0200
[INFO]: 2024-04-24 13:34:47,675 test_iter 10000 2d cyclist --> easy: 0.3672, mod: 0.2535, hard: 0.2438
[INFO]: 2024-04-24 13:34:47,675 test_iter 10000 gr cyclist --> easy: 0.0039, mod: 0.0035, hard: 0.0035
[INFO]: 2024-04-24 13:34:47,676 test_iter 10000 3d cyclist --> easy: 0.0035, mod: 0.0035, hard: 0.0035
[INFO]: 2024-04-24 13:37:50,957 iter: 10250, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2827, cls: 0.0562, iou: 0.1506), misc (ry: 0.36, z: 0.77), dt: 0.80, eta: 8.9h
[INFO]: 2024-04-24 13:40:56,759 iter: 10500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2667, cls: 0.0569, iou: 0.1455), misc (ry: 0.34, z: 0.66), dt: 0.80, eta: 8.8h
[INFO]: 2024-04-24 13:44:00,582 iter: 10750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3591, cls: 0.0747, iou: 0.1610), misc (ry: 0.45, z: 0.72), dt: 0.80, eta: 8.7h
[INFO]: 2024-04-24 13:47:04,135 iter: 11000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2746, cls: 0.0587, iou: 0.1485), misc (ry: 0.33, z: 0.72), dt: 0.80, eta: 8.7h
[INFO]: 2024-04-24 13:50:09,986 iter: 11250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2118, cls: 0.0482, iou: 0.1357), misc (ry: 0.29, z: 0.65), dt: 0.80, eta: 8.6h
[INFO]: 2024-04-24 13:53:17,905 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2086, cls: 0.0482, iou: 0.1357), misc (ry: 0.29, z: 0.59), dt: 0.80, eta: 8.5h
[INFO]: 2024-04-24 13:56:23,787 iter: 11750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2260, cls: 0.0501, iou: 0.1376), misc (ry: 0.31, z: 0.61), dt: 0.80, eta: 8.5h
[INFO]: 2024-04-24 13:59:29,284 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2065, cls: 0.0484, iou: 0.1340), misc (ry: 0.30, z: 0.54), dt: 0.80, eta: 8.4h
[INFO]: 2024-04-24 14:02:35,621 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1783, cls: 0.0449, iou: 0.1278), misc (ry: 0.26, z: 0.56), dt: 0.79, eta: 8.3h
[INFO]: 2024-04-24 14:05:42,041 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1760, cls: 0.0446, iou: 0.1265), misc (ry: 0.27, z: 0.57), dt: 0.79, eta: 8.3h
[INFO]: 2024-04-24 14:08:49,231 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1654, cls: 0.0422, iou: 0.1262), misc (ry: 0.25, z: 0.54), dt: 0.79, eta: 8.2h
[INFO]: 2024-04-24 14:11:54,395 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1742, cls: 0.0446, iou: 0.1291), misc (ry: 0.26, z: 0.55), dt: 0.79, eta: 8.1h
[INFO]: 2024-04-24 14:15:02,798 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1862, cls: 0.0440, iou: 0.1252), misc (ry: 0.30, z: 0.51), dt: 0.79, eta: 8.1h
[INFO]: 2024-04-24 14:18:08,294 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1583, cls: 0.0419, iou: 0.1235), misc (ry: 0.24, z: 0.51), dt: 0.79, eta: 8.0h
[INFO]: 2024-04-24 14:21:11,806 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1826, cls: 0.0438, iou: 0.1271), misc (ry: 0.29, z: 0.53), dt: 0.79, eta: 7.9h
[INFO]: 2024-04-24 14:24:16,650 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1626, cls: 0.0404, iou: 0.1288), misc (ry: 0.23, z: 0.53), dt: 0.79, eta: 7.9h
[INFO]: 2024-04-24 14:27:24,899 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1533, cls: 0.0386, iou: 0.1243), misc (ry: 0.21, z: 0.61), dt: 0.79, eta: 7.8h
[INFO]: 2024-04-24 14:30:31,550 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1563, cls: 0.0428, iou: 0.1244), misc (ry: 0.24, z: 0.51), dt: 0.79, eta: 7.8h
[INFO]: 2024-04-24 14:33:40,332 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1532, cls: 0.0399, iou: 0.1194), misc (ry: 0.24, z: 0.53), dt: 0.79, eta: 7.7h
[INFO]: 2024-04-24 14:36:46,926 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1428, cls: 0.0391, iou: 0.1144), misc (ry: 0.22, z: 0.51), dt: 0.79, eta: 7.6h
[INFO]: 2024-04-24 14:39:52,135 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1513, cls: 0.0393, iou: 0.1196), misc (ry: 0.23, z: 0.51), dt: 0.78, eta: 7.6h
[INFO]: 2024-04-24 14:43:01,252 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1612, cls: 0.0415, iou: 0.1231), misc (ry: 0.25, z: 0.51), dt: 0.78, eta: 7.5h
[INFO]: 2024-04-24 14:46:09,367 iter: 15750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1988, cls: 0.0455, iou: 0.1262), misc (ry: 0.36, z: 0.56), dt: 0.78, eta: 7.5h
[INFO]: 2024-04-24 14:49:16,155 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2462, cls: 0.0538, iou: 0.1340), misc (ry: 0.37, z: 0.57), dt: 0.78, eta: 7.4h
[INFO]: 2024-04-24 14:52:23,211 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2087, cls: 0.0473, iou: 0.1314), misc (ry: 0.30, z: 0.57), dt: 0.78, eta: 7.3h
[INFO]: 2024-04-24 14:55:26,307 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1906, cls: 0.0438, iou: 0.1278), misc (ry: 0.29, z: 0.55), dt: 0.78, eta: 7.3h
[INFO]: 2024-04-24 14:58:28,082 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1845, cls: 0.0427, iou: 0.1227), misc (ry: 0.32, z: 0.49), dt: 0.78, eta: 7.2h
[INFO]: 2024-04-24 15:01:32,161 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2707, cls: 0.0557, iou: 0.1430), misc (ry: 0.45, z: 0.59), dt: 0.78, eta: 7.2h
[INFO]: 2024-04-24 15:04:36,177 iter: 17250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2060, cls: 0.0450, iou: 0.1307), misc (ry: 0.33, z: 0.53), dt: 0.78, eta: 7.1h
[INFO]: 2024-04-24 15:07:37,786 iter: 17500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1879, cls: 0.0420, iou: 0.1280), misc (ry: 0.33, z: 0.52), dt: 0.78, eta: 7.0h
[INFO]: 2024-04-24 15:10:43,434 iter: 17750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2014, cls: 0.0466, iou: 0.1306), misc (ry: 0.34, z: 0.55), dt: 0.78, eta: 7.0h
[INFO]: 2024-04-24 15:13:46,422 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1781, cls: 0.0392, iou: 0.1200), misc (ry: 0.31, z: 0.52), dt: 0.78, eta: 6.9h
[INFO]: 2024-04-24 15:16:49,107 iter: 18250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1671, cls: 0.0404, iou: 0.1213), misc (ry: 0.27, z: 0.51), dt: 0.78, eta: 6.9h
[INFO]: 2024-04-24 15:19:55,627 iter: 18500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1596, cls: 0.0425, iou: 0.1187), misc (ry: 0.24, z: 0.52), dt: 0.78, eta: 6.8h
[INFO]: 2024-04-24 15:23:04,707 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1458, cls: 0.0386, iou: 0.1136), misc (ry: 0.23, z: 0.49), dt: 0.78, eta: 6.7h
[INFO]: 2024-04-24 15:26:16,665 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1251, cls: 0.0365, iou: 0.1098), misc (ry: 0.21, z: 0.46), dt: 0.78, eta: 6.7h
[INFO]: 2024-04-24 15:29:31,276 iter: 19250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1178, cls: 0.0382, iou: 0.1066), misc (ry: 0.20, z: 0.43), dt: 0.78, eta: 6.6h
[INFO]: 2024-04-24 15:32:36,476 iter: 19500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1291, cls: 0.0369, iou: 0.1148), misc (ry: 0.21, z: 0.48), dt: 0.78, eta: 6.6h
[INFO]: 2024-04-24 15:35:43,984 iter: 19750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1333, cls: 0.0376, iou: 0.1125), misc (ry: 0.21, z: 0.47), dt: 0.78, eta: 6.5h
[INFO]: 2024-04-24 15:38:53,297 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1195, cls: 0.0353, iou: 0.1092), misc (ry: 0.21, z: 0.44), dt: 0.78, eta: 6.5h
[INFO]: 2024-04-24 15:49:25,243 test_iter 20000 2d car --> easy: 0.9194, mod: 0.8705, hard: 0.7857
[INFO]: 2024-04-24 15:49:25,245 test_iter 20000 gr car --> easy: 0.3373, mod: 0.2802, hard: 0.2626
[INFO]: 2024-04-24 15:49:25,245 test_iter 20000 3d car --> easy: 0.2999, mod: 0.2531, hard: 0.2107
[INFO]: 2024-04-24 15:49:25,246 test_iter 20000 2d pedestrian --> easy: 0.6386, mod: 0.5610, hard: 0.4823
[INFO]: 2024-04-24 15:49:25,246 test_iter 20000 gr pedestrian --> easy: 0.0471, mod: 0.0484, hard: 0.0418
[INFO]: 2024-04-24 15:49:25,247 test_iter 20000 3d pedestrian --> easy: 0.0451, mod: 0.0407, hard: 0.0411
[INFO]: 2024-04-24 15:49:25,248 test_iter 20000 2d cyclist --> easy: 0.6616, mod: 0.4102, hard: 0.4033
[INFO]: 2024-04-24 15:49:25,248 test_iter 20000 gr cyclist --> easy: 0.0274, mod: 0.0135, hard: 0.0138
[INFO]: 2024-04-24 15:49:25,249 test_iter 20000 3d cyclist --> easy: 0.0232, mod: 0.0109, hard: 0.0111
[INFO]: 2024-04-24 15:52:32,820 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1324, cls: 0.0320, iou: 0.1117), misc (ry: 0.21, z: 0.51), dt: 0.81, eta: 6.7h
[INFO]: 2024-04-24 15:55:39,148 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1180, cls: 0.0362, iou: 0.1089), misc (ry: 0.19, z: 0.47), dt: 0.81, eta: 6.6h
[INFO]: 2024-04-24 15:58:43,379 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1058, cls: 0.0318, iou: 0.1044), misc (ry: 0.18, z: 0.45), dt: 0.80, eta: 6.5h
[INFO]: 2024-04-24 16:01:52,540 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1149, cls: 0.0340, iou: 0.1045), misc (ry: 0.19, z: 0.47), dt: 0.80, eta: 6.5h
[INFO]: 2024-04-24 16:04:56,795 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1260, cls: 0.0351, iou: 0.1061), misc (ry: 0.22, z: 0.45), dt: 0.80, eta: 6.4h
[INFO]: 2024-04-24 16:08:00,540 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1057, cls: 0.0337, iou: 0.0984), misc (ry: 0.18, z: 0.42), dt: 0.80, eta: 6.4h
[INFO]: 2024-04-24 16:11:07,278 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.0998, cls: 0.0329, iou: 0.1029), misc (ry: 0.18, z: 0.44), dt: 0.80, eta: 6.3h
[INFO]: 2024-04-24 16:14:12,684 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1079, cls: 0.0325, iou: 0.1025), misc (ry: 0.19, z: 0.45), dt: 0.80, eta: 6.2h
[INFO]: 2024-04-24 16:17:24,021 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1053, cls: 0.0336, iou: 0.1035), misc (ry: 0.20, z: 0.42), dt: 0.80, eta: 6.2h
[INFO]: 2024-04-24 16:20:34,751 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1002, cls: 0.0325, iou: 0.0987), misc (ry: 0.20, z: 0.43), dt: 0.80, eta: 6.1h
[INFO]: 2024-04-24 16:23:45,964 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1041, cls: 0.0331, iou: 0.1039), misc (ry: 0.20, z: 0.45), dt: 0.80, eta: 6.1h
[INFO]: 2024-04-24 16:26:56,799 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1275, cls: 0.0345, iou: 0.1021), misc (ry: 0.25, z: 0.44), dt: 0.80, eta: 6.0h
[INFO]: 2024-04-24 16:30:03,568 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1388, cls: 0.0353, iou: 0.1073), misc (ry: 0.28, z: 0.45), dt: 0.80, eta: 5.9h
[INFO]: 2024-04-24 16:33:10,342 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1000, cls: 0.0334, iou: 0.0977), misc (ry: 0.19, z: 0.41), dt: 0.80, eta: 5.9h
[INFO]: 2024-04-24 16:36:18,081 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1293, cls: 0.0344, iou: 0.1077), misc (ry: 0.23, z: 0.43), dt: 0.80, eta: 5.8h
[INFO]: 2024-04-24 16:39:25,998 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1536, cls: 0.0343, iou: 0.1068), misc (ry: 0.31, z: 0.45), dt: 0.80, eta: 5.8h
[INFO]: 2024-04-24 16:42:29,637 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1225, cls: 0.0324, iou: 0.1039), misc (ry: 0.21, z: 0.48), dt: 0.80, eta: 5.7h
[INFO]: 2024-04-24 16:45:36,307 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1051, cls: 0.0316, iou: 0.0998), misc (ry: 0.19, z: 0.41), dt: 0.80, eta: 5.6h
[INFO]: 2024-04-24 16:48:43,293 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1037, cls: 0.0337, iou: 0.1014), misc (ry: 0.20, z: 0.40), dt: 0.80, eta: 5.6h
[INFO]: 2024-04-24 16:51:50,801 iter: 25000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2121, cls: 0.0460, iou: 0.1237), misc (ry: 0.36, z: 0.54), dt: 0.80, eta: 5.5h
[INFO]: 2024-04-24 16:54:57,914 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1745, cls: 0.0440, iou: 0.1181), misc (ry: 0.29, z: 0.52), dt: 0.80, eta: 5.5h
[INFO]: 2024-04-24 16:58:07,157 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1532, cls: 0.0385, iou: 0.1125), misc (ry: 0.31, z: 0.44), dt: 0.79, eta: 5.4h
[INFO]: 2024-04-24 17:01:16,050 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1621, cls: 0.0408, iou: 0.1141), misc (ry: 0.28, z: 0.50), dt: 0.79, eta: 5.4h
[INFO]: 2024-04-24 17:04:20,877 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1584, cls: 0.0380, iou: 0.1136), misc (ry: 0.30, z: 0.49), dt: 0.79, eta: 5.3h
[INFO]: 2024-04-24 17:07:29,391 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1392, cls: 0.0412, iou: 0.1118), misc (ry: 0.24, z: 0.44), dt: 0.79, eta: 5.2h
[INFO]: 2024-04-24 17:10:34,530 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1200, cls: 0.0361, iou: 0.1065), misc (ry: 0.20, z: 0.41), dt: 0.79, eta: 5.2h
[INFO]: 2024-04-24 17:13:40,953 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1080, cls: 0.0309, iou: 0.0985), misc (ry: 0.20, z: 0.41), dt: 0.79, eta: 5.1h
[INFO]: 2024-04-24 17:16:49,122 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1197, cls: 0.0328, iou: 0.1031), misc (ry: 0.25, z: 0.44), dt: 0.79, eta: 5.1h
[INFO]: 2024-04-24 17:19:59,453 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0977, cls: 0.0320, iou: 0.0964), misc (ry: 0.20, z: 0.40), dt: 0.79, eta: 5.0h
[INFO]: 2024-04-24 17:23:11,645 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0961, cls: 0.0337, iou: 0.0989), misc (ry: 0.18, z: 0.38), dt: 0.79, eta: 4.9h
[INFO]: 2024-04-24 17:26:19,083 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0957, cls: 0.0314, iou: 0.0980), misc (ry: 0.17, z: 0.40), dt: 0.79, eta: 4.9h
[INFO]: 2024-04-24 17:29:26,299 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0910, cls: 0.0315, iou: 0.0965), misc (ry: 0.17, z: 0.40), dt: 0.79, eta: 4.8h
[INFO]: 2024-04-24 17:32:36,800 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0881, cls: 0.0321, iou: 0.0942), misc (ry: 0.18, z: 0.37), dt: 0.79, eta: 4.8h
[INFO]: 2024-04-24 17:35:47,628 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1010, cls: 0.0291, iou: 0.0965), misc (ry: 0.18, z: 0.46), dt: 0.79, eta: 4.7h
[INFO]: 2024-04-24 17:38:59,694 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0852, cls: 0.0308, iou: 0.0943), misc (ry: 0.17, z: 0.37), dt: 0.79, eta: 4.7h
[INFO]: 2024-04-24 17:42:06,776 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0861, cls: 0.0307, iou: 0.0912), misc (ry: 0.18, z: 0.36), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-24 17:45:13,252 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0870, cls: 0.0287, iou: 0.0916), misc (ry: 0.16, z: 0.41), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-24 17:48:22,003 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0844, cls: 0.0287, iou: 0.0909), misc (ry: 0.18, z: 0.37), dt: 0.79, eta: 4.5h
[INFO]: 2024-04-24 17:51:31,501 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0982, cls: 0.0299, iou: 0.0926), misc (ry: 0.21, z: 0.39), dt: 0.79, eta: 4.4h
[INFO]: 2024-04-24 17:54:39,151 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0931, cls: 0.0286, iou: 0.0913), misc (ry: 0.19, z: 0.42), dt: 0.79, eta: 4.4h
[INFO]: 2024-04-24 18:05:12,791 test_iter 30000 2d car --> easy: 0.9287, mod: 0.8700, hard: 0.7829
[INFO]: 2024-04-24 18:05:12,792 test_iter 30000 gr car --> easy: 0.4124, mod: 0.3239, hard: 0.2685
[INFO]: 2024-04-24 18:05:12,793 test_iter 30000 3d car --> easy: 0.3603, mod: 0.2940, hard: 0.2515
[INFO]: 2024-04-24 18:05:12,793 test_iter 30000 2d pedestrian --> easy: 0.6427, mod: 0.5616, hard: 0.4843
[INFO]: 2024-04-24 18:05:12,794 test_iter 30000 gr pedestrian --> easy: 0.1092, mod: 0.1110, hard: 0.1057
[INFO]: 2024-04-24 18:05:12,795 test_iter 30000 3d pedestrian --> easy: 0.1068, mod: 0.1059, hard: 0.1012
[INFO]: 2024-04-24 18:05:12,795 test_iter 30000 2d cyclist --> easy: 0.6319, mod: 0.4003, hard: 0.3950
[INFO]: 2024-04-24 18:05:12,796 test_iter 30000 gr cyclist --> easy: 0.0267, mod: 0.0130, hard: 0.0119
[INFO]: 2024-04-24 18:05:12,796 test_iter 30000 3d cyclist --> easy: 0.0243, mod: 0.0130, hard: 0.0119
[INFO]: 2024-04-24 18:08:21,191 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0975, cls: 0.0299, iou: 0.0967), misc (ry: 0.19, z: 0.42), dt: 0.81, eta: 4.4h
[INFO]: 2024-04-24 18:11:29,713 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0896, cls: 0.0315, iou: 0.0933), misc (ry: 0.19, z: 0.37), dt: 0.81, eta: 4.4h
[INFO]: 2024-04-24 18:14:40,432 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0844, cls: 0.0296, iou: 0.0906), misc (ry: 0.19, z: 0.34), dt: 0.81, eta: 4.3h
[INFO]: 2024-04-24 18:17:50,362 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0283, iou: 0.0890), misc (ry: 0.16, z: 0.37), dt: 0.81, eta: 4.3h
[INFO]: 2024-04-24 18:21:00,578 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0734, cls: 0.0300, iou: 0.0855), misc (ry: 0.15, z: 0.34), dt: 0.81, eta: 4.2h
[INFO]: 2024-04-24 18:24:03,952 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0716, cls: 0.0274, iou: 0.0846), misc (ry: 0.14, z: 0.36), dt: 0.81, eta: 4.1h
[INFO]: 2024-04-24 18:27:09,290 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0772, cls: 0.0268, iou: 0.0853), misc (ry: 0.16, z: 0.35), dt: 0.81, eta: 4.1h
[INFO]: 2024-04-24 18:30:17,402 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0710, cls: 0.0273, iou: 0.0849), misc (ry: 0.16, z: 0.34), dt: 0.81, eta: 4.0h
[INFO]: 2024-04-24 18:33:23,213 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0615, cls: 0.0257, iou: 0.0820), misc (ry: 0.15, z: 0.33), dt: 0.81, eta: 4.0h
[INFO]: 2024-04-24 18:36:27,936 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0645, cls: 0.0259, iou: 0.0796), misc (ry: 0.15, z: 0.32), dt: 0.81, eta: 3.9h
[INFO]: 2024-04-24 18:39:35,674 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0678, cls: 0.0267, iou: 0.0816), misc (ry: 0.15, z: 0.32), dt: 0.80, eta: 3.9h
[INFO]: 2024-04-24 18:42:46,131 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0645, cls: 0.0253, iou: 0.0803), misc (ry: 0.16, z: 0.34), dt: 0.80, eta: 3.8h
[INFO]: 2024-04-24 18:45:54,839 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0776, cls: 0.0265, iou: 0.0854), misc (ry: 0.17, z: 0.38), dt: 0.80, eta: 3.7h
[INFO]: 2024-04-24 18:48:59,689 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0667, cls: 0.0270, iou: 0.0830), misc (ry: 0.15, z: 0.33), dt: 0.80, eta: 3.7h
[INFO]: 2024-04-24 18:52:02,879 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0627, cls: 0.0252, iou: 0.0794), misc (ry: 0.15, z: 0.33), dt: 0.80, eta: 3.6h
[INFO]: 2024-04-24 18:55:07,119 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0607, cls: 0.0263, iou: 0.0802), misc (ry: 0.15, z: 0.31), dt: 0.80, eta: 3.6h
[INFO]: 2024-04-24 18:58:16,219 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0762, cls: 0.0272, iou: 0.0821), misc (ry: 0.16, z: 0.31), dt: 0.80, eta: 3.5h
[INFO]: 2024-04-24 19:01:20,439 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0603, cls: 0.0249, iou: 0.0781), misc (ry: 0.15, z: 0.31), dt: 0.80, eta: 3.5h
[INFO]: 2024-04-24 19:04:28,094 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0242, iou: 0.0773), misc (ry: 0.14, z: 0.31), dt: 0.80, eta: 3.4h
[INFO]: 2024-04-24 19:07:37,016 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0702, cls: 0.0262, iou: 0.0798), misc (ry: 0.17, z: 0.35), dt: 0.80, eta: 3.3h
[INFO]: 2024-04-24 19:10:44,666 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0591, cls: 0.0251, iou: 0.0781), misc (ry: 0.14, z: 0.32), dt: 0.80, eta: 3.3h
[INFO]: 2024-04-24 19:13:50,493 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0556, cls: 0.0254, iou: 0.0765), misc (ry: 0.14, z: 0.30), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-24 19:16:56,412 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0594, cls: 0.0246, iou: 0.0767), misc (ry: 0.14, z: 0.32), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-24 19:20:02,264 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0582, cls: 0.0241, iou: 0.0768), misc (ry: 0.13, z: 0.33), dt: 0.80, eta: 3.1h
[INFO]: 2024-04-24 19:23:10,270 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0562, cls: 0.0253, iou: 0.0738), misc (ry: 0.13, z: 0.30), dt: 0.80, eta: 3.1h
[INFO]: 2024-04-24 19:26:14,482 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0246, iou: 0.0736), misc (ry: 0.14, z: 0.30), dt: 0.80, eta: 3.0h
[INFO]: 2024-04-24 19:29:24,464 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0534, cls: 0.0241, iou: 0.0728), misc (ry: 0.13, z: 0.28), dt: 0.80, eta: 2.9h
[INFO]: 2024-04-24 19:32:30,168 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0553, cls: 0.0224, iou: 0.0743), misc (ry: 0.14, z: 0.31), dt: 0.80, eta: 2.9h
[INFO]: 2024-04-24 19:35:39,055 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0254, iou: 0.0737), misc (ry: 0.14, z: 0.30), dt: 0.80, eta: 2.8h
[INFO]: 2024-04-24 19:38:46,326 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0507, cls: 0.0240, iou: 0.0735), misc (ry: 0.13, z: 0.29), dt: 0.80, eta: 2.8h
[INFO]: 2024-04-24 19:41:54,809 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0494, cls: 0.0233, iou: 0.0706), misc (ry: 0.12, z: 0.29), dt: 0.80, eta: 2.7h
[INFO]: 2024-04-24 19:45:02,505 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0479, cls: 0.0226, iou: 0.0692), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 2.7h
[INFO]: 2024-04-24 19:48:11,226 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0540, cls: 0.0245, iou: 0.0706), misc (ry: 0.14, z: 0.28), dt: 0.80, eta: 2.6h
[INFO]: 2024-04-24 19:51:19,705 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0575, cls: 0.0219, iou: 0.0719), misc (ry: 0.13, z: 0.37), dt: 0.80, eta: 2.5h
[INFO]: 2024-04-24 19:54:29,801 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0490, cls: 0.0231, iou: 0.0687), misc (ry: 0.12, z: 0.29), dt: 0.80, eta: 2.5h
[INFO]: 2024-04-24 19:57:39,153 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0223, iou: 0.0677), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 2.4h
[INFO]: 2024-04-24 20:00:46,531 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0476, cls: 0.0227, iou: 0.0689), misc (ry: 0.13, z: 0.28), dt: 0.80, eta: 2.4h
[INFO]: 2024-04-24 20:03:51,210 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0460, cls: 0.0227, iou: 0.0684), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 2.3h
[INFO]: 2024-04-24 20:06:58,627 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0435, cls: 0.0224, iou: 0.0647), misc (ry: 0.12, z: 0.26), dt: 0.79, eta: 2.3h
[INFO]: 2024-04-24 20:10:01,578 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0467, cls: 0.0222, iou: 0.0670), misc (ry: 0.12, z: 0.28), dt: 0.79, eta: 2.2h
[INFO]: 2024-04-24 20:20:31,638 test_iter 40000 2d car --> easy: 0.9527, mod: 0.8845, hard: 0.7956
[INFO]: 2024-04-24 20:20:31,639 test_iter 40000 gr car --> easy: 0.5197, mod: 0.4012, hard: 0.3379
[INFO]: 2024-04-24 20:20:31,640 test_iter 40000 3d car --> easy: 0.4489, mod: 0.3366, hard: 0.2761
[INFO]: 2024-04-24 20:20:31,640 test_iter 40000 2d pedestrian --> easy: 0.6643, mod: 0.5848, hard: 0.5027
[INFO]: 2024-04-24 20:20:31,641 test_iter 40000 gr pedestrian --> easy: 0.1109, mod: 0.1108, hard: 0.1053
[INFO]: 2024-04-24 20:20:31,641 test_iter 40000 3d pedestrian --> easy: 0.1082, mod: 0.1070, hard: 0.1021
[INFO]: 2024-04-24 20:20:31,642 test_iter 40000 2d cyclist --> easy: 0.6540, mod: 0.4671, hard: 0.4083
[INFO]: 2024-04-24 20:20:31,643 test_iter 40000 gr cyclist --> easy: 0.0302, mod: 0.0234, hard: 0.0237
[INFO]: 2024-04-24 20:20:31,643 test_iter 40000 3d cyclist --> easy: 0.0283, mod: 0.0226, hard: 0.0229
[INFO]: 2024-04-24 20:23:40,349 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0519, cls: 0.0240, iou: 0.0704), misc (ry: 0.13, z: 0.28), dt: 0.81, eta: 2.2h
[INFO]: 2024-04-24 20:26:46,803 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0228, iou: 0.0657), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-24 20:29:55,258 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0459, cls: 0.0238, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-24 20:33:02,772 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0230, iou: 0.0673), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 2.0h
[INFO]: 2024-04-24 20:36:10,599 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0422, cls: 0.0228, iou: 0.0635), misc (ry: 0.12, z: 0.25), dt: 0.81, eta: 2.0h
[INFO]: 2024-04-24 20:39:17,795 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0444, cls: 0.0225, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 1.9h
[INFO]: 2024-04-24 20:42:22,752 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0453, cls: 0.0240, iou: 0.0662), misc (ry: 0.12, z: 0.25), dt: 0.81, eta: 1.9h
[INFO]: 2024-04-24 20:45:27,562 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0409, cls: 0.0222, iou: 0.0626), misc (ry: 0.12, z: 0.25), dt: 0.81, eta: 1.8h
[INFO]: 2024-04-24 20:48:36,262 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0221, iou: 0.0631), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 1.7h
[INFO]: 2024-04-24 20:51:44,560 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0397, cls: 0.0227, iou: 0.0609), misc (ry: 0.12, z: 0.23), dt: 0.81, eta: 1.7h
[INFO]: 2024-04-24 20:54:52,751 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0415, cls: 0.0242, iou: 0.0644), misc (ry: 0.12, z: 0.24), dt: 0.81, eta: 1.6h
[INFO]: 2024-04-24 20:57:59,196 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0379, cls: 0.0215, iou: 0.0600), misc (ry: 0.11, z: 0.24), dt: 0.81, eta: 1.6h
[INFO]: 2024-04-24 21:01:06,339 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0451, cls: 0.0231, iou: 0.0632), misc (ry: 0.12, z: 0.26), dt: 0.81, eta: 1.5h
[INFO]: 2024-04-24 21:04:09,560 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0352, cls: 0.0210, iou: 0.0580), misc (ry: 0.11, z: 0.24), dt: 0.81, eta: 1.5h
[INFO]: 2024-04-24 21:07:18,826 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0365, cls: 0.0210, iou: 0.0576), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.4h
[INFO]: 2024-04-24 21:10:30,580 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0385, cls: 0.0220, iou: 0.0592), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.3h
[INFO]: 2024-04-24 21:13:34,514 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0342, cls: 0.0208, iou: 0.0576), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 1.3h
[INFO]: 2024-04-24 21:16:40,366 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0360, cls: 0.0211, iou: 0.0572), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.2h
[INFO]: 2024-04-24 21:19:47,322 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0371, cls: 0.0215, iou: 0.0574), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 1.2h
[INFO]: 2024-04-24 21:22:53,004 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0355, cls: 0.0214, iou: 0.0570), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.1h
[INFO]: 2024-04-24 21:25:56,672 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0388, cls: 0.0222, iou: 0.0590), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.1h
[INFO]: 2024-04-24 21:29:03,138 iter: 45500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0349, cls: 0.0202, iou: 0.0565), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.0h
[INFO]: 2024-04-24 21:32:10,156 iter: 45750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0333, cls: 0.0201, iou: 0.0541), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 56.8m
[INFO]: 2024-04-24 21:35:16,996 iter: 46000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0321, cls: 0.0193, iou: 0.0531), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 53.5m
[INFO]: 2024-04-24 21:38:20,762 iter: 46250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0198, iou: 0.0545), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 50.1m
[INFO]: 2024-04-24 21:41:27,168 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0341, cls: 0.0209, iou: 0.0543), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 46.8m
[INFO]: 2024-04-24 21:44:36,164 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0205, iou: 0.0547), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 43.4m
[INFO]: 2024-04-24 21:47:45,258 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0202, iou: 0.0517), misc (ry: 0.09, z: 0.21), dt: 0.80, eta: 40.1m
[INFO]: 2024-04-24 21:50:49,603 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0325, cls: 0.0209, iou: 0.0536), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 36.7m
[INFO]: 2024-04-24 21:53:55,599 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0345, cls: 0.0205, iou: 0.0533), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 33.4m
[INFO]: 2024-04-24 21:57:03,020 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0203, iou: 0.0548), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 30.0m
[INFO]: 2024-04-24 22:00:08,752 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0204, iou: 0.0527), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 26.7m
[INFO]: 2024-04-24 22:03:13,467 iter: 48250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0201, iou: 0.0510), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 23.3m
[INFO]: 2024-04-24 22:06:20,452 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0209, iou: 0.0513), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 20.0m
[INFO]: 2024-04-24 22:09:28,639 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0214, iou: 0.0522), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 16.7m
[INFO]: 2024-04-24 22:12:35,837 iter: 49000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0285, cls: 0.0197, iou: 0.0481), misc (ry: 0.10, z: 0.20), dt: 0.80, eta: 13.3m
[INFO]: 2024-04-24 22:15:39,864 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0338, cls: 0.0209, iou: 0.0531), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 10.0m
[INFO]: 2024-04-24 22:18:46,322 iter: 49500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0257, cls: 0.0181, iou: 0.0466), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 6.7m
[INFO]: 2024-04-24 22:21:53,789 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0332, cls: 0.0207, iou: 0.0506), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 3.3m
[INFO]: 2024-04-24 22:25:02,925 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0324, cls: 0.0202, iou: 0.0512), misc (ry: 0.11, z: 0.21), dt: 0.80, eta: 0.8s
[INFO]: 2024-04-24 22:35:32,463 test_iter 50000 2d car --> easy: 0.9550, mod: 0.8859, hard: 0.7955
[INFO]: 2024-04-24 22:35:32,464 test_iter 50000 gr car --> easy: 0.5325, mod: 0.4089, hard: 0.3414
[INFO]: 2024-04-24 22:35:32,465 test_iter 50000 3d car --> easy: 0.4660, mod: 0.3506, hard: 0.2861
[INFO]: 2024-04-24 22:35:32,466 test_iter 50000 2d pedestrian --> easy: 0.6547, mod: 0.5777, hard: 0.4974
[INFO]: 2024-04-24 22:35:32,466 test_iter 50000 gr pedestrian --> easy: 0.1140, mod: 0.1140, hard: 0.1122
[INFO]: 2024-04-24 22:35:32,467 test_iter 50000 3d pedestrian --> easy: 0.1122, mod: 0.1109, hard: 0.1033
[INFO]: 2024-04-24 22:35:32,468 test_iter 50000 2d cyclist --> easy: 0.6528, mod: 0.4093, hard: 0.4052
[INFO]: 2024-04-24 22:35:32,468 test_iter 50000 gr cyclist --> easy: 0.0634, mod: 0.0428, hard: 0.0428
[INFO]: 2024-04-24 22:35:32,469 test_iter 50000 3d cyclist --> easy: 0.0426, mod: 0.0336, hard: 0.0338
