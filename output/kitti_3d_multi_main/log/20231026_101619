[INFO]: 2023-10-26 10:16:19,723 Preloading imdb.
[INFO]: 2023-10-26 10:16:20,989 weighted respectively as 1.05 and 0.00
[INFO]: 2023-10-26 10:16:20,989 Found 3534 foreground and 178 empty images
[INFO]: 2023-10-26 10:16:23,409 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-10-26 10:16:23,413 conf: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000_pkl'
}
[INFO]: 2023-10-26 10:16:24,003 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): SiLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): SiLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): SiLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): SiLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): SiLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): SiLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-10-26 10:19:00,597 iter: 250, acc (bg: 0.99, fg: 0.42, iou: 0.62), loss (bbox_3d: 2.3713, cls: 0.7714, iou: 0.4868), misc (ry: 1.49, z: 2.66), dt: 0.63, eta: 8.7h
[INFO]: 2023-10-26 10:21:37,960 iter: 500, acc (bg: 0.99, fg: 0.61, iou: 0.67), loss (bbox_3d: 1.7794, cls: 0.4328, iou: 0.4123), misc (ry: 1.33, z: 2.19), dt: 0.63, eta: 8.6h
[INFO]: 2023-10-26 10:24:13,898 iter: 750, acc (bg: 0.99, fg: 0.69, iou: 0.70), loss (bbox_3d: 1.6106, cls: 0.3434, iou: 0.3762), misc (ry: 1.34, z: 1.85), dt: 0.63, eta: 8.6h
[INFO]: 2023-10-26 10:26:49,442 iter: 1000, acc (bg: 0.99, fg: 0.75, iou: 0.71), loss (bbox_3d: 1.3661, cls: 0.2846, iou: 0.3484), misc (ry: 1.24, z: 1.67), dt: 0.63, eta: 8.5h
[INFO]: 2023-10-26 10:29:26,189 iter: 1250, acc (bg: 0.99, fg: 0.77, iou: 0.72), loss (bbox_3d: 1.2901, cls: 0.2689, iou: 0.3354), misc (ry: 1.22, z: 1.59), dt: 0.63, eta: 8.5h
[INFO]: 2023-10-26 10:32:03,084 iter: 1500, acc (bg: 0.99, fg: 0.78, iou: 0.73), loss (bbox_3d: 1.2242, cls: 0.2472, iou: 0.3253), misc (ry: 1.15, z: 1.56), dt: 0.63, eta: 8.4h
[INFO]: 2023-10-26 10:34:37,876 iter: 1750, acc (bg: 0.99, fg: 0.82, iou: 0.75), loss (bbox_3d: 1.1071, cls: 0.2066, iou: 0.2997), misc (ry: 1.09, z: 1.42), dt: 0.63, eta: 8.4h
[INFO]: 2023-10-26 10:37:15,566 iter: 2000, acc (bg: 0.99, fg: 0.79, iou: 0.74), loss (bbox_3d: 1.1490, cls: 0.2263, iou: 0.3099), misc (ry: 1.16, z: 1.46), dt: 0.63, eta: 8.3h
[INFO]: 2023-10-26 10:39:51,404 iter: 2250, acc (bg: 0.99, fg: 0.82, iou: 0.75), loss (bbox_3d: 1.0193, cls: 0.2133, iou: 0.2969), misc (ry: 1.05, z: 1.34), dt: 0.63, eta: 8.3h
[INFO]: 2023-10-26 10:42:28,730 iter: 2500, acc (bg: 0.99, fg: 0.84, iou: 0.76), loss (bbox_3d: 0.9804, cls: 0.1931, iou: 0.2828), misc (ry: 1.05, z: 1.26), dt: 0.63, eta: 8.3h
[INFO]: 2023-10-26 10:45:03,404 iter: 2750, acc (bg: 1.00, fg: 0.86, iou: 0.77), loss (bbox_3d: 0.9133, cls: 0.1681, iou: 0.2681), misc (ry: 0.96, z: 1.18), dt: 0.63, eta: 8.2h
[INFO]: 2023-10-26 10:47:39,543 iter: 3000, acc (bg: 1.00, fg: 0.84, iou: 0.77), loss (bbox_3d: 0.9517, cls: 0.1861, iou: 0.2769), misc (ry: 0.94, z: 1.26), dt: 0.63, eta: 8.2h
[INFO]: 2023-10-26 10:50:16,099 iter: 3250, acc (bg: 1.00, fg: 0.85, iou: 0.77), loss (bbox_3d: 0.8866, cls: 0.1705, iou: 0.2724), misc (ry: 0.88, z: 1.23), dt: 0.63, eta: 8.1h
[INFO]: 2023-10-26 10:52:52,459 iter: 3500, acc (bg: 1.00, fg: 0.85, iou: 0.77), loss (bbox_3d: 0.8848, cls: 0.1818, iou: 0.2663), misc (ry: 0.92, z: 1.16), dt: 0.63, eta: 8.1h
[INFO]: 2023-10-26 10:55:27,698 iter: 3750, acc (bg: 1.00, fg: 0.87, iou: 0.78), loss (bbox_3d: 0.8578, cls: 0.1527, iou: 0.2556), misc (ry: 0.91, z: 1.22), dt: 0.63, eta: 8.0h
[INFO]: 2023-10-26 10:58:03,385 iter: 4000, acc (bg: 1.00, fg: 0.85, iou: 0.78), loss (bbox_3d: 0.8614, cls: 0.1700, iou: 0.2590), misc (ry: 0.85, z: 1.24), dt: 0.62, eta: 8.0h
[INFO]: 2023-10-26 11:00:38,488 iter: 4250, acc (bg: 1.00, fg: 0.87, iou: 0.79), loss (bbox_3d: 0.7766, cls: 0.1569, iou: 0.2479), misc (ry: 0.83, z: 1.10), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-26 11:03:14,101 iter: 4500, acc (bg: 1.00, fg: 0.86, iou: 0.79), loss (bbox_3d: 0.7998, cls: 0.1577, iou: 0.2500), misc (ry: 0.87, z: 1.08), dt: 0.62, eta: 7.9h
[INFO]: 2023-10-26 11:05:47,597 iter: 4750, acc (bg: 1.00, fg: 0.87, iou: 0.79), loss (bbox_3d: 0.7958, cls: 0.1519, iou: 0.2474), misc (ry: 0.83, z: 1.18), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 11:08:25,233 iter: 5000, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7374, cls: 0.1438, iou: 0.2429), misc (ry: 0.80, z: 1.02), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 11:11:00,304 iter: 5250, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7496, cls: 0.1382, iou: 0.2401), misc (ry: 0.85, z: 1.03), dt: 0.62, eta: 7.8h
[INFO]: 2023-10-26 11:13:35,049 iter: 5500, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7387, cls: 0.1453, iou: 0.2385), misc (ry: 0.79, z: 1.06), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-26 11:16:11,570 iter: 5750, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6710, cls: 0.1363, iou: 0.2256), misc (ry: 0.75, z: 0.95), dt: 0.62, eta: 7.7h
[INFO]: 2023-10-26 11:18:49,169 iter: 6000, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6916, cls: 0.1338, iou: 0.2271), misc (ry: 0.75, z: 1.04), dt: 0.62, eta: 7.6h
[INFO]: 2023-10-26 11:21:25,492 iter: 6250, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6254, cls: 0.1195, iou: 0.2196), misc (ry: 0.70, z: 0.97), dt: 0.62, eta: 7.6h
[INFO]: 2023-10-26 11:24:03,968 iter: 6500, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6610, cls: 0.1347, iou: 0.2293), misc (ry: 0.70, z: 1.04), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 11:26:39,836 iter: 6750, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6895, cls: 0.1285, iou: 0.2260), misc (ry: 0.77, z: 1.01), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 11:29:16,179 iter: 7000, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6516, cls: 0.1144, iou: 0.2211), misc (ry: 0.75, z: 0.93), dt: 0.62, eta: 7.5h
[INFO]: 2023-10-26 11:31:52,572 iter: 7250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6302, cls: 0.1178, iou: 0.2139), misc (ry: 0.77, z: 0.85), dt: 0.62, eta: 7.4h
[INFO]: 2023-10-26 11:34:30,166 iter: 7500, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6940, cls: 0.1354, iou: 0.2253), misc (ry: 0.74, z: 1.01), dt: 0.62, eta: 7.4h
[INFO]: 2023-10-26 11:37:05,133 iter: 7750, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6591, cls: 0.1253, iou: 0.2201), misc (ry: 0.74, z: 0.96), dt: 0.62, eta: 7.3h
[INFO]: 2023-10-26 11:39:41,141 iter: 8000, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6224, cls: 0.1220, iou: 0.2121), misc (ry: 0.76, z: 0.87), dt: 0.62, eta: 7.3h
[INFO]: 2023-10-26 11:42:16,093 iter: 8250, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5981, cls: 0.1084, iou: 0.2083), misc (ry: 0.67, z: 0.95), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 11:44:51,208 iter: 8500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5580, cls: 0.0990, iou: 0.1972), misc (ry: 0.66, z: 0.91), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 11:47:26,923 iter: 8750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5795, cls: 0.1072, iou: 0.2090), misc (ry: 0.72, z: 0.85), dt: 0.62, eta: 7.2h
[INFO]: 2023-10-26 11:50:04,116 iter: 9000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5502, cls: 0.1037, iou: 0.2025), misc (ry: 0.61, z: 0.90), dt: 0.62, eta: 7.1h
[INFO]: 2023-10-26 11:52:43,077 iter: 9250, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5545, cls: 0.1043, iou: 0.1981), misc (ry: 0.70, z: 0.83), dt: 0.62, eta: 7.1h
[INFO]: 2023-10-26 11:55:17,713 iter: 9500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5835, cls: 0.1033, iou: 0.2046), misc (ry: 0.71, z: 0.91), dt: 0.62, eta: 7.0h
[INFO]: 2023-10-26 11:57:52,405 iter: 9750, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5865, cls: 0.1132, iou: 0.2063), misc (ry: 0.68, z: 0.88), dt: 0.62, eta: 7.0h
[INFO]: 2023-10-26 12:00:28,935 iter: 10000, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5471, cls: 0.1106, iou: 0.2007), misc (ry: 0.64, z: 0.85), dt: 0.62, eta: 6.9h
[INFO]: 2023-10-26 12:03:04,324 testing 1000/3769, dt: 0.151, eta: 6.9m
[INFO]: 2023-10-26 12:05:34,733 testing 2000/3769, dt: 0.150, eta: 4.4m
[INFO]: 2023-10-26 12:08:05,057 testing 3000/3769, dt: 0.150, eta: 1.9m
[INFO]: 2023-10-26 12:10:10,532 test_iter 10000 2d car --> easy: 0.8047, mod: 0.6814, hard: 0.5490
[INFO]: 2023-10-26 12:10:10,533 test_iter 10000 gr car --> easy: 0.0994, mod: 0.1172, hard: 0.1101
[INFO]: 2023-10-26 12:10:10,533 test_iter 10000 3d car --> easy: 0.0533, mod: 0.0999, hard: 0.0960
[INFO]: 2023-10-26 12:10:10,534 test_iter 10000 2d pedestrian --> easy: 0.4638, mod: 0.3927, hard: 0.3763
[INFO]: 2023-10-26 12:10:10,534 test_iter 10000 gr pedestrian --> easy: 0.0909, mod: 0.0909, hard: 0.0909
[INFO]: 2023-10-26 12:10:10,535 test_iter 10000 3d pedestrian --> easy: 0.0909, mod: 0.0909, hard: 0.0909
[INFO]: 2023-10-26 12:10:10,535 test_iter 10000 2d cyclist --> easy: 0.2011, mod: 0.1226, hard: 0.1172
[INFO]: 2023-10-26 12:10:10,536 test_iter 10000 gr cyclist --> easy: 0.0032, mod: 0.0032, hard: 0.0032
[INFO]: 2023-10-26 12:10:10,536 test_iter 10000 3d cyclist --> easy: 0.0032, mod: 0.0032, hard: 0.0032
[INFO]: 2023-10-26 12:12:44,294 iter: 10250, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5349, cls: 0.0992, iou: 0.1917), misc (ry: 0.64, z: 0.85), dt: 0.68, eta: 7.5h
[INFO]: 2023-10-26 12:15:20,996 iter: 10500, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5354, cls: 0.1147, iou: 0.1951), misc (ry: 0.63, z: 0.83), dt: 0.68, eta: 7.5h
[INFO]: 2023-10-26 12:17:56,773 iter: 10750, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.5858, cls: 0.1143, iou: 0.2102), misc (ry: 0.68, z: 0.91), dt: 0.68, eta: 7.4h
[INFO]: 2023-10-26 12:20:34,111 iter: 11000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.4922, cls: 0.1041, iou: 0.1930), misc (ry: 0.60, z: 0.87), dt: 0.68, eta: 7.3h
[INFO]: 2023-10-26 12:23:07,028 iter: 11250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5657, cls: 0.0981, iou: 0.1948), misc (ry: 0.72, z: 0.82), dt: 0.68, eta: 7.3h
[INFO]: 2023-10-26 12:25:43,744 iter: 11500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.4651, cls: 0.0975, iou: 0.1871), misc (ry: 0.54, z: 0.81), dt: 0.67, eta: 7.2h
[INFO]: 2023-10-26 12:28:18,364 iter: 11750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.4859, cls: 0.0977, iou: 0.1890), misc (ry: 0.58, z: 0.79), dt: 0.67, eta: 7.2h
[INFO]: 2023-10-26 12:30:51,418 iter: 12000, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4783, cls: 0.0889, iou: 0.1848), misc (ry: 0.59, z: 0.79), dt: 0.67, eta: 7.1h
[INFO]: 2023-10-26 12:33:24,217 iter: 12250, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.4742, cls: 0.1017, iou: 0.1852), misc (ry: 0.54, z: 0.82), dt: 0.67, eta: 7.0h
[INFO]: 2023-10-26 12:35:59,612 iter: 12500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4682, cls: 0.0934, iou: 0.1803), misc (ry: 0.56, z: 0.76), dt: 0.67, eta: 7.0h
[INFO]: 2023-10-26 12:38:36,258 iter: 12750, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4608, cls: 0.0923, iou: 0.1777), misc (ry: 0.58, z: 0.77), dt: 0.67, eta: 6.9h
[INFO]: 2023-10-26 12:41:13,228 iter: 13000, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.4516, cls: 0.0970, iou: 0.1826), misc (ry: 0.59, z: 0.76), dt: 0.67, eta: 6.9h
[INFO]: 2023-10-26 12:43:48,767 iter: 13250, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4930, cls: 0.0932, iou: 0.1850), misc (ry: 0.58, z: 0.82), dt: 0.67, eta: 6.8h
[INFO]: 2023-10-26 12:46:21,877 iter: 13500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4525, cls: 0.0892, iou: 0.1839), misc (ry: 0.58, z: 0.77), dt: 0.67, eta: 6.8h
[INFO]: 2023-10-26 12:48:55,761 iter: 13750, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4315, cls: 0.0895, iou: 0.1753), misc (ry: 0.55, z: 0.74), dt: 0.67, eta: 6.7h
[INFO]: 2023-10-26 12:51:32,736 iter: 14000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4289, cls: 0.0839, iou: 0.1756), misc (ry: 0.57, z: 0.71), dt: 0.66, eta: 6.6h
[INFO]: 2023-10-26 12:54:05,714 iter: 14250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4182, cls: 0.0830, iou: 0.1777), misc (ry: 0.53, z: 0.76), dt: 0.66, eta: 6.6h
[INFO]: 2023-10-26 12:56:40,843 iter: 14500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4408, cls: 0.0840, iou: 0.1776), misc (ry: 0.50, z: 0.84), dt: 0.66, eta: 6.5h
[INFO]: 2023-10-26 12:59:17,784 iter: 14750, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.4849, cls: 0.1021, iou: 0.1828), misc (ry: 0.58, z: 0.81), dt: 0.66, eta: 6.5h
[INFO]: 2023-10-26 13:01:53,989 iter: 15000, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4480, cls: 0.0935, iou: 0.1808), misc (ry: 0.53, z: 0.75), dt: 0.66, eta: 6.4h
[INFO]: 2023-10-26 13:04:27,506 iter: 15250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4311, cls: 0.0833, iou: 0.1742), misc (ry: 0.54, z: 0.81), dt: 0.66, eta: 6.4h
[INFO]: 2023-10-26 13:07:03,305 iter: 15500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4174, cls: 0.0828, iou: 0.1649), misc (ry: 0.54, z: 0.71), dt: 0.66, eta: 6.3h
[INFO]: 2023-10-26 13:09:37,818 iter: 15750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4507, cls: 0.0842, iou: 0.1787), misc (ry: 0.54, z: 0.76), dt: 0.66, eta: 6.3h
[INFO]: 2023-10-26 13:12:11,395 iter: 16000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4042, cls: 0.0803, iou: 0.1706), misc (ry: 0.52, z: 0.74), dt: 0.66, eta: 6.2h
[INFO]: 2023-10-26 13:14:44,055 iter: 16250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4013, cls: 0.0818, iou: 0.1736), misc (ry: 0.51, z: 0.72), dt: 0.66, eta: 6.2h
[INFO]: 2023-10-26 13:17:17,751 iter: 16500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4131, cls: 0.0829, iou: 0.1734), misc (ry: 0.55, z: 0.75), dt: 0.66, eta: 6.1h
[INFO]: 2023-10-26 13:19:54,068 iter: 16750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4285, cls: 0.0864, iou: 0.1751), misc (ry: 0.54, z: 0.74), dt: 0.66, eta: 6.1h
[INFO]: 2023-10-26 13:22:28,869 iter: 17000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4082, cls: 0.0879, iou: 0.1746), misc (ry: 0.51, z: 0.68), dt: 0.66, eta: 6.0h
[INFO]: 2023-10-26 13:25:04,344 iter: 17250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3907, cls: 0.0829, iou: 0.1669), misc (ry: 0.48, z: 0.74), dt: 0.66, eta: 6.0h
[INFO]: 2023-10-26 13:27:40,769 iter: 17500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3630, cls: 0.0769, iou: 0.1611), misc (ry: 0.44, z: 0.71), dt: 0.66, eta: 5.9h
[INFO]: 2023-10-26 13:30:17,673 iter: 17750, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4048, cls: 0.0857, iou: 0.1722), misc (ry: 0.48, z: 0.71), dt: 0.66, eta: 5.9h
[INFO]: 2023-10-26 13:32:52,464 iter: 18000, acc (bg: 1.00, fg: 0.93, iou: 0.85), loss (bbox_3d: 0.3787, cls: 0.0881, iou: 0.1717), misc (ry: 0.47, z: 0.68), dt: 0.65, eta: 5.8h
[INFO]: 2023-10-26 13:35:29,080 iter: 18250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3815, cls: 0.0841, iou: 0.1735), misc (ry: 0.50, z: 0.69), dt: 0.65, eta: 5.8h
[INFO]: 2023-10-26 13:38:03,745 iter: 18500, acc (bg: 1.00, fg: 0.93, iou: 0.85), loss (bbox_3d: 0.4242, cls: 0.0886, iou: 0.1721), misc (ry: 0.56, z: 0.71), dt: 0.65, eta: 5.7h
[INFO]: 2023-10-26 13:40:39,808 iter: 18750, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3937, cls: 0.0809, iou: 0.1675), misc (ry: 0.51, z: 0.69), dt: 0.65, eta: 5.7h
[INFO]: 2023-10-26 13:43:16,193 iter: 19000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3868, cls: 0.0830, iou: 0.1638), misc (ry: 0.53, z: 0.67), dt: 0.65, eta: 5.6h
[INFO]: 2023-10-26 13:45:51,043 iter: 19250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3673, cls: 0.0854, iou: 0.1668), misc (ry: 0.48, z: 0.72), dt: 0.65, eta: 5.6h
[INFO]: 2023-10-26 13:48:26,547 iter: 19500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3744, cls: 0.0792, iou: 0.1616), misc (ry: 0.48, z: 0.67), dt: 0.65, eta: 5.5h
[INFO]: 2023-10-26 13:51:02,897 iter: 19750, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3719, cls: 0.0811, iou: 0.1638), misc (ry: 0.48, z: 0.65), dt: 0.65, eta: 5.5h
[INFO]: 2023-10-26 13:53:36,809 iter: 20000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3418, cls: 0.0725, iou: 0.1577), misc (ry: 0.49, z: 0.66), dt: 0.65, eta: 5.4h
[INFO]: 2023-10-26 13:56:12,244 testing 1000/3769, dt: 0.151, eta: 7.0m
[INFO]: 2023-10-26 13:58:43,832 testing 2000/3769, dt: 0.151, eta: 4.5m
[INFO]: 2023-10-26 14:01:14,758 testing 3000/3769, dt: 0.151, eta: 1.9m
[INFO]: 2023-10-26 14:03:20,107 test_iter 20000 2d car --> easy: 0.8108, mod: 0.7352, hard: 0.6412
[INFO]: 2023-10-26 14:03:20,109 test_iter 20000 gr car --> easy: 0.1384, mod: 0.1167, hard: 0.1124
[INFO]: 2023-10-26 14:03:20,110 test_iter 20000 3d car --> easy: 0.1162, mod: 0.1048, hard: 0.0963
[INFO]: 2023-10-26 14:03:20,110 test_iter 20000 2d pedestrian --> easy: 0.5897, mod: 0.4707, hard: 0.3962
[INFO]: 2023-10-26 14:03:20,111 test_iter 20000 gr pedestrian --> easy: 0.1076, mod: 0.1006, hard: 0.1008
[INFO]: 2023-10-26 14:03:20,111 test_iter 20000 3d pedestrian --> easy: 0.1022, mod: 0.0992, hard: 0.0909
[INFO]: 2023-10-26 14:03:20,112 test_iter 20000 2d cyclist --> easy: 0.1864, mod: 0.1465, hard: 0.1175
[INFO]: 2023-10-26 14:03:20,113 test_iter 20000 gr cyclist --> easy: 0.0087, mod: 0.0043, hard: 0.0043
[INFO]: 2023-10-26 14:03:20,113 test_iter 20000 3d cyclist --> easy: 0.0068, mod: 0.0043, hard: 0.0043
[INFO]: 2023-10-26 14:05:55,493 iter: 20250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3691, cls: 0.0808, iou: 0.1657), misc (ry: 0.50, z: 0.63), dt: 0.68, eta: 5.6h
[INFO]: 2023-10-26 14:08:29,988 iter: 20500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3352, cls: 0.0730, iou: 0.1570), misc (ry: 0.48, z: 0.67), dt: 0.68, eta: 5.6h
[INFO]: 2023-10-26 14:11:04,488 iter: 20750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3415, cls: 0.0743, iou: 0.1589), misc (ry: 0.47, z: 0.63), dt: 0.68, eta: 5.5h
[INFO]: 2023-10-26 14:13:40,346 iter: 21000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3524, cls: 0.0776, iou: 0.1581), misc (ry: 0.48, z: 0.68), dt: 0.68, eta: 5.5h
[INFO]: 2023-10-26 14:16:14,999 iter: 21250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3498, cls: 0.0831, iou: 0.1629), misc (ry: 0.44, z: 0.72), dt: 0.68, eta: 5.4h
[INFO]: 2023-10-26 14:18:47,644 iter: 21500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3416, cls: 0.0748, iou: 0.1598), misc (ry: 0.46, z: 0.68), dt: 0.68, eta: 5.4h
[INFO]: 2023-10-26 14:21:20,534 iter: 21750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3440, cls: 0.0745, iou: 0.1607), misc (ry: 0.50, z: 0.62), dt: 0.68, eta: 5.3h
[INFO]: 2023-10-26 14:23:54,209 iter: 22000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3301, cls: 0.0724, iou: 0.1552), misc (ry: 0.45, z: 0.60), dt: 0.68, eta: 5.3h
[INFO]: 2023-10-26 14:26:27,970 iter: 22250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3661, cls: 0.0803, iou: 0.1642), misc (ry: 0.53, z: 0.62), dt: 0.67, eta: 5.2h
[INFO]: 2023-10-26 14:29:03,732 iter: 22500, acc (bg: 1.00, fg: 0.94, iou: 0.86), loss (bbox_3d: 0.3357, cls: 0.0781, iou: 0.1582), misc (ry: 0.44, z: 0.68), dt: 0.67, eta: 5.1h
[INFO]: 2023-10-26 14:31:39,453 iter: 22750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3060, cls: 0.0730, iou: 0.1557), misc (ry: 0.41, z: 0.63), dt: 0.67, eta: 5.1h
[INFO]: 2023-10-26 14:34:13,843 iter: 23000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3206, cls: 0.0715, iou: 0.1548), misc (ry: 0.42, z: 0.67), dt: 0.67, eta: 5.0h
[INFO]: 2023-10-26 14:36:50,194 iter: 23250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3344, cls: 0.0711, iou: 0.1566), misc (ry: 0.47, z: 0.65), dt: 0.67, eta: 5.0h
[INFO]: 2023-10-26 14:39:24,842 iter: 23500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3153, cls: 0.0708, iou: 0.1528), misc (ry: 0.45, z: 0.62), dt: 0.67, eta: 4.9h
[INFO]: 2023-10-26 14:42:00,431 iter: 23750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3264, cls: 0.0745, iou: 0.1574), misc (ry: 0.39, z: 0.65), dt: 0.67, eta: 4.9h
[INFO]: 2023-10-26 14:44:33,790 iter: 24000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3154, cls: 0.0721, iou: 0.1564), misc (ry: 0.42, z: 0.67), dt: 0.67, eta: 4.8h
[INFO]: 2023-10-26 14:47:07,222 iter: 24250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3231, cls: 0.0710, iou: 0.1510), misc (ry: 0.44, z: 0.63), dt: 0.67, eta: 4.8h
[INFO]: 2023-10-26 14:49:43,346 iter: 24500, acc (bg: 1.00, fg: 0.94, iou: 0.86), loss (bbox_3d: 0.3229, cls: 0.0804, iou: 0.1537), misc (ry: 0.42, z: 0.61), dt: 0.67, eta: 4.7h
[INFO]: 2023-10-26 14:52:21,086 iter: 24750, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.2957, cls: 0.0732, iou: 0.1467), misc (ry: 0.43, z: 0.57), dt: 0.67, eta: 4.7h
[INFO]: 2023-10-26 14:54:57,198 iter: 25000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2917, cls: 0.0689, iou: 0.1497), misc (ry: 0.39, z: 0.58), dt: 0.67, eta: 4.6h
[INFO]: 2023-10-26 14:57:31,863 iter: 25250, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.3067, cls: 0.0704, iou: 0.1498), misc (ry: 0.42, z: 0.63), dt: 0.67, eta: 4.6h
[INFO]: 2023-10-26 15:00:05,394 iter: 25500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2975, cls: 0.0708, iou: 0.1488), misc (ry: 0.41, z: 0.60), dt: 0.67, eta: 4.5h
[INFO]: 2023-10-26 15:02:41,307 iter: 25750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2841, cls: 0.0653, iou: 0.1466), misc (ry: 0.40, z: 0.58), dt: 0.67, eta: 4.5h
[INFO]: 2023-10-26 15:05:16,523 iter: 26000, acc (bg: 1.00, fg: 0.94, iou: 0.86), loss (bbox_3d: 0.3262, cls: 0.0794, iou: 0.1573), misc (ry: 0.44, z: 0.64), dt: 0.67, eta: 4.4h
[INFO]: 2023-10-26 15:07:49,399 iter: 26250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3088, cls: 0.0707, iou: 0.1515), misc (ry: 0.42, z: 0.58), dt: 0.67, eta: 4.4h
[INFO]: 2023-10-26 15:10:25,733 iter: 26500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3031, cls: 0.0662, iou: 0.1463), misc (ry: 0.45, z: 0.59), dt: 0.67, eta: 4.3h
[INFO]: 2023-10-26 15:12:59,358 iter: 26750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3026, cls: 0.0661, iou: 0.1488), misc (ry: 0.45, z: 0.59), dt: 0.67, eta: 4.3h
[INFO]: 2023-10-26 15:15:35,753 iter: 27000, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.2852, cls: 0.0707, iou: 0.1459), misc (ry: 0.39, z: 0.59), dt: 0.66, eta: 4.2h
[INFO]: 2023-10-26 15:18:09,969 iter: 27250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2696, cls: 0.0652, iou: 0.1423), misc (ry: 0.36, z: 0.62), dt: 0.66, eta: 4.2h
[INFO]: 2023-10-26 15:20:44,324 iter: 27500, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.2830, cls: 0.0676, iou: 0.1468), misc (ry: 0.39, z: 0.57), dt: 0.66, eta: 4.2h
[INFO]: 2023-10-26 15:23:21,109 iter: 27750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.2907, cls: 0.0743, iou: 0.1569), misc (ry: 0.39, z: 0.60), dt: 0.66, eta: 4.1h
[INFO]: 2023-10-26 15:25:55,264 iter: 28000, acc (bg: 1.00, fg: 0.95, iou: 0.87), loss (bbox_3d: 0.2772, cls: 0.0702, iou: 0.1435), misc (ry: 0.41, z: 0.55), dt: 0.66, eta: 4.1h
[INFO]: 2023-10-26 15:28:31,068 iter: 28250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2739, cls: 0.0664, iou: 0.1429), misc (ry: 0.37, z: 0.59), dt: 0.66, eta: 4.0h
[INFO]: 2023-10-26 15:31:06,766 iter: 28500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2704, cls: 0.0675, iou: 0.1436), misc (ry: 0.38, z: 0.59), dt: 0.66, eta: 4.0h
[INFO]: 2023-10-26 15:33:39,622 iter: 28750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2477, cls: 0.0663, iou: 0.1415), misc (ry: 0.36, z: 0.53), dt: 0.66, eta: 3.9h
[INFO]: 2023-10-26 15:36:13,444 iter: 29000, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2494, cls: 0.0629, iou: 0.1365), misc (ry: 0.37, z: 0.55), dt: 0.66, eta: 3.9h
[INFO]: 2023-10-26 15:38:46,060 iter: 29250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2480, cls: 0.0652, iou: 0.1400), misc (ry: 0.35, z: 0.57), dt: 0.66, eta: 3.8h
[INFO]: 2023-10-26 15:41:20,433 iter: 29500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2304, cls: 0.0582, iou: 0.1362), misc (ry: 0.33, z: 0.54), dt: 0.66, eta: 3.8h
[INFO]: 2023-10-26 15:43:54,342 iter: 29750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2627, cls: 0.0605, iou: 0.1431), misc (ry: 0.39, z: 0.55), dt: 0.66, eta: 3.7h
[INFO]: 2023-10-26 15:46:29,862 iter: 30000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2864, cls: 0.0659, iou: 0.1427), misc (ry: 0.44, z: 0.55), dt: 0.66, eta: 3.7h
[INFO]: 2023-10-26 15:49:05,602 testing 1000/3769, dt: 0.151, eta: 7.0m
[INFO]: 2023-10-26 15:51:35,079 testing 2000/3769, dt: 0.150, eta: 4.4m
[INFO]: 2023-10-26 15:54:04,619 testing 3000/3769, dt: 0.150, eta: 1.9m
[INFO]: 2023-10-26 15:56:09,234 test_iter 30000 2d car --> easy: 0.8274, mod: 0.7478, hard: 0.6549
[INFO]: 2023-10-26 15:56:09,235 test_iter 30000 gr car --> easy: 0.1099, mod: 0.0916, hard: 0.0701
[INFO]: 2023-10-26 15:56:09,236 test_iter 30000 3d car --> easy: 0.0705, mod: 0.0562, hard: 0.0509
[INFO]: 2023-10-26 15:56:09,237 test_iter 30000 2d pedestrian --> easy: 0.6320, mod: 0.5551, hard: 0.4769
[INFO]: 2023-10-26 15:56:09,237 test_iter 30000 gr pedestrian --> easy: 0.0384, mod: 0.0335, hard: 0.0347
[INFO]: 2023-10-26 15:56:09,238 test_iter 30000 3d pedestrian --> easy: 0.0328, mod: 0.0320, hard: 0.0242
[INFO]: 2023-10-26 15:56:09,238 test_iter 30000 2d cyclist --> easy: 0.3069, mod: 0.2297, hard: 0.1962
[INFO]: 2023-10-26 15:56:09,239 test_iter 30000 gr cyclist --> easy: 0.0182, mod: 0.0182, hard: 0.0182
[INFO]: 2023-10-26 15:56:09,239 test_iter 30000 3d cyclist --> easy: 0.0182, mod: 0.0182, hard: 0.0182
[INFO]: 2023-10-26 15:58:42,743 iter: 30250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2553, cls: 0.0631, iou: 0.1413), misc (ry: 0.39, z: 0.52), dt: 0.68, eta: 3.7h
[INFO]: 2023-10-26 16:01:17,939 iter: 30500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2568, cls: 0.0645, iou: 0.1424), misc (ry: 0.38, z: 0.56), dt: 0.68, eta: 3.7h
[INFO]: 2023-10-26 16:03:52,531 iter: 30750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2846, cls: 0.0665, iou: 0.1436), misc (ry: 0.42, z: 0.54), dt: 0.68, eta: 3.6h
[INFO]: 2023-10-26 16:06:30,233 iter: 31000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2450, cls: 0.0654, iou: 0.1381), misc (ry: 0.33, z: 0.54), dt: 0.68, eta: 3.6h
[INFO]: 2023-10-26 16:09:05,184 iter: 31250, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2381, cls: 0.0604, iou: 0.1328), misc (ry: 0.34, z: 0.52), dt: 0.68, eta: 3.5h
[INFO]: 2023-10-26 16:11:39,739 iter: 31500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2283, cls: 0.0567, iou: 0.1306), misc (ry: 0.34, z: 0.59), dt: 0.68, eta: 3.5h
[INFO]: 2023-10-26 16:14:14,674 iter: 31750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2493, cls: 0.0629, iou: 0.1384), misc (ry: 0.35, z: 0.56), dt: 0.68, eta: 3.4h
[INFO]: 2023-10-26 16:16:48,387 iter: 32000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2651, cls: 0.0687, iou: 0.1444), misc (ry: 0.36, z: 0.56), dt: 0.68, eta: 3.4h
[INFO]: 2023-10-26 16:19:24,961 iter: 32250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2544, cls: 0.0655, iou: 0.1390), misc (ry: 0.37, z: 0.53), dt: 0.68, eta: 3.3h
[INFO]: 2023-10-26 16:22:00,358 iter: 32500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2265, cls: 0.0637, iou: 0.1366), misc (ry: 0.32, z: 0.52), dt: 0.67, eta: 3.3h
[INFO]: 2023-10-26 16:24:32,655 iter: 32750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2394, cls: 0.0604, iou: 0.1341), misc (ry: 0.36, z: 0.54), dt: 0.67, eta: 3.2h
[INFO]: 2023-10-26 16:27:06,992 iter: 33000, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2283, cls: 0.0619, iou: 0.1351), misc (ry: 0.32, z: 0.55), dt: 0.67, eta: 3.2h
[INFO]: 2023-10-26 16:29:41,974 iter: 33250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2259, cls: 0.0591, iou: 0.1316), misc (ry: 0.31, z: 0.54), dt: 0.67, eta: 3.1h
[INFO]: 2023-10-26 16:32:17,060 iter: 33500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2263, cls: 0.0629, iou: 0.1372), misc (ry: 0.34, z: 0.51), dt: 0.67, eta: 3.1h
[INFO]: 2023-10-26 16:34:50,555 iter: 33750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2270, cls: 0.0579, iou: 0.1283), misc (ry: 0.32, z: 0.51), dt: 0.67, eta: 3.0h
[INFO]: 2023-10-26 16:37:26,985 iter: 34000, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2205, cls: 0.0582, iou: 0.1292), misc (ry: 0.34, z: 0.49), dt: 0.67, eta: 3.0h
[INFO]: 2023-10-26 16:39:59,369 iter: 34250, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2291, cls: 0.0625, iou: 0.1337), misc (ry: 0.34, z: 0.49), dt: 0.67, eta: 2.9h
[INFO]: 2023-10-26 16:42:35,856 iter: 34500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2271, cls: 0.0619, iou: 0.1320), misc (ry: 0.34, z: 0.53), dt: 0.67, eta: 2.9h
[INFO]: 2023-10-26 16:45:14,982 iter: 34750, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2099, cls: 0.0624, iou: 0.1318), misc (ry: 0.33, z: 0.50), dt: 0.67, eta: 2.8h
[INFO]: 2023-10-26 16:47:51,717 iter: 35000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2242, cls: 0.0573, iou: 0.1331), misc (ry: 0.33, z: 0.52), dt: 0.67, eta: 2.8h
[INFO]: 2023-10-26 16:50:31,205 iter: 35250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2130, cls: 0.0570, iou: 0.1286), misc (ry: 0.34, z: 0.50), dt: 0.67, eta: 2.7h
[INFO]: 2023-10-26 16:53:10,375 iter: 35500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2248, cls: 0.0593, iou: 0.1317), misc (ry: 0.31, z: 0.51), dt: 0.67, eta: 2.7h
[INFO]: 2023-10-26 16:55:47,267 iter: 35750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1954, cls: 0.0552, iou: 0.1207), misc (ry: 0.30, z: 0.47), dt: 0.67, eta: 2.7h
[INFO]: 2023-10-26 16:58:23,764 iter: 36000, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.1966, cls: 0.0589, iou: 0.1270), misc (ry: 0.28, z: 0.49), dt: 0.67, eta: 2.6h
[INFO]: 2023-10-26 17:00:57,756 iter: 36250, acc (bg: 1.00, fg: 0.96, iou: 0.89), loss (bbox_3d: 0.2126, cls: 0.0578, iou: 0.1257), misc (ry: 0.34, z: 0.49), dt: 0.67, eta: 2.6h
[INFO]: 2023-10-26 17:03:33,528 iter: 36500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2119, cls: 0.0586, iou: 0.1318), misc (ry: 0.35, z: 0.49), dt: 0.67, eta: 2.5h
[INFO]: 2023-10-26 17:06:10,806 iter: 36750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1888, cls: 0.0545, iou: 0.1256), misc (ry: 0.29, z: 0.48), dt: 0.67, eta: 2.5h
[INFO]: 2023-10-26 17:08:47,197 iter: 37000, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2280, cls: 0.0616, iou: 0.1323), misc (ry: 0.34, z: 0.52), dt: 0.67, eta: 2.4h
[INFO]: 2023-10-26 17:11:23,175 iter: 37250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1933, cls: 0.0554, iou: 0.1265), misc (ry: 0.30, z: 0.48), dt: 0.67, eta: 2.4h
[INFO]: 2023-10-26 17:14:00,240 iter: 37500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2125, cls: 0.0581, iou: 0.1311), misc (ry: 0.34, z: 0.49), dt: 0.67, eta: 2.3h
[INFO]: 2023-10-26 17:16:34,494 iter: 37750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2096, cls: 0.0594, iou: 0.1295), misc (ry: 0.33, z: 0.47), dt: 0.67, eta: 2.3h
[INFO]: 2023-10-26 17:19:11,674 iter: 38000, acc (bg: 1.00, fg: 0.96, iou: 0.89), loss (bbox_3d: 0.1991, cls: 0.0589, iou: 0.1264), misc (ry: 0.29, z: 0.47), dt: 0.67, eta: 2.2h
[INFO]: 2023-10-26 17:21:47,381 iter: 38250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2084, cls: 0.0578, iou: 0.1277), misc (ry: 0.30, z: 0.50), dt: 0.67, eta: 2.2h
[INFO]: 2023-10-26 17:24:21,933 iter: 38500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1876, cls: 0.0576, iou: 0.1227), misc (ry: 0.27, z: 0.46), dt: 0.67, eta: 2.1h
[INFO]: 2023-10-26 17:26:57,277 iter: 38750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1945, cls: 0.0573, iou: 0.1250), misc (ry: 0.27, z: 0.49), dt: 0.67, eta: 2.1h
[INFO]: 2023-10-26 17:29:32,534 iter: 39000, acc (bg: 1.00, fg: 0.96, iou: 0.89), loss (bbox_3d: 0.1848, cls: 0.0579, iou: 0.1247), misc (ry: 0.27, z: 0.46), dt: 0.67, eta: 2.0h
[INFO]: 2023-10-26 17:32:06,506 iter: 39250, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2196, cls: 0.0602, iou: 0.1296), misc (ry: 0.34, z: 0.47), dt: 0.67, eta: 2.0h
[INFO]: 2023-10-26 17:34:42,133 iter: 39500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1956, cls: 0.0564, iou: 0.1228), misc (ry: 0.31, z: 0.49), dt: 0.67, eta: 1.9h
[INFO]: 2023-10-26 17:37:16,687 iter: 39750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2097, cls: 0.0574, iou: 0.1275), misc (ry: 0.31, z: 0.48), dt: 0.67, eta: 1.9h
[INFO]: 2023-10-26 17:39:51,937 iter: 40000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1857, cls: 0.0568, iou: 0.1253), misc (ry: 0.27, z: 0.50), dt: 0.67, eta: 1.8h
[INFO]: 2023-10-26 17:42:23,530 testing 1000/3769, dt: 0.147, eta: 6.8m
[INFO]: 2023-10-26 17:44:51,207 testing 2000/3769, dt: 0.147, eta: 4.3m
[INFO]: 2023-10-26 17:47:21,017 testing 3000/3769, dt: 0.148, eta: 1.9m
[INFO]: 2023-10-26 17:49:24,006 test_iter 40000 2d car --> easy: 0.8179, mod: 0.7982, hard: 0.6551
[INFO]: 2023-10-26 17:49:24,007 test_iter 40000 gr car --> easy: 0.1829, mod: 0.1524, hard: 0.1397
[INFO]: 2023-10-26 17:49:24,007 test_iter 40000 3d car --> easy: 0.0817, mod: 0.0643, hard: 0.0583
[INFO]: 2023-10-26 17:49:24,008 test_iter 40000 2d pedestrian --> easy: 0.6378, mod: 0.4993, hard: 0.4207
[INFO]: 2023-10-26 17:49:24,009 test_iter 40000 gr pedestrian --> easy: 0.0499, mod: 0.0461, hard: 0.0418
[INFO]: 2023-10-26 17:49:24,009 test_iter 40000 3d pedestrian --> easy: 0.0435, mod: 0.0377, hard: 0.0383
[INFO]: 2023-10-26 17:49:24,010 test_iter 40000 2d cyclist --> easy: 0.4083, mod: 0.2733, hard: 0.2670
[INFO]: 2023-10-26 17:49:24,010 test_iter 40000 gr cyclist --> easy: 0.0165, mod: 0.0104, hard: 0.0111
[INFO]: 2023-10-26 17:49:24,011 test_iter 40000 3d cyclist --> easy: 0.0076, mod: 0.0076, hard: 0.0076
[INFO]: 2023-10-26 17:51:56,775 iter: 40250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1710, cls: 0.0531, iou: 0.1164), misc (ry: 0.26, z: 0.46), dt: 0.68, eta: 1.8h
[INFO]: 2023-10-26 17:54:31,861 iter: 40500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1890, cls: 0.0572, iou: 0.1218), misc (ry: 0.29, z: 0.48), dt: 0.68, eta: 1.8h
[INFO]: 2023-10-26 17:57:07,204 iter: 40750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1774, cls: 0.0520, iou: 0.1184), misc (ry: 0.29, z: 0.45), dt: 0.68, eta: 1.7h
[INFO]: 2023-10-26 17:59:42,576 iter: 41000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1631, cls: 0.0533, iou: 0.1186), misc (ry: 0.26, z: 0.46), dt: 0.68, eta: 1.7h
[INFO]: 2023-10-26 18:02:17,132 iter: 41250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1730, cls: 0.0553, iou: 0.1198), misc (ry: 0.26, z: 0.46), dt: 0.68, eta: 1.6h
[INFO]: 2023-10-26 18:04:53,985 iter: 41500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1751, cls: 0.0572, iou: 0.1221), misc (ry: 0.27, z: 0.45), dt: 0.68, eta: 1.6h
[INFO]: 2023-10-26 18:07:28,264 iter: 41750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1604, cls: 0.0534, iou: 0.1156), misc (ry: 0.25, z: 0.43), dt: 0.68, eta: 1.6h
[INFO]: 2023-10-26 18:10:05,988 iter: 42000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1768, cls: 0.0578, iou: 0.1195), misc (ry: 0.25, z: 0.44), dt: 0.68, eta: 1.5h
[INFO]: 2023-10-26 18:12:42,538 iter: 42250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1732, cls: 0.0551, iou: 0.1184), misc (ry: 0.25, z: 0.42), dt: 0.68, eta: 1.5h
[INFO]: 2023-10-26 18:15:19,887 iter: 42500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1719, cls: 0.0519, iou: 0.1185), misc (ry: 0.26, z: 0.45), dt: 0.68, eta: 1.4h
[INFO]: 2023-10-26 18:17:53,669 iter: 42750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1654, cls: 0.0525, iou: 0.1176), misc (ry: 0.25, z: 0.44), dt: 0.68, eta: 1.4h
[INFO]: 2023-10-26 18:20:27,566 iter: 43000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1533, cls: 0.0477, iou: 0.1127), misc (ry: 0.24, z: 0.44), dt: 0.68, eta: 1.3h
[INFO]: 2023-10-26 18:23:01,119 iter: 43250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1613, cls: 0.0531, iou: 0.1160), misc (ry: 0.25, z: 0.42), dt: 0.68, eta: 1.3h
[INFO]: 2023-10-26 18:25:36,148 iter: 43500, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1530, cls: 0.0506, iou: 0.1113), misc (ry: 0.24, z: 0.42), dt: 0.67, eta: 1.2h
[INFO]: 2023-10-26 18:28:09,700 iter: 43750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1569, cls: 0.0517, iou: 0.1158), misc (ry: 0.25, z: 0.43), dt: 0.67, eta: 1.2h
[INFO]: 2023-10-26 18:30:44,096 iter: 44000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1684, cls: 0.0524, iou: 0.1183), misc (ry: 0.27, z: 0.43), dt: 0.67, eta: 1.1h
[INFO]: 2023-10-26 18:33:17,918 iter: 44250, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1516, cls: 0.0515, iou: 0.1135), misc (ry: 0.25, z: 0.45), dt: 0.67, eta: 1.1h
[INFO]: 2023-10-26 18:35:53,275 iter: 44500, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1623, cls: 0.0535, iou: 0.1124), misc (ry: 0.24, z: 0.43), dt: 0.67, eta: 1.0h
[INFO]: 2023-10-26 18:38:28,871 iter: 44750, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1626, cls: 0.0530, iou: 0.1146), misc (ry: 0.25, z: 0.43), dt: 0.67, eta: 58.9m
[INFO]: 2023-10-26 18:41:04,484 iter: 45000, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1453, cls: 0.0506, iou: 0.1121), misc (ry: 0.24, z: 0.41), dt: 0.67, eta: 56.1m
[INFO]: 2023-10-26 18:43:39,542 iter: 45250, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1578, cls: 0.0512, iou: 0.1129), misc (ry: 0.24, z: 0.43), dt: 0.67, eta: 53.3m
[INFO]: 2023-10-26 18:46:16,774 iter: 45500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1467, cls: 0.0500, iou: 0.1125), misc (ry: 0.24, z: 0.43), dt: 0.67, eta: 50.4m
[INFO]: 2023-10-26 18:48:53,527 iter: 45750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1652, cls: 0.0565, iou: 0.1186), misc (ry: 0.26, z: 0.42), dt: 0.67, eta: 47.6m
[INFO]: 2023-10-26 18:51:30,608 iter: 46000, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1525, cls: 0.0526, iou: 0.1117), misc (ry: 0.25, z: 0.43), dt: 0.67, eta: 44.8m
[INFO]: 2023-10-26 18:54:06,826 iter: 46250, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1591, cls: 0.0529, iou: 0.1142), misc (ry: 0.24, z: 0.42), dt: 0.67, eta: 42.0m
[INFO]: 2023-10-26 18:56:41,705 iter: 46500, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1522, cls: 0.0499, iou: 0.1112), misc (ry: 0.25, z: 0.42), dt: 0.67, eta: 39.2m
[INFO]: 2023-10-26 18:59:15,189 iter: 46750, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1509, cls: 0.0520, iou: 0.1139), misc (ry: 0.25, z: 0.40), dt: 0.67, eta: 36.4m
[INFO]: 2023-10-26 19:01:49,545 iter: 47000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1642, cls: 0.0537, iou: 0.1150), misc (ry: 0.27, z: 0.40), dt: 0.67, eta: 33.5m
[INFO]: 2023-10-26 19:04:24,212 iter: 47250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1424, cls: 0.0506, iou: 0.1107), misc (ry: 0.23, z: 0.40), dt: 0.67, eta: 30.7m
[INFO]: 2023-10-26 19:07:01,771 iter: 47500, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1454, cls: 0.0515, iou: 0.1105), misc (ry: 0.24, z: 0.39), dt: 0.67, eta: 27.9m
[INFO]: 2023-10-26 19:09:39,369 iter: 47750, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1434, cls: 0.0500, iou: 0.1117), misc (ry: 0.24, z: 0.40), dt: 0.67, eta: 25.1m
[INFO]: 2023-10-26 19:12:15,025 iter: 48000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1424, cls: 0.0466, iou: 0.1084), misc (ry: 0.23, z: 0.40), dt: 0.67, eta: 22.3m
[INFO]: 2023-10-26 19:14:49,745 iter: 48250, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1614, cls: 0.0562, iou: 0.1147), misc (ry: 0.24, z: 0.39), dt: 0.67, eta: 19.5m
[INFO]: 2023-10-26 19:17:22,633 iter: 48500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1370, cls: 0.0488, iou: 0.1065), misc (ry: 0.23, z: 0.39), dt: 0.67, eta: 16.7m
[INFO]: 2023-10-26 19:19:59,487 iter: 48750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1355, cls: 0.0476, iou: 0.1090), misc (ry: 0.22, z: 0.40), dt: 0.67, eta: 13.9m
[INFO]: 2023-10-26 19:22:35,663 iter: 49000, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1386, cls: 0.0494, iou: 0.1075), misc (ry: 0.21, z: 0.39), dt: 0.67, eta: 11.2m
[INFO]: 2023-10-26 19:25:15,365 iter: 49250, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1359, cls: 0.0500, iou: 0.1079), misc (ry: 0.23, z: 0.39), dt: 0.67, eta: 8.4m
[INFO]: 2023-10-26 19:27:55,729 iter: 49500, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1400, cls: 0.0510, iou: 0.1098), misc (ry: 0.23, z: 0.40), dt: 0.67, eta: 5.6m
[INFO]: 2023-10-26 19:30:28,912 iter: 49750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1217, cls: 0.0456, iou: 0.1005), misc (ry: 0.20, z: 0.35), dt: 0.67, eta: 2.8m
[INFO]: 2023-10-26 19:33:05,603 iter: 50000, acc (bg: 1.00, fg: 0.97, iou: 0.90), loss (bbox_3d: 0.1415, cls: 0.0523, iou: 0.1082), misc (ry: 0.23, z: 0.38), dt: 0.67, eta: 0.7s
[INFO]: 2023-10-26 19:35:36,496 testing 1000/3769, dt: 0.146, eta: 6.7m
[INFO]: 2023-10-26 19:38:02,532 testing 2000/3769, dt: 0.146, eta: 4.3m
[INFO]: 2023-10-26 19:40:30,820 testing 3000/3769, dt: 0.147, eta: 1.9m
[INFO]: 2023-10-26 19:42:33,585 test_iter 50000 2d car --> easy: 0.8670, mod: 0.8024, hard: 0.6610
[INFO]: 2023-10-26 19:42:33,586 test_iter 50000 gr car --> easy: 0.1732, mod: 0.1278, hard: 0.1475
[INFO]: 2023-10-26 19:42:33,586 test_iter 50000 3d car --> easy: 0.1128, mod: 0.0862, hard: 0.0736
[INFO]: 2023-10-26 19:42:33,587 test_iter 50000 2d pedestrian --> easy: 0.6490, mod: 0.5661, hard: 0.4873
[INFO]: 2023-10-26 19:42:33,588 test_iter 50000 gr pedestrian --> easy: 0.1107, mod: 0.1080, hard: 0.1016
[INFO]: 2023-10-26 19:42:33,588 test_iter 50000 3d pedestrian --> easy: 0.1066, mod: 0.1008, hard: 0.1003
[INFO]: 2023-10-26 19:42:33,589 test_iter 50000 2d cyclist --> easy: 0.4556, mod: 0.3179, hard: 0.2769
[INFO]: 2023-10-26 19:42:33,589 test_iter 50000 gr cyclist --> easy: 0.0201, mod: 0.0152, hard: 0.0152
[INFO]: 2023-10-26 19:42:33,590 test_iter 50000 3d cyclist --> easy: 0.0195, mod: 0.0152, hard: 0.0152
