[INFO]: 2024-04-04 10:05:27,225 ==开始处理数据集==
[INFO]: 2024-04-04 10:05:27,225 命中imdb缓存.
[INFO]: 2024-04-04 10:05:28,723 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-04 10:05:28,723 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-04 10:05:31,247 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-04 10:05:31,248 ==数据集处理完毕==
[INFO]: 2024-04-04 10:05:34,251 ==开始生成anchors==
[INFO]: 2024-04-04 10:05:34,252 ==anchors生成完毕==
[INFO]: 2024-04-04 10:05:37,255 ==开始计算bbox参数==
[INFO]: 2024-04-04 10:05:37,255 命中bbox的回归均值缓存
[INFO]: 2024-04-04 10:05:37,255 命中bbox的回归标准差缓存
[INFO]: 2024-04-04 10:05:37,256 ==bbox参数计算完毕==
[INFO]: 2024-04-04 10:05:45,294 设置保存完成
[INFO]: 2024-04-04 10:05:48,297 训练配置一览
[INFO]: 2024-04-04 10:05:50,306 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             4                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-04 10:05:56,129 装载完成
[INFO]: 2024-04-04 10:05:59,133 神经网络结构一览
[INFO]: 2024-04-04 10:06:01,135 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): RefConv(
      (convmap): Conv2d(18432, 18432, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=18432, bias=False)
    )
    (bbox_y3d_loc): RefConv(
      (convmap): Conv2d(18432, 18432, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=18432, bias=False)
    )
    (bbox_z3d_loc): RefConv(
      (convmap): Conv2d(18432, 18432, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=18432, bias=False)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-04 10:06:01,164 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-04 10:10:50,656 iter: 250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1693, cls: 0.0338, iou: 0.1018), misc (ry: 0.24, z: 0.58), dt: 1.16, eta: 16.1h
[INFO]: 2024-04-04 10:15:43,766 iter: 500, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.6250, cls: 0.1394, iou: 0.2048), misc (ry: 0.66, z: 0.91), dt: 1.17, eta: 16.0h
[INFO]: 2024-04-04 10:20:40,295 iter: 750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5832, cls: 0.1130, iou: 0.1971), misc (ry: 0.65, z: 0.91), dt: 1.17, eta: 16.1h
[INFO]: 2024-04-04 10:25:31,292 iter: 1000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4074, cls: 0.0831, iou: 0.1653), misc (ry: 0.46, z: 0.76), dt: 1.17, eta: 15.9h
[INFO]: 2024-04-04 10:30:19,364 iter: 1250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3192, cls: 0.0636, iou: 0.1518), misc (ry: 0.37, z: 0.70), dt: 1.17, eta: 15.8h
[INFO]: 2024-04-04 10:35:09,868 iter: 1500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2612, cls: 0.0550, iou: 0.1382), misc (ry: 0.35, z: 0.59), dt: 1.17, eta: 15.7h
[INFO]: 2024-04-04 10:40:00,614 iter: 1750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2711, cls: 0.0575, iou: 0.1411), misc (ry: 0.37, z: 0.57), dt: 1.17, eta: 15.6h
[INFO]: 2024-04-04 10:44:51,213 iter: 2000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2205, cls: 0.0490, iou: 0.1244), misc (ry: 0.32, z: 0.54), dt: 1.17, eta: 15.5h
[INFO]: 2024-04-04 10:49:40,405 iter: 2250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3048, cls: 0.0600, iou: 0.1460), misc (ry: 0.40, z: 0.63), dt: 1.16, eta: 15.4h
[INFO]: 2024-04-04 10:54:31,345 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2796, cls: 0.0590, iou: 0.1361), misc (ry: 0.39, z: 0.56), dt: 1.16, eta: 15.4h
[INFO]: 2024-04-04 10:59:19,366 iter: 2750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.2004, cls: 0.0482, iou: 0.1242), misc (ry: 0.30, z: 0.51), dt: 1.16, eta: 15.3h
[INFO]: 2024-04-04 11:04:11,828 iter: 3000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1988, cls: 0.0479, iou: 0.1222), misc (ry: 0.32, z: 0.49), dt: 1.16, eta: 15.2h
[INFO]: 2024-04-04 11:09:03,717 iter: 3250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1729, cls: 0.0436, iou: 0.1178), misc (ry: 0.26, z: 0.48), dt: 1.16, eta: 15.1h
[INFO]: 2024-04-04 11:13:55,794 iter: 3500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1573, cls: 0.0414, iou: 0.1124), misc (ry: 0.24, z: 0.48), dt: 1.16, eta: 15.0h
[INFO]: 2024-04-04 11:18:52,246 iter: 3750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1395, cls: 0.0387, iou: 0.1078), misc (ry: 0.23, z: 0.44), dt: 1.17, eta: 15.0h
[INFO]: 2024-04-04 11:23:50,538 iter: 4000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1411, cls: 0.0400, iou: 0.1108), misc (ry: 0.24, z: 0.47), dt: 1.17, eta: 14.9h
[INFO]: 2024-04-04 11:28:44,052 iter: 4250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1479, cls: 0.0385, iou: 0.1102), misc (ry: 0.27, z: 0.43), dt: 1.17, eta: 14.8h
[INFO]: 2024-04-04 11:33:37,467 iter: 4500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2021, cls: 0.0496, iou: 0.1235), misc (ry: 0.30, z: 0.51), dt: 1.17, eta: 14.8h
[INFO]: 2024-04-04 11:38:30,264 iter: 4750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1892, cls: 0.0452, iou: 0.1200), misc (ry: 0.29, z: 0.51), dt: 1.17, eta: 14.7h
[INFO]: 2024-04-04 11:43:25,479 iter: 5000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1502, cls: 0.0409, iou: 0.1091), misc (ry: 0.25, z: 0.46), dt: 1.17, eta: 14.6h
[INFO]: 2024-04-04 11:48:24,069 iter: 5250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1338, cls: 0.0390, iou: 0.1038), misc (ry: 0.23, z: 0.42), dt: 1.17, eta: 14.5h
[INFO]: 2024-04-04 11:53:14,540 iter: 5500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1321, cls: 0.0416, iou: 0.1075), misc (ry: 0.22, z: 0.41), dt: 1.17, eta: 14.5h
[INFO]: 2024-04-04 11:58:04,201 iter: 5750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1239, cls: 0.0372, iou: 0.1015), misc (ry: 0.21, z: 0.42), dt: 1.17, eta: 14.4h
[INFO]: 2024-04-04 12:02:54,302 iter: 6000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1090, cls: 0.0353, iou: 0.0991), misc (ry: 0.20, z: 0.39), dt: 1.17, eta: 14.3h
[INFO]: 2024-04-04 12:07:43,671 iter: 6250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1055, cls: 0.0355, iou: 0.0954), misc (ry: 0.18, z: 0.42), dt: 1.17, eta: 14.2h
[INFO]: 2024-04-04 12:12:35,165 iter: 6500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1009, cls: 0.0345, iou: 0.0934), misc (ry: 0.18, z: 0.40), dt: 1.17, eta: 14.1h
[INFO]: 2024-04-04 12:17:29,393 iter: 6750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0999, cls: 0.0339, iou: 0.0922), misc (ry: 0.20, z: 0.36), dt: 1.17, eta: 14.0h
[INFO]: 2024-04-04 12:22:23,279 iter: 7000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1033, cls: 0.0347, iou: 0.0954), misc (ry: 0.18, z: 0.38), dt: 1.17, eta: 14.0h
[INFO]: 2024-04-04 12:27:16,370 iter: 7250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0900, cls: 0.0342, iou: 0.0911), misc (ry: 0.18, z: 0.35), dt: 1.17, eta: 13.9h
[INFO]: 2024-04-04 12:32:12,051 iter: 7500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0836, cls: 0.0327, iou: 0.0870), misc (ry: 0.17, z: 0.34), dt: 1.17, eta: 13.8h
[INFO]: 2024-04-04 12:37:06,551 iter: 7750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0835, cls: 0.0323, iou: 0.0864), misc (ry: 0.17, z: 0.36), dt: 1.17, eta: 13.7h
[INFO]: 2024-04-04 12:42:01,628 iter: 8000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0818, cls: 0.0303, iou: 0.0849), misc (ry: 0.17, z: 0.36), dt: 1.17, eta: 13.7h
[INFO]: 2024-04-04 12:46:52,472 iter: 8250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0837, cls: 0.0324, iou: 0.0859), misc (ry: 0.18, z: 0.35), dt: 1.17, eta: 13.6h
[INFO]: 2024-04-04 12:51:49,352 iter: 8500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0837, cls: 0.0318, iou: 0.0873), misc (ry: 0.17, z: 0.39), dt: 1.17, eta: 13.5h
[INFO]: 2024-04-04 12:56:42,185 iter: 8750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0844, cls: 0.0315, iou: 0.0829), misc (ry: 0.18, z: 0.37), dt: 1.17, eta: 13.4h
[INFO]: 2024-04-04 13:01:39,088 iter: 9000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0767, cls: 0.0309, iou: 0.0836), misc (ry: 0.15, z: 0.35), dt: 1.17, eta: 13.3h
[INFO]: 2024-04-04 13:06:28,113 iter: 9250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0767, cls: 0.0308, iou: 0.0827), misc (ry: 0.16, z: 0.35), dt: 1.17, eta: 13.3h
[INFO]: 2024-04-04 13:11:19,996 iter: 9500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0639, cls: 0.0293, iou: 0.0785), misc (ry: 0.14, z: 0.31), dt: 1.17, eta: 13.2h
[INFO]: 2024-04-04 13:16:12,577 iter: 9750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0645, cls: 0.0300, iou: 0.0791), misc (ry: 0.15, z: 0.31), dt: 1.17, eta: 13.1h
[INFO]: 2024-04-04 13:21:08,547 iter: 10000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0720, cls: 0.0305, iou: 0.0815), misc (ry: 0.15, z: 0.32), dt: 1.17, eta: 13.0h
[INFO]: 2024-04-04 13:30:32,881 test_iter 10000 2d car --> easy: 0.9221, mod: 0.8305, hard: 0.6784
[INFO]: 2024-04-04 13:30:32,882 test_iter 10000 gr car --> easy: 0.1728, mod: 0.1435, hard: 0.1199
[INFO]: 2024-04-04 13:30:32,882 test_iter 10000 3d car --> easy: 0.1226, mod: 0.1000, hard: 0.0803
[INFO]: 2024-04-04 13:30:32,883 test_iter 10000 2d pedestrian --> easy: 0.7099, mod: 0.5754, hard: 0.4954
[INFO]: 2024-04-04 13:30:32,883 test_iter 10000 gr pedestrian --> easy: 0.0240, mod: 0.0213, hard: 0.0150
[INFO]: 2024-04-04 13:30:32,884 test_iter 10000 3d pedestrian --> easy: 0.0203, mod: 0.0194, hard: 0.0134
[INFO]: 2024-04-04 13:30:32,884 test_iter 10000 2d cyclist --> easy: 0.6636, mod: 0.4837, hard: 0.4148
[INFO]: 2024-04-04 13:30:32,885 test_iter 10000 gr cyclist --> easy: 0.0280, mod: 0.0264, hard: 0.0258
[INFO]: 2024-04-04 13:30:32,885 test_iter 10000 3d cyclist --> easy: 0.0247, mod: 0.0238, hard: 0.0238
[INFO]: 2024-04-04 13:35:25,777 iter: 10250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0702, cls: 0.0319, iou: 0.0816), misc (ry: 0.14, z: 0.31), dt: 1.23, eta: 13.5h
[INFO]: 2024-04-04 13:40:13,468 iter: 10500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0616, cls: 0.0284, iou: 0.0774), misc (ry: 0.14, z: 0.33), dt: 1.22, eta: 13.4h
[INFO]: 2024-04-04 13:45:02,722 iter: 10750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0644, cls: 0.0303, iou: 0.0785), misc (ry: 0.14, z: 0.32), dt: 1.22, eta: 13.3h
[INFO]: 2024-04-04 13:49:55,265 iter: 11000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0617, cls: 0.0299, iou: 0.0777), misc (ry: 0.14, z: 0.32), dt: 1.22, eta: 13.2h
[INFO]: 2024-04-04 13:54:49,909 iter: 11250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0661, cls: 0.0293, iou: 0.0813), misc (ry: 0.15, z: 0.34), dt: 1.22, eta: 13.1h
[INFO]: 2024-04-04 13:59:41,933 iter: 11500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0656, cls: 0.0306, iou: 0.0793), misc (ry: 0.14, z: 0.33), dt: 1.22, eta: 13.0h
[INFO]: 2024-04-04 14:04:35,193 iter: 11750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0292, iou: 0.0764), misc (ry: 0.13, z: 0.30), dt: 1.22, eta: 12.9h
[INFO]: 2024-04-04 14:09:26,982 iter: 12000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0585, cls: 0.0286, iou: 0.0745), misc (ry: 0.14, z: 0.29), dt: 1.22, eta: 12.8h
[INFO]: 2024-04-04 14:14:22,284 iter: 12250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0593, cls: 0.0296, iou: 0.0766), misc (ry: 0.13, z: 0.29), dt: 1.22, eta: 12.8h
[INFO]: 2024-04-04 14:19:15,232 iter: 12500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0599, cls: 0.0285, iou: 0.0744), misc (ry: 0.14, z: 0.31), dt: 1.22, eta: 12.7h
[INFO]: 2024-04-04 14:24:08,356 iter: 12750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0280, iou: 0.0745), misc (ry: 0.13, z: 0.30), dt: 1.21, eta: 12.6h
[INFO]: 2024-04-04 14:29:06,503 iter: 13000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0544, cls: 0.0286, iou: 0.0718), misc (ry: 0.13, z: 0.30), dt: 1.21, eta: 12.5h
[INFO]: 2024-04-04 14:34:02,968 iter: 13250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0519, cls: 0.0274, iou: 0.0721), misc (ry: 0.12, z: 0.30), dt: 1.21, eta: 12.4h
[INFO]: 2024-04-04 14:38:56,784 iter: 13500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0288, iou: 0.0720), misc (ry: 0.13, z: 0.29), dt: 1.21, eta: 12.3h
[INFO]: 2024-04-04 14:43:48,185 iter: 13750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0486, cls: 0.0272, iou: 0.0694), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 12.2h
[INFO]: 2024-04-04 14:48:38,768 iter: 14000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0505, cls: 0.0279, iou: 0.0724), misc (ry: 0.13, z: 0.30), dt: 1.21, eta: 12.1h
[INFO]: 2024-04-04 14:53:30,981 iter: 14250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0517, cls: 0.0274, iou: 0.0721), misc (ry: 0.13, z: 0.28), dt: 1.21, eta: 12.0h
[INFO]: 2024-04-04 14:58:27,488 iter: 14500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0493, cls: 0.0272, iou: 0.0716), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 11.9h
[INFO]: 2024-04-04 15:03:25,887 iter: 14750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0269, iou: 0.0676), misc (ry: 0.12, z: 0.27), dt: 1.21, eta: 11.8h
[INFO]: 2024-04-04 15:08:20,133 iter: 15000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0523, cls: 0.0276, iou: 0.0698), misc (ry: 0.13, z: 0.28), dt: 1.21, eta: 11.8h
[INFO]: 2024-04-04 15:13:14,918 iter: 15250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0480, cls: 0.0270, iou: 0.0679), misc (ry: 0.13, z: 0.28), dt: 1.21, eta: 11.7h
[INFO]: 2024-04-04 15:18:06,923 iter: 15500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0462, cls: 0.0274, iou: 0.0672), misc (ry: 0.12, z: 0.26), dt: 1.21, eta: 11.6h
[INFO]: 2024-04-04 15:22:58,461 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0468, cls: 0.0273, iou: 0.0688), misc (ry: 0.13, z: 0.26), dt: 1.21, eta: 11.5h
[INFO]: 2024-04-04 15:27:55,506 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0476, cls: 0.0278, iou: 0.0690), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 11.4h
[INFO]: 2024-04-04 15:32:51,964 iter: 16250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0262, iou: 0.0633), misc (ry: 0.12, z: 0.25), dt: 1.21, eta: 11.3h
[INFO]: 2024-04-04 15:37:47,917 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0435, cls: 0.0255, iou: 0.0658), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 11.2h
[INFO]: 2024-04-04 15:42:40,851 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0262, iou: 0.0668), misc (ry: 0.12, z: 0.27), dt: 1.21, eta: 11.1h
[INFO]: 2024-04-04 15:47:38,292 iter: 17000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0259, iou: 0.0675), misc (ry: 0.11, z: 0.28), dt: 1.21, eta: 11.1h
[INFO]: 2024-04-04 15:52:33,363 iter: 17250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0499, cls: 0.0264, iou: 0.0697), misc (ry: 0.13, z: 0.28), dt: 1.21, eta: 11.0h
[INFO]: 2024-04-04 15:57:25,449 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0424, cls: 0.0258, iou: 0.0663), misc (ry: 0.12, z: 0.26), dt: 1.20, eta: 10.9h
[INFO]: 2024-04-04 16:02:23,839 iter: 17750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0456, cls: 0.0268, iou: 0.0658), misc (ry: 0.12, z: 0.27), dt: 1.20, eta: 10.8h
[INFO]: 2024-04-04 16:07:11,061 iter: 18000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0408, cls: 0.0257, iou: 0.0645), misc (ry: 0.11, z: 0.26), dt: 1.20, eta: 10.7h
[INFO]: 2024-04-04 16:12:00,402 iter: 18250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0409, cls: 0.0251, iou: 0.0631), misc (ry: 0.11, z: 0.26), dt: 1.20, eta: 10.6h
[INFO]: 2024-04-04 16:16:50,250 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0399, cls: 0.0246, iou: 0.0620), misc (ry: 0.11, z: 0.25), dt: 1.20, eta: 10.5h
[INFO]: 2024-04-04 16:21:38,860 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0383, cls: 0.0247, iou: 0.0625), misc (ry: 0.10, z: 0.25), dt: 1.20, eta: 10.4h
[INFO]: 2024-04-04 16:26:33,300 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0443, cls: 0.0263, iou: 0.0661), misc (ry: 0.12, z: 0.26), dt: 1.20, eta: 10.3h
[INFO]: 2024-04-04 16:31:27,222 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0260, iou: 0.0672), misc (ry: 0.12, z: 0.27), dt: 1.20, eta: 10.3h
[INFO]: 2024-04-04 16:36:17,873 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0389, cls: 0.0258, iou: 0.0635), misc (ry: 0.11, z: 0.24), dt: 1.20, eta: 10.2h
[INFO]: 2024-04-04 16:41:09,276 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0457, cls: 0.0266, iou: 0.0668), misc (ry: 0.12, z: 0.28), dt: 1.20, eta: 10.1h
[INFO]: 2024-04-04 16:45:57,529 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0465, cls: 0.0259, iou: 0.0655), misc (ry: 0.12, z: 0.27), dt: 1.20, eta: 10.0h
[INFO]: 2024-04-04 16:55:18,470 test_iter 20000 2d car --> easy: 0.9197, mod: 0.8339, hard: 0.6765
[INFO]: 2024-04-04 16:55:18,471 test_iter 20000 gr car --> easy: 0.2529, mod: 0.2056, hard: 0.1727
[INFO]: 2024-04-04 16:55:18,472 test_iter 20000 3d car --> easy: 0.1935, mod: 0.1597, hard: 0.1334
[INFO]: 2024-04-04 16:55:18,473 test_iter 20000 2d pedestrian --> easy: 0.6644, mod: 0.5815, hard: 0.5009
[INFO]: 2024-04-04 16:55:18,473 test_iter 20000 gr pedestrian --> easy: 0.0636, mod: 0.1095, hard: 0.1025
[INFO]: 2024-04-04 16:55:18,474 test_iter 20000 3d pedestrian --> easy: 0.0606, mod: 0.1022, hard: 0.1013
[INFO]: 2024-04-04 16:55:18,474 test_iter 20000 2d cyclist --> easy: 0.6791, mod: 0.4937, hard: 0.4244
[INFO]: 2024-04-04 16:55:18,475 test_iter 20000 gr cyclist --> easy: 0.0329, mod: 0.0417, hard: 0.0419
[INFO]: 2024-04-04 16:55:18,476 test_iter 20000 3d cyclist --> easy: 0.0299, mod: 0.0407, hard: 0.0303
[INFO]: 2024-04-04 17:00:10,810 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0433, cls: 0.0260, iou: 0.0643), misc (ry: 0.11, z: 0.27), dt: 1.23, eta: 10.1h
[INFO]: 2024-04-04 17:05:00,356 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0419, cls: 0.0262, iou: 0.0636), misc (ry: 0.11, z: 0.27), dt: 1.23, eta: 10.0h
[INFO]: 2024-04-04 17:09:43,901 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0394, cls: 0.0251, iou: 0.0624), misc (ry: 0.11, z: 0.25), dt: 1.23, eta: 10.0h
[INFO]: 2024-04-04 17:14:34,925 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0393, cls: 0.0254, iou: 0.0625), misc (ry: 0.11, z: 0.25), dt: 1.22, eta: 9.9h
[INFO]: 2024-04-04 17:19:27,474 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0417, cls: 0.0259, iou: 0.0623), misc (ry: 0.11, z: 0.25), dt: 1.22, eta: 9.8h
[INFO]: 2024-04-04 17:24:19,203 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0373, cls: 0.0247, iou: 0.0602), misc (ry: 0.10, z: 0.26), dt: 1.22, eta: 9.7h
[INFO]: 2024-04-04 17:29:08,242 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0354, cls: 0.0250, iou: 0.0592), misc (ry: 0.10, z: 0.25), dt: 1.22, eta: 9.6h
[INFO]: 2024-04-04 17:33:53,725 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0363, cls: 0.0249, iou: 0.0587), misc (ry: 0.10, z: 0.24), dt: 1.22, eta: 9.5h
[INFO]: 2024-04-04 17:38:45,981 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0380, cls: 0.0238, iou: 0.0607), misc (ry: 0.10, z: 0.26), dt: 1.22, eta: 9.4h
[INFO]: 2024-04-04 17:43:39,524 iter: 22500, acc (bg: 1.00, fg: 1.00, iou: 0.94), loss (bbox_3d: 0.0341, cls: 0.0232, iou: 0.0588), misc (ry: 0.10, z: 0.25), dt: 1.22, eta: 9.3h
[INFO]: 2024-04-04 17:48:27,742 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0401, cls: 0.0256, iou: 0.0628), misc (ry: 0.11, z: 0.26), dt: 1.22, eta: 9.2h
[INFO]: 2024-04-04 17:53:15,367 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0252, iou: 0.0610), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 9.1h
[INFO]: 2024-04-04 17:58:12,278 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0339, cls: 0.0241, iou: 0.0584), misc (ry: 0.10, z: 0.24), dt: 1.22, eta: 9.1h
[INFO]: 2024-04-04 18:03:00,796 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0360, cls: 0.0240, iou: 0.0598), misc (ry: 0.10, z: 0.25), dt: 1.22, eta: 9.0h
[INFO]: 2024-04-04 18:07:49,213 iter: 23750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0324, cls: 0.0235, iou: 0.0569), misc (ry: 0.10, z: 0.23), dt: 1.22, eta: 8.9h
[INFO]: 2024-04-04 18:12:39,018 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0376, cls: 0.0252, iou: 0.0597), misc (ry: 0.10, z: 0.25), dt: 1.22, eta: 8.8h
[INFO]: 2024-04-04 18:17:32,736 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0340, cls: 0.0242, iou: 0.0579), misc (ry: 0.10, z: 0.23), dt: 1.22, eta: 8.7h
[INFO]: 2024-04-04 18:22:21,111 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0354, cls: 0.0244, iou: 0.0590), misc (ry: 0.10, z: 0.23), dt: 1.22, eta: 8.6h
[INFO]: 2024-04-04 18:27:08,681 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0324, cls: 0.0234, iou: 0.0577), misc (ry: 0.09, z: 0.24), dt: 1.21, eta: 8.5h
[INFO]: 2024-04-04 18:31:55,171 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0361, cls: 0.0247, iou: 0.0588), misc (ry: 0.11, z: 0.25), dt: 1.21, eta: 8.4h
[INFO]: 2024-04-04 18:36:46,136 iter: 25250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0316, cls: 0.0237, iou: 0.0547), misc (ry: 0.10, z: 0.24), dt: 1.21, eta: 8.3h
[INFO]: 2024-04-04 18:41:37,498 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0329, cls: 0.0244, iou: 0.0563), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 8.3h
[INFO]: 2024-04-04 18:46:24,559 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0353, cls: 0.0235, iou: 0.0587), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 8.2h
[INFO]: 2024-04-04 18:51:14,069 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0328, cls: 0.0239, iou: 0.0558), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 8.1h
[INFO]: 2024-04-04 18:56:02,765 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0322, cls: 0.0237, iou: 0.0571), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 8.0h
[INFO]: 2024-04-04 19:00:53,352 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0339, cls: 0.0237, iou: 0.0568), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 7.9h
[INFO]: 2024-04-04 19:05:45,105 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0238, iou: 0.0555), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 7.8h
[INFO]: 2024-04-04 19:10:35,042 iter: 27000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0232, iou: 0.0555), misc (ry: 0.10, z: 0.24), dt: 1.21, eta: 7.7h
[INFO]: 2024-04-04 19:15:27,482 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0297, cls: 0.0244, iou: 0.0541), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 7.6h
[INFO]: 2024-04-04 19:20:17,241 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0320, cls: 0.0237, iou: 0.0553), misc (ry: 0.10, z: 0.24), dt: 1.21, eta: 7.6h
[INFO]: 2024-04-04 19:25:11,893 iter: 27750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0292, cls: 0.0227, iou: 0.0539), misc (ry: 0.10, z: 0.23), dt: 1.21, eta: 7.5h
[INFO]: 2024-04-04 19:30:00,208 iter: 28000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0287, cls: 0.0230, iou: 0.0516), misc (ry: 0.09, z: 0.22), dt: 1.21, eta: 7.4h
[INFO]: 2024-04-04 19:34:52,159 iter: 28250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0298, cls: 0.0227, iou: 0.0540), misc (ry: 0.09, z: 0.24), dt: 1.21, eta: 7.3h
[INFO]: 2024-04-04 19:39:46,001 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0236, iou: 0.0534), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 7.2h
[INFO]: 2024-04-04 19:44:33,573 iter: 28750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0270, cls: 0.0220, iou: 0.0510), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 7.1h
[INFO]: 2024-04-04 19:49:21,587 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0291, cls: 0.0231, iou: 0.0529), misc (ry: 0.09, z: 0.22), dt: 1.21, eta: 7.0h
[INFO]: 2024-04-04 19:54:11,709 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0296, cls: 0.0231, iou: 0.0538), misc (ry: 0.09, z: 0.23), dt: 1.21, eta: 7.0h
[INFO]: 2024-04-04 19:59:04,338 iter: 29500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0276, cls: 0.0233, iou: 0.0523), misc (ry: 0.09, z: 0.20), dt: 1.21, eta: 6.9h
[INFO]: 2024-04-04 20:03:54,879 iter: 29750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0274, cls: 0.0226, iou: 0.0512), misc (ry: 0.09, z: 0.20), dt: 1.21, eta: 6.8h
[INFO]: 2024-04-04 20:08:47,337 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0279, cls: 0.0232, iou: 0.0516), misc (ry: 0.09, z: 0.20), dt: 1.21, eta: 6.7h
[INFO]: 2024-04-04 20:18:07,968 test_iter 30000 2d car --> easy: 0.9279, mod: 0.8440, hard: 0.6834
[INFO]: 2024-04-04 20:18:07,970 test_iter 30000 gr car --> easy: 0.2173, mod: 0.1825, hard: 0.1475
[INFO]: 2024-04-04 20:18:07,970 test_iter 30000 3d car --> easy: 0.1628, mod: 0.1340, hard: 0.1033
[INFO]: 2024-04-04 20:18:07,971 test_iter 30000 2d pedestrian --> easy: 0.7362, mod: 0.5907, hard: 0.5072
[INFO]: 2024-04-04 20:18:07,971 test_iter 30000 gr pedestrian --> easy: 0.0387, mod: 0.1083, hard: 0.1022
[INFO]: 2024-04-04 20:18:07,972 test_iter 30000 3d pedestrian --> easy: 0.0367, mod: 0.1006, hard: 0.1010
[INFO]: 2024-04-04 20:18:07,972 test_iter 30000 2d cyclist --> easy: 0.6827, mod: 0.4980, hard: 0.4247
[INFO]: 2024-04-04 20:18:07,973 test_iter 30000 gr cyclist --> easy: 0.0654, mod: 0.0456, hard: 0.0441
[INFO]: 2024-04-04 20:18:07,973 test_iter 30000 3d cyclist --> easy: 0.0566, mod: 0.0379, hard: 0.0353
[INFO]: 2024-04-04 20:22:56,742 iter: 30250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0253, cls: 0.0220, iou: 0.0486), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 6.7h
[INFO]: 2024-04-04 20:27:48,414 iter: 30500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0267, cls: 0.0227, iou: 0.0519), misc (ry: 0.09, z: 0.21), dt: 1.22, eta: 6.6h
[INFO]: 2024-04-04 20:32:37,811 iter: 30750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0251, cls: 0.0217, iou: 0.0497), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 6.5h
[INFO]: 2024-04-04 20:37:28,962 iter: 31000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0252, cls: 0.0214, iou: 0.0501), misc (ry: 0.09, z: 0.21), dt: 1.22, eta: 6.5h
[INFO]: 2024-04-04 20:42:23,523 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0234, iou: 0.0538), misc (ry: 0.09, z: 0.22), dt: 1.22, eta: 6.4h
[INFO]: 2024-04-04 20:47:14,200 iter: 31500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0260, cls: 0.0212, iou: 0.0498), misc (ry: 0.08, z: 0.21), dt: 1.22, eta: 6.3h
[INFO]: 2024-04-04 20:52:04,941 iter: 31750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0257, cls: 0.0212, iou: 0.0500), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 6.2h
[INFO]: 2024-04-04 20:57:00,557 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0261, cls: 0.0231, iou: 0.0480), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 6.1h
[INFO]: 2024-04-04 21:01:50,204 iter: 32250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0253, cls: 0.0221, iou: 0.0482), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 6.0h
[INFO]: 2024-04-04 21:06:38,970 iter: 32500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0255, cls: 0.0210, iou: 0.0489), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 5.9h
[INFO]: 2024-04-04 21:11:31,631 iter: 32750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0233, cls: 0.0210, iou: 0.0463), misc (ry: 0.08, z: 0.19), dt: 1.22, eta: 5.8h
[INFO]: 2024-04-04 21:16:25,471 iter: 33000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0255, cls: 0.0222, iou: 0.0488), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 5.8h
[INFO]: 2024-04-04 21:21:19,620 iter: 33250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0237, cls: 0.0213, iou: 0.0466), misc (ry: 0.08, z: 0.19), dt: 1.22, eta: 5.7h
[INFO]: 2024-04-04 21:26:13,028 iter: 33500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0227, cls: 0.0215, iou: 0.0457), misc (ry: 0.08, z: 0.19), dt: 1.22, eta: 5.6h
[INFO]: 2024-04-04 21:31:04,177 iter: 33750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0275, cls: 0.0213, iou: 0.0486), misc (ry: 0.09, z: 0.21), dt: 1.22, eta: 5.5h
[INFO]: 2024-04-04 21:35:55,226 iter: 34000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0242, cls: 0.0210, iou: 0.0469), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 5.4h
[INFO]: 2024-04-04 21:40:48,690 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0275, cls: 0.0228, iou: 0.0491), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 5.3h
[INFO]: 2024-04-04 21:45:37,416 iter: 34500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0248, cls: 0.0218, iou: 0.0464), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 5.2h
[INFO]: 2024-04-04 21:50:32,018 iter: 34750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0225, cls: 0.0215, iou: 0.0455), misc (ry: 0.08, z: 0.19), dt: 1.22, eta: 5.2h
[INFO]: 2024-04-04 21:55:23,746 iter: 35000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0213, cls: 0.0204, iou: 0.0448), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 5.1h
[INFO]: 2024-04-04 22:00:15,363 iter: 35250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0241, cls: 0.0211, iou: 0.0459), misc (ry: 0.08, z: 0.20), dt: 1.22, eta: 5.0h
[INFO]: 2024-04-04 22:05:07,411 iter: 35500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0217, cls: 0.0216, iou: 0.0448), misc (ry: 0.08, z: 0.19), dt: 1.22, eta: 4.9h
[INFO]: 2024-04-04 22:09:58,889 iter: 35750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0221, cls: 0.0211, iou: 0.0457), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 4.8h
[INFO]: 2024-04-04 22:14:47,443 iter: 36000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0228, cls: 0.0206, iou: 0.0445), misc (ry: 0.08, z: 0.21), dt: 1.21, eta: 4.7h
[INFO]: 2024-04-04 22:19:43,257 iter: 36250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0216, cls: 0.0215, iou: 0.0430), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 4.6h
[INFO]: 2024-04-04 22:24:38,862 iter: 36500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0228, cls: 0.0206, iou: 0.0448), misc (ry: 0.08, z: 0.19), dt: 1.21, eta: 4.6h
[INFO]: 2024-04-04 22:29:29,675 iter: 36750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0202, cls: 0.0208, iou: 0.0425), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 4.5h
[INFO]: 2024-04-04 22:34:25,867 iter: 37000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0194, cls: 0.0204, iou: 0.0412), misc (ry: 0.07, z: 0.17), dt: 1.21, eta: 4.4h
[INFO]: 2024-04-04 22:39:17,471 iter: 37250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0204, cls: 0.0211, iou: 0.0429), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 4.3h
[INFO]: 2024-04-04 22:44:08,126 iter: 37500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0214, cls: 0.0212, iou: 0.0433), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 4.2h
[INFO]: 2024-04-04 22:48:59,575 iter: 37750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0195, cls: 0.0203, iou: 0.0410), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 4.1h
[INFO]: 2024-04-04 22:53:51,040 iter: 38000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0193, cls: 0.0206, iou: 0.0409), misc (ry: 0.07, z: 0.17), dt: 1.21, eta: 4.0h
[INFO]: 2024-04-04 22:58:40,910 iter: 38250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0209, cls: 0.0210, iou: 0.0417), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 4.0h
[INFO]: 2024-04-04 23:03:30,743 iter: 38500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0194, cls: 0.0198, iou: 0.0392), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 3.9h
[INFO]: 2024-04-04 23:08:17,679 iter: 38750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0185, cls: 0.0200, iou: 0.0396), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 3.8h
[INFO]: 2024-04-04 23:13:07,557 iter: 39000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0216, cls: 0.0212, iou: 0.0409), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 3.7h
[INFO]: 2024-04-04 23:17:59,742 iter: 39250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0203, cls: 0.0208, iou: 0.0407), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 3.6h
[INFO]: 2024-04-04 23:22:51,221 iter: 39500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0190, cls: 0.0202, iou: 0.0402), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 3.5h
[INFO]: 2024-04-04 23:27:39,738 iter: 39750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0199, cls: 0.0197, iou: 0.0396), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 3.4h
[INFO]: 2024-04-04 23:32:33,701 iter: 40000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0199, cls: 0.0206, iou: 0.0396), misc (ry: 0.07, z: 0.17), dt: 1.21, eta: 3.4h
[INFO]: 2024-04-04 23:42:04,088 test_iter 40000 2d car --> easy: 0.9280, mod: 0.8476, hard: 0.6834
[INFO]: 2024-04-04 23:42:04,089 test_iter 40000 gr car --> easy: 0.2332, mod: 0.1918, hard: 0.1563
[INFO]: 2024-04-04 23:42:04,089 test_iter 40000 3d car --> easy: 0.1663, mod: 0.1400, hard: 0.1228
[INFO]: 2024-04-04 23:42:04,090 test_iter 40000 2d pedestrian --> easy: 0.7392, mod: 0.5940, hard: 0.5116
[INFO]: 2024-04-04 23:42:04,090 test_iter 40000 gr pedestrian --> easy: 0.0389, mod: 0.0444, hard: 0.0418
[INFO]: 2024-04-04 23:42:04,091 test_iter 40000 3d pedestrian --> easy: 0.0320, mod: 0.0378, hard: 0.0309
[INFO]: 2024-04-04 23:42:04,091 test_iter 40000 2d cyclist --> easy: 0.6982, mod: 0.5087, hard: 0.4350
[INFO]: 2024-04-04 23:42:04,092 test_iter 40000 gr cyclist --> easy: 0.0546, mod: 0.0368, hard: 0.0357
[INFO]: 2024-04-04 23:42:04,092 test_iter 40000 3d cyclist --> easy: 0.0360, mod: 0.0313, hard: 0.0309
[INFO]: 2024-04-04 23:46:58,287 iter: 40250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0179, cls: 0.0203, iou: 0.0386), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 3.3h
[INFO]: 2024-04-04 23:51:52,436 iter: 40500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0191, cls: 0.0208, iou: 0.0394), misc (ry: 0.08, z: 0.17), dt: 1.22, eta: 3.2h
[INFO]: 2024-04-04 23:56:40,310 iter: 40750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0181, cls: 0.0197, iou: 0.0378), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 3.1h
[INFO]: 2024-04-05 00:01:34,178 iter: 41000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0178, cls: 0.0197, iou: 0.0373), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 3.1h
[INFO]: 2024-04-05 00:06:29,604 iter: 41250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0177, cls: 0.0201, iou: 0.0362), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 3.0h
[INFO]: 2024-04-05 00:11:26,960 iter: 41500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0200, cls: 0.0210, iou: 0.0375), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 2.9h
[INFO]: 2024-04-05 00:16:16,743 iter: 41750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0180, cls: 0.0195, iou: 0.0363), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 2.8h
[INFO]: 2024-04-05 00:21:07,283 iter: 42000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0175, cls: 0.0195, iou: 0.0358), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.7h
[INFO]: 2024-04-05 00:26:01,356 iter: 42250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0191, cls: 0.0199, iou: 0.0363), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 2.6h
[INFO]: 2024-04-05 00:30:53,988 iter: 42500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0162, cls: 0.0196, iou: 0.0352), misc (ry: 0.07, z: 0.16), dt: 1.22, eta: 2.5h
[INFO]: 2024-04-05 00:35:46,726 iter: 42750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0170, cls: 0.0196, iou: 0.0354), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.5h
[INFO]: 2024-04-05 00:40:35,588 iter: 43000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0148, cls: 0.0183, iou: 0.0332), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.4h
[INFO]: 2024-04-05 00:45:27,649 iter: 43250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0152, cls: 0.0192, iou: 0.0337), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.3h
[INFO]: 2024-04-05 00:50:19,606 iter: 43500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0158, cls: 0.0197, iou: 0.0332), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.2h
[INFO]: 2024-04-05 00:55:10,215 iter: 43750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0148, cls: 0.0190, iou: 0.0327), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.1h
[INFO]: 2024-04-05 01:00:01,697 iter: 44000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0170, cls: 0.0204, iou: 0.0345), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.0h
[INFO]: 2024-04-05 01:04:55,083 iter: 44250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0167, cls: 0.0195, iou: 0.0338), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.9h
[INFO]: 2024-04-05 01:09:44,632 iter: 44500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0154, cls: 0.0184, iou: 0.0322), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.9h
[INFO]: 2024-04-05 01:14:36,369 iter: 44750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0171, cls: 0.0198, iou: 0.0330), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.8h
[INFO]: 2024-04-05 01:19:27,231 iter: 45000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0170, cls: 0.0193, iou: 0.0330), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.7h
[INFO]: 2024-04-05 01:24:22,227 iter: 45250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0162, cls: 0.0200, iou: 0.0329), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.6h
[INFO]: 2024-04-05 01:29:15,335 iter: 45500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0150, cls: 0.0190, iou: 0.0314), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.5h
[INFO]: 2024-04-05 01:34:04,764 iter: 45750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0157, cls: 0.0194, iou: 0.0316), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.4h
[INFO]: 2024-04-05 01:39:00,715 iter: 46000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0144, cls: 0.0183, iou: 0.0302), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.4h
[INFO]: 2024-04-05 01:43:54,184 iter: 46250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0160, cls: 0.0193, iou: 0.0311), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.3h
[INFO]: 2024-04-05 01:48:47,762 iter: 46500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0153, cls: 0.0195, iou: 0.0302), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.2h
[INFO]: 2024-04-05 01:53:40,066 iter: 46750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0141, cls: 0.0186, iou: 0.0298), misc (ry: 0.06, z: 0.14), dt: 1.22, eta: 1.1h
[INFO]: 2024-04-05 01:58:35,770 iter: 47000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0162, cls: 0.0193, iou: 0.0307), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.0h
[INFO]: 2024-04-05 02:03:26,682 iter: 47250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0154, cls: 0.0188, iou: 0.0303), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 55.7m
[INFO]: 2024-04-05 02:08:19,509 iter: 47500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0133, cls: 0.0191, iou: 0.0289), misc (ry: 0.06, z: 0.14), dt: 1.22, eta: 50.7m
[INFO]: 2024-04-05 02:13:09,142 iter: 47750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0169, cls: 0.0192, iou: 0.0310), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 45.6m
[INFO]: 2024-04-05 02:17:58,537 iter: 48000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0150, cls: 0.0186, iou: 0.0301), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 40.5m
[INFO]: 2024-04-05 02:22:50,378 iter: 48250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0155, cls: 0.0187, iou: 0.0301), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 35.4m
[INFO]: 2024-04-05 02:27:43,275 iter: 48500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0160, cls: 0.0194, iou: 0.0300), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 30.4m
[INFO]: 2024-04-05 02:32:34,667 iter: 48750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0153, cls: 0.0196, iou: 0.0296), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 25.3m
[INFO]: 2024-04-05 02:37:25,518 iter: 49000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0144, cls: 0.0181, iou: 0.0283), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 20.3m
[INFO]: 2024-04-05 02:42:17,074 iter: 49250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0160, cls: 0.0194, iou: 0.0302), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 15.2m
[INFO]: 2024-04-05 02:47:07,241 iter: 49500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0150, cls: 0.0194, iou: 0.0287), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 10.1m
[INFO]: 2024-04-05 02:51:58,892 iter: 49750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0147, cls: 0.0190, iou: 0.0290), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 5.1m
[INFO]: 2024-04-05 02:56:53,890 iter: 50000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0139, cls: 0.0186, iou: 0.0285), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.2s
[INFO]: 2024-04-05 03:06:15,561 test_iter 50000 2d car --> easy: 0.9248, mod: 0.8472, hard: 0.6819
[INFO]: 2024-04-05 03:06:15,562 test_iter 50000 gr car --> easy: 0.2503, mod: 0.2039, hard: 0.1685
[INFO]: 2024-04-05 03:06:15,562 test_iter 50000 3d car --> easy: 0.1745, mod: 0.1463, hard: 0.1281
[INFO]: 2024-04-05 03:06:15,563 test_iter 50000 2d pedestrian --> easy: 0.7386, mod: 0.5922, hard: 0.5077
[INFO]: 2024-04-05 03:06:15,563 test_iter 50000 gr pedestrian --> easy: 0.0381, mod: 0.0467, hard: 0.0411
[INFO]: 2024-04-05 03:06:15,563 test_iter 50000 3d pedestrian --> easy: 0.0345, mod: 0.0409, hard: 0.0411
[INFO]: 2024-04-05 03:06:15,564 test_iter 50000 2d cyclist --> easy: 0.6903, mod: 0.4315, hard: 0.4288
[INFO]: 2024-04-05 03:06:15,564 test_iter 50000 gr cyclist --> easy: 0.0696, mod: 0.0504, hard: 0.0479
[INFO]: 2024-04-05 03:06:15,565 test_iter 50000 3d cyclist --> easy: 0.0590, mod: 0.0419, hard: 0.0412
