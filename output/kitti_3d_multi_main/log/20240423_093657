[INFO]: 2024-04-23 09:36:57,055 ==开始处理数据集==
[INFO]: 2024-04-23 09:36:57,055 载入imdb: kitti_split1
[INFO]: 2024-04-23 09:37:01,535 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-23 09:37:01,535 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-23 09:37:03,877 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-23 09:37:03,877 ==数据集处理完毕==
[INFO]: 2024-04-23 09:37:06,881 ==开始生成anchors==
[INFO]: 2024-04-23 09:37:07,446 ==anchors生成完毕==
[INFO]: 2024-04-23 09:37:10,451 ==开始计算bbox参数==
[INFO]: 2024-04-23 09:37:10,451 计算bbox的回归均值..
[INFO]: 2024-04-23 09:40:07,908 计算bbox的回归标准差..
[INFO]: 2024-04-23 09:43:03,681 使用 814041 个边界框,平均标准差为 0.6826
[INFO]: 2024-04-23 09:43:03,682 ==bbox参数计算完毕==
[INFO]: 2024-04-23 09:43:11,708 设置保存完成
[INFO]: 2024-04-23 09:43:14,711 训练配置一览
[INFO]: 2024-04-23 09:43:16,720 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               114514                                  
    cuda_seed:              114514                                  
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-04-23 09:43:22,369 装载完成
[INFO]: 2024-04-23 09:43:25,372 神经网络结构一览
[INFO]: 2024-04-23 09:43:27,374 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (CDF): Sequential(
      (0): RefConv(
        (convmap): Conv2d(1048576, 1048576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1048576, bias=False)
      )
    )
    (prop_feats): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(1024, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ReLU(inplace=True)
      (2): Sequential(
        (0): RefConv(
          (convmap): Conv2d(1048576, 1048576, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=1048576, bias=False)
        )
      )
      (3): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(32768, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-23 09:43:27,402 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-04-23 09:46:39,336 iter: 250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4709, cls: 0.0768, iou: 0.1715), misc (ry: 0.57, z: 0.99), dt: 0.77, eta: 10.6h
[INFO]: 2024-04-23 09:49:46,952 iter: 500, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.6030, cls: 0.0991, iou: 0.1989), misc (ry: 0.63, z: 1.16), dt: 0.76, eta: 10.5h
[INFO]: 2024-04-23 09:52:53,274 iter: 750, acc (bg: 1.00, fg: 0.86, iou: 0.79), loss (bbox_3d: 0.9167, cls: 0.1827, iou: 0.2502), misc (ry: 0.89, z: 1.30), dt: 0.76, eta: 10.3h
[INFO]: 2024-04-23 09:55:59,008 iter: 1000, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6554, cls: 0.1132, iou: 0.2120), misc (ry: 0.64, z: 1.05), dt: 0.75, eta: 10.2h
[INFO]: 2024-04-23 09:59:02,209 iter: 1250, acc (bg: 1.00, fg: 0.87, iou: 0.80), loss (bbox_3d: 0.7815, cls: 0.1653, iou: 0.2281), misc (ry: 0.78, z: 1.13), dt: 0.75, eta: 10.1h
[INFO]: 2024-04-23 10:02:06,209 iter: 1500, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6754, cls: 0.1128, iou: 0.2089), misc (ry: 0.78, z: 1.04), dt: 0.75, eta: 10.1h
[INFO]: 2024-04-23 10:05:13,228 iter: 1750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5507, cls: 0.1010, iou: 0.1968), misc (ry: 0.58, z: 0.91), dt: 0.75, eta: 10.0h
[INFO]: 2024-04-23 10:08:15,196 iter: 2000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4830, cls: 0.0841, iou: 0.1815), misc (ry: 0.50, z: 0.90), dt: 0.74, eta: 9.9h
[INFO]: 2024-04-23 10:11:18,107 iter: 2250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4891, cls: 0.0793, iou: 0.1770), misc (ry: 0.59, z: 0.88), dt: 0.74, eta: 9.9h
[INFO]: 2024-04-23 10:14:20,158 iter: 2500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3949, cls: 0.0666, iou: 0.1658), misc (ry: 0.45, z: 0.81), dt: 0.74, eta: 9.8h
[INFO]: 2024-04-23 10:17:23,041 iter: 2750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4217, cls: 0.0730, iou: 0.1647), misc (ry: 0.47, z: 0.80), dt: 0.74, eta: 9.7h
[INFO]: 2024-04-23 10:20:26,646 iter: 3000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3713, cls: 0.0769, iou: 0.1674), misc (ry: 0.44, z: 0.72), dt: 0.74, eta: 9.7h
[INFO]: 2024-04-23 10:23:27,861 iter: 3250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3050, cls: 0.0599, iou: 0.1511), misc (ry: 0.35, z: 0.67), dt: 0.74, eta: 9.6h
[INFO]: 2024-04-23 10:26:28,186 iter: 3500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3814, cls: 0.0698, iou: 0.1612), misc (ry: 0.43, z: 0.74), dt: 0.74, eta: 9.5h
[INFO]: 2024-04-23 10:29:30,860 iter: 3750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3397, cls: 0.0634, iou: 0.1587), misc (ry: 0.41, z: 0.79), dt: 0.74, eta: 9.5h
[INFO]: 2024-04-23 10:32:35,133 iter: 4000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3964, cls: 0.0687, iou: 0.1628), misc (ry: 0.48, z: 0.78), dt: 0.74, eta: 9.4h
[INFO]: 2024-04-23 10:35:36,912 iter: 4250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3050, cls: 0.0650, iou: 0.1568), misc (ry: 0.42, z: 0.64), dt: 0.74, eta: 9.4h
[INFO]: 2024-04-23 10:38:39,732 iter: 4500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3760, cls: 0.0730, iou: 0.1639), misc (ry: 0.46, z: 0.80), dt: 0.74, eta: 9.3h
[INFO]: 2024-04-23 10:41:42,177 iter: 4750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2976, cls: 0.0613, iou: 0.1536), misc (ry: 0.36, z: 0.64), dt: 0.74, eta: 9.2h
[INFO]: 2024-04-23 10:44:44,737 iter: 5000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2803, cls: 0.0584, iou: 0.1457), misc (ry: 0.35, z: 0.65), dt: 0.74, eta: 9.2h
[INFO]: 2024-04-23 10:47:44,924 iter: 5250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2897, cls: 0.0612, iou: 0.1465), misc (ry: 0.38, z: 0.61), dt: 0.73, eta: 9.1h
[INFO]: 2024-04-23 10:50:46,493 iter: 5500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2853, cls: 0.0574, iou: 0.1448), misc (ry: 0.36, z: 0.65), dt: 0.73, eta: 9.1h
[INFO]: 2024-04-23 10:53:51,295 iter: 5750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2475, cls: 0.0536, iou: 0.1381), misc (ry: 0.32, z: 0.59), dt: 0.73, eta: 9.0h
[INFO]: 2024-04-23 10:56:53,302 iter: 6000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2778, cls: 0.0547, iou: 0.1423), misc (ry: 0.39, z: 0.62), dt: 0.73, eta: 9.0h
[INFO]: 2024-04-23 10:59:54,914 iter: 6250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2693, cls: 0.0543, iou: 0.1444), misc (ry: 0.35, z: 0.67), dt: 0.73, eta: 8.9h
[INFO]: 2024-04-23 11:02:56,344 iter: 6500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2506, cls: 0.0521, iou: 0.1381), misc (ry: 0.32, z: 0.67), dt: 0.73, eta: 8.9h
[INFO]: 2024-04-23 11:05:59,320 iter: 6750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2584, cls: 0.0485, iou: 0.1390), misc (ry: 0.33, z: 0.67), dt: 0.73, eta: 8.8h
[INFO]: 2024-04-23 11:09:05,007 iter: 7000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2549, cls: 0.0539, iou: 0.1405), misc (ry: 0.34, z: 0.64), dt: 0.73, eta: 8.8h
[INFO]: 2024-04-23 11:12:11,330 iter: 7250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2242, cls: 0.0487, iou: 0.1327), misc (ry: 0.26, z: 0.60), dt: 0.73, eta: 8.7h
[INFO]: 2024-04-23 11:15:16,577 iter: 7500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2717, cls: 0.0520, iou: 0.1400), misc (ry: 0.40, z: 0.64), dt: 0.73, eta: 8.7h
[INFO]: 2024-04-23 11:18:21,418 iter: 7750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2284, cls: 0.0488, iou: 0.1332), misc (ry: 0.31, z: 0.61), dt: 0.73, eta: 8.6h
[INFO]: 2024-04-23 11:21:28,911 iter: 8000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2280, cls: 0.0523, iou: 0.1348), misc (ry: 0.30, z: 0.61), dt: 0.74, eta: 8.6h
[INFO]: 2024-04-23 11:24:37,751 iter: 8250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2819, cls: 0.0648, iou: 0.1462), misc (ry: 0.35, z: 0.62), dt: 0.74, eta: 8.5h
[INFO]: 2024-04-23 11:27:46,135 iter: 8500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2352, cls: 0.0517, iou: 0.1380), misc (ry: 0.27, z: 0.63), dt: 0.74, eta: 8.5h
[INFO]: 2024-04-23 11:30:56,812 iter: 8750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1987, cls: 0.0481, iou: 0.1255), misc (ry: 0.29, z: 0.56), dt: 0.74, eta: 8.4h
[INFO]: 2024-04-23 11:34:06,708 iter: 9000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1828, cls: 0.0479, iou: 0.1254), misc (ry: 0.25, z: 0.53), dt: 0.74, eta: 8.4h
[INFO]: 2024-04-23 11:37:14,912 iter: 9250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1713, cls: 0.0435, iou: 0.1218), misc (ry: 0.24, z: 0.55), dt: 0.74, eta: 8.4h
[INFO]: 2024-04-23 11:40:23,331 iter: 9500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1842, cls: 0.0424, iou: 0.1244), misc (ry: 0.27, z: 0.57), dt: 0.74, eta: 8.3h
[INFO]: 2024-04-23 11:43:35,039 iter: 9750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1915, cls: 0.0471, iou: 0.1257), misc (ry: 0.29, z: 0.50), dt: 0.74, eta: 8.3h
[INFO]: 2024-04-23 11:46:42,212 iter: 10000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1598, cls: 0.0423, iou: 0.1220), misc (ry: 0.24, z: 0.48), dt: 0.74, eta: 8.2h
[INFO]: 2024-04-23 11:57:09,944 test_iter 10000 2d car --> easy: 0.9789, mod: 0.8943, hard: 0.8017
[INFO]: 2024-04-23 11:57:09,945 test_iter 10000 gr car --> easy: 0.3636, mod: 0.2715, hard: 0.2208
[INFO]: 2024-04-23 11:57:09,946 test_iter 10000 3d car --> easy: 0.3194, mod: 0.2421, hard: 0.2001
[INFO]: 2024-04-23 11:57:09,946 test_iter 10000 2d pedestrian --> easy: 0.6324, mod: 0.5628, hard: 0.4817
[INFO]: 2024-04-23 11:57:09,947 test_iter 10000 gr pedestrian --> easy: 0.0341, mod: 0.0353, hard: 0.0312
[INFO]: 2024-04-23 11:57:09,948 test_iter 10000 3d pedestrian --> easy: 0.0317, mod: 0.0298, hard: 0.0279
[INFO]: 2024-04-23 11:57:09,948 test_iter 10000 2d cyclist --> easy: 0.6290, mod: 0.4148, hard: 0.4082
[INFO]: 2024-04-23 11:57:09,949 test_iter 10000 gr cyclist --> easy: 0.0156, mod: 0.0101, hard: 0.0101
[INFO]: 2024-04-23 11:57:09,949 test_iter 10000 3d cyclist --> easy: 0.0133, mod: 0.0101, hard: 0.0101
[INFO]: 2024-04-23 12:00:15,317 iter: 10250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1607, cls: 0.0434, iou: 0.1179), misc (ry: 0.23, z: 0.51), dt: 0.80, eta: 8.8h
[INFO]: 2024-04-23 12:03:21,135 iter: 10500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1827, cls: 0.0451, iou: 0.1230), misc (ry: 0.26, z: 0.53), dt: 0.80, eta: 8.8h
[INFO]: 2024-04-23 12:06:23,975 iter: 10750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1925, cls: 0.0453, iou: 0.1227), misc (ry: 0.30, z: 0.50), dt: 0.80, eta: 8.7h
[INFO]: 2024-04-23 12:09:25,562 iter: 11000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1591, cls: 0.0446, iou: 0.1198), misc (ry: 0.23, z: 0.51), dt: 0.80, eta: 8.6h
[INFO]: 2024-04-23 12:12:27,086 iter: 11250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1528, cls: 0.0406, iou: 0.1142), misc (ry: 0.21, z: 0.44), dt: 0.79, eta: 8.6h
[INFO]: 2024-04-23 12:15:29,763 iter: 11500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1496, cls: 0.0423, iou: 0.1197), misc (ry: 0.23, z: 0.47), dt: 0.79, eta: 8.5h
[INFO]: 2024-04-23 12:18:35,431 iter: 11750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1552, cls: 0.0402, iou: 0.1170), misc (ry: 0.24, z: 0.47), dt: 0.79, eta: 8.4h
[INFO]: 2024-04-23 12:21:40,534 iter: 12000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1633, cls: 0.0385, iou: 0.1185), misc (ry: 0.26, z: 0.50), dt: 0.79, eta: 8.4h
[INFO]: 2024-04-23 12:24:48,208 iter: 12250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1601, cls: 0.0414, iou: 0.1202), misc (ry: 0.24, z: 0.53), dt: 0.79, eta: 8.3h
[INFO]: 2024-04-23 12:27:55,728 iter: 12500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1488, cls: 0.0398, iou: 0.1159), misc (ry: 0.22, z: 0.49), dt: 0.79, eta: 8.2h
[INFO]: 2024-04-23 12:31:04,905 iter: 12750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1568, cls: 0.0412, iou: 0.1191), misc (ry: 0.25, z: 0.54), dt: 0.79, eta: 8.2h
[INFO]: 2024-04-23 12:34:07,912 iter: 13000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1340, cls: 0.0380, iou: 0.1134), misc (ry: 0.20, z: 0.48), dt: 0.79, eta: 8.1h
[INFO]: 2024-04-23 12:37:09,338 iter: 13250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1273, cls: 0.0372, iou: 0.1047), misc (ry: 0.22, z: 0.43), dt: 0.79, eta: 8.0h
[INFO]: 2024-04-23 12:40:15,947 iter: 13500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1964, cls: 0.0456, iou: 0.1183), misc (ry: 0.33, z: 0.52), dt: 0.79, eta: 8.0h
[INFO]: 2024-04-23 12:43:21,512 iter: 13750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1474, cls: 0.0420, iou: 0.1145), misc (ry: 0.24, z: 0.46), dt: 0.79, eta: 7.9h
[INFO]: 2024-04-23 12:46:25,370 iter: 14000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1911, cls: 0.0441, iou: 0.1186), misc (ry: 0.30, z: 0.52), dt: 0.78, eta: 7.8h
[INFO]: 2024-04-23 12:49:36,767 iter: 14250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1493, cls: 0.0394, iou: 0.1146), misc (ry: 0.24, z: 0.47), dt: 0.78, eta: 7.8h
[INFO]: 2024-04-23 12:52:42,921 iter: 14500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1501, cls: 0.0409, iou: 0.1164), misc (ry: 0.23, z: 0.47), dt: 0.78, eta: 7.7h
[INFO]: 2024-04-23 12:55:48,420 iter: 14750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1645, cls: 0.0401, iou: 0.1115), misc (ry: 0.31, z: 0.49), dt: 0.78, eta: 7.7h
[INFO]: 2024-04-23 12:58:54,064 iter: 15000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1443, cls: 0.0380, iou: 0.1141), misc (ry: 0.22, z: 0.48), dt: 0.78, eta: 7.6h
[INFO]: 2024-04-23 13:01:56,230 iter: 15250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1449, cls: 0.0394, iou: 0.1156), misc (ry: 0.23, z: 0.51), dt: 0.78, eta: 7.5h
[INFO]: 2024-04-23 13:04:58,937 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1371, cls: 0.0365, iou: 0.1097), misc (ry: 0.22, z: 0.50), dt: 0.78, eta: 7.5h
[INFO]: 2024-04-23 13:08:03,528 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1220, cls: 0.0372, iou: 0.1073), misc (ry: 0.20, z: 0.42), dt: 0.78, eta: 7.4h
[INFO]: 2024-04-23 13:11:06,229 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1284, cls: 0.0364, iou: 0.1074), misc (ry: 0.24, z: 0.43), dt: 0.78, eta: 7.4h
[INFO]: 2024-04-23 13:14:10,986 iter: 16250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1400, cls: 0.0367, iou: 0.1119), misc (ry: 0.26, z: 0.50), dt: 0.78, eta: 7.3h
[INFO]: 2024-04-23 13:17:13,169 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1150, cls: 0.0352, iou: 0.1060), misc (ry: 0.19, z: 0.43), dt: 0.78, eta: 7.2h
[INFO]: 2024-04-23 13:20:16,083 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1116, cls: 0.0361, iou: 0.1054), misc (ry: 0.18, z: 0.41), dt: 0.78, eta: 7.2h
[INFO]: 2024-04-23 13:23:21,568 iter: 17000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1253, cls: 0.0378, iou: 0.1085), misc (ry: 0.19, z: 0.44), dt: 0.78, eta: 7.1h
[INFO]: 2024-04-23 13:26:28,201 iter: 17250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1044, cls: 0.0342, iou: 0.1004), misc (ry: 0.18, z: 0.42), dt: 0.78, eta: 7.1h
[INFO]: 2024-04-23 13:29:36,229 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1113, cls: 0.0350, iou: 0.1011), misc (ry: 0.19, z: 0.41), dt: 0.78, eta: 7.0h
[INFO]: 2024-04-23 13:32:42,919 iter: 17750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1166, cls: 0.0339, iou: 0.1005), misc (ry: 0.22, z: 0.40), dt: 0.77, eta: 6.9h
[INFO]: 2024-04-23 13:35:47,832 iter: 18000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1156, cls: 0.0359, iou: 0.1043), misc (ry: 0.18, z: 0.47), dt: 0.77, eta: 6.9h
[INFO]: 2024-04-23 13:38:54,636 iter: 18250, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1124, cls: 0.0346, iou: 0.1041), misc (ry: 0.18, z: 0.42), dt: 0.77, eta: 6.8h
[INFO]: 2024-04-23 13:42:00,506 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1046, cls: 0.0333, iou: 0.1014), misc (ry: 0.18, z: 0.42), dt: 0.77, eta: 6.8h
[INFO]: 2024-04-23 13:45:09,596 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1087, cls: 0.0329, iou: 0.1019), misc (ry: 0.20, z: 0.44), dt: 0.77, eta: 6.7h
[INFO]: 2024-04-23 13:48:18,178 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1059, cls: 0.0332, iou: 0.0979), misc (ry: 0.19, z: 0.40), dt: 0.77, eta: 6.7h
[INFO]: 2024-04-23 13:51:26,285 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1050, cls: 0.0329, iou: 0.0991), misc (ry: 0.19, z: 0.40), dt: 0.77, eta: 6.6h
[INFO]: 2024-04-23 13:54:35,879 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0989, cls: 0.0350, iou: 0.0983), misc (ry: 0.18, z: 0.39), dt: 0.77, eta: 6.5h
[INFO]: 2024-04-23 13:57:48,035 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0899, cls: 0.0337, iou: 0.0969), misc (ry: 0.17, z: 0.35), dt: 0.77, eta: 6.5h
[INFO]: 2024-04-23 14:00:50,628 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0981, cls: 0.0342, iou: 0.0968), misc (ry: 0.19, z: 0.40), dt: 0.77, eta: 6.4h
[INFO]: 2024-04-23 14:11:05,516 test_iter 20000 2d car --> easy: 0.9757, mod: 0.8941, hard: 0.8027
[INFO]: 2024-04-23 14:11:05,518 test_iter 20000 gr car --> easy: 0.4688, mod: 0.3760, hard: 0.3147
[INFO]: 2024-04-23 14:11:05,518 test_iter 20000 3d car --> easy: 0.4317, mod: 0.3242, hard: 0.2671
[INFO]: 2024-04-23 14:11:05,519 test_iter 20000 2d pedestrian --> easy: 0.6541, mod: 0.5761, hard: 0.4962
[INFO]: 2024-04-23 14:11:05,519 test_iter 20000 gr pedestrian --> easy: 0.1142, mod: 0.1116, hard: 0.1080
[INFO]: 2024-04-23 14:11:05,520 test_iter 20000 3d pedestrian --> easy: 0.1079, mod: 0.1078, hard: 0.1032
[INFO]: 2024-04-23 14:11:05,521 test_iter 20000 2d cyclist --> easy: 0.7260, mod: 0.4829, hard: 0.4740
[INFO]: 2024-04-23 14:11:05,521 test_iter 20000 gr cyclist --> easy: 0.0228, mod: 0.0120, hard: 0.0122
[INFO]: 2024-04-23 14:11:05,522 test_iter 20000 3d cyclist --> easy: 0.0209, mod: 0.0120, hard: 0.0122
[INFO]: 2024-04-23 14:14:11,233 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0913, cls: 0.0343, iou: 0.0958), misc (ry: 0.17, z: 0.37), dt: 0.80, eta: 6.6h
[INFO]: 2024-04-23 14:17:20,107 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0836, cls: 0.0323, iou: 0.0934), misc (ry: 0.16, z: 0.36), dt: 0.80, eta: 6.6h
[INFO]: 2024-04-23 14:20:26,492 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0887, cls: 0.0328, iou: 0.0957), misc (ry: 0.17, z: 0.37), dt: 0.80, eta: 6.5h
[INFO]: 2024-04-23 14:23:34,422 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0846, cls: 0.0299, iou: 0.0921), misc (ry: 0.16, z: 0.37), dt: 0.80, eta: 6.4h
[INFO]: 2024-04-23 14:26:41,403 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0950, cls: 0.0318, iou: 0.0956), misc (ry: 0.17, z: 0.37), dt: 0.80, eta: 6.4h
[INFO]: 2024-04-23 14:29:47,880 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0818, cls: 0.0316, iou: 0.0890), misc (ry: 0.16, z: 0.35), dt: 0.80, eta: 6.3h
[INFO]: 2024-04-23 14:32:53,616 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0978, cls: 0.0307, iou: 0.0923), misc (ry: 0.21, z: 0.38), dt: 0.80, eta: 6.3h
[INFO]: 2024-04-23 14:36:01,614 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0823, cls: 0.0288, iou: 0.0887), misc (ry: 0.16, z: 0.39), dt: 0.80, eta: 6.2h
[INFO]: 2024-04-23 14:39:10,495 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0862, cls: 0.0302, iou: 0.0898), misc (ry: 0.17, z: 0.42), dt: 0.80, eta: 6.1h
[INFO]: 2024-04-23 14:42:16,276 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0811, cls: 0.0314, iou: 0.0883), misc (ry: 0.17, z: 0.38), dt: 0.80, eta: 6.1h
[INFO]: 2024-04-23 14:45:24,016 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0775, cls: 0.0318, iou: 0.0883), misc (ry: 0.16, z: 0.34), dt: 0.80, eta: 6.0h
[INFO]: 2024-04-23 14:48:30,560 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0774, cls: 0.0290, iou: 0.0856), misc (ry: 0.15, z: 0.33), dt: 0.80, eta: 6.0h
[INFO]: 2024-04-23 14:51:34,912 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0770, cls: 0.0287, iou: 0.0876), misc (ry: 0.16, z: 0.36), dt: 0.80, eta: 5.9h
[INFO]: 2024-04-23 14:54:40,552 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0824, cls: 0.0296, iou: 0.0882), misc (ry: 0.15, z: 0.36), dt: 0.79, eta: 5.8h
[INFO]: 2024-04-23 14:57:47,943 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0777, cls: 0.0291, iou: 0.0864), misc (ry: 0.16, z: 0.36), dt: 0.79, eta: 5.8h
[INFO]: 2024-04-23 15:00:58,360 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0892, cls: 0.0312, iou: 0.0911), misc (ry: 0.17, z: 0.39), dt: 0.79, eta: 5.7h
[INFO]: 2024-04-23 15:04:05,597 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0957, cls: 0.0324, iou: 0.0910), misc (ry: 0.21, z: 0.39), dt: 0.79, eta: 5.7h
[INFO]: 2024-04-23 15:07:14,399 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1001, cls: 0.0328, iou: 0.0931), misc (ry: 0.20, z: 0.38), dt: 0.79, eta: 5.6h
[INFO]: 2024-04-23 15:10:21,970 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0923, cls: 0.0324, iou: 0.0917), misc (ry: 0.20, z: 0.36), dt: 0.79, eta: 5.6h
[INFO]: 2024-04-23 15:13:29,429 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0777, cls: 0.0303, iou: 0.0873), misc (ry: 0.17, z: 0.35), dt: 0.79, eta: 5.5h
[INFO]: 2024-04-23 15:16:42,693 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0294, iou: 0.0866), misc (ry: 0.17, z: 0.34), dt: 0.79, eta: 5.4h
[INFO]: 2024-04-23 15:19:49,137 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0716, cls: 0.0298, iou: 0.0860), misc (ry: 0.16, z: 0.32), dt: 0.79, eta: 5.4h
[INFO]: 2024-04-23 15:22:54,862 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0777, cls: 0.0304, iou: 0.0868), misc (ry: 0.17, z: 0.35), dt: 0.79, eta: 5.3h
[INFO]: 2024-04-23 15:25:59,867 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0301, iou: 0.0859), misc (ry: 0.16, z: 0.39), dt: 0.79, eta: 5.3h
[INFO]: 2024-04-23 15:29:08,979 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0712, cls: 0.0298, iou: 0.0851), misc (ry: 0.16, z: 0.34), dt: 0.79, eta: 5.2h
[INFO]: 2024-04-23 15:32:13,581 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0791, cls: 0.0316, iou: 0.0882), misc (ry: 0.17, z: 0.33), dt: 0.79, eta: 5.2h
[INFO]: 2024-04-23 15:35:17,438 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0780, cls: 0.0308, iou: 0.0883), misc (ry: 0.17, z: 0.35), dt: 0.79, eta: 5.1h
[INFO]: 2024-04-23 15:38:23,997 iter: 27000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0687, cls: 0.0283, iou: 0.0822), misc (ry: 0.14, z: 0.31), dt: 0.79, eta: 5.0h
[INFO]: 2024-04-23 15:41:28,789 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0627, cls: 0.0276, iou: 0.0807), misc (ry: 0.14, z: 0.32), dt: 0.79, eta: 5.0h
[INFO]: 2024-04-23 15:44:35,661 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0642, cls: 0.0286, iou: 0.0834), misc (ry: 0.14, z: 0.32), dt: 0.79, eta: 4.9h
[INFO]: 2024-04-23 15:47:42,919 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0737, cls: 0.0272, iou: 0.0831), misc (ry: 0.15, z: 0.37), dt: 0.79, eta: 4.9h
[INFO]: 2024-04-23 15:50:53,499 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0269, iou: 0.0767), misc (ry: 0.13, z: 0.31), dt: 0.79, eta: 4.8h
[INFO]: 2024-04-23 15:53:56,426 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0667, cls: 0.0276, iou: 0.0818), misc (ry: 0.14, z: 0.34), dt: 0.79, eta: 4.8h
[INFO]: 2024-04-23 15:57:03,384 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0647, cls: 0.0273, iou: 0.0797), misc (ry: 0.14, z: 0.33), dt: 0.79, eta: 4.7h
[INFO]: 2024-04-23 16:00:12,785 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0262, iou: 0.0785), misc (ry: 0.14, z: 0.34), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-23 16:03:18,475 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0624, cls: 0.0288, iou: 0.0777), misc (ry: 0.14, z: 0.30), dt: 0.79, eta: 4.6h
[INFO]: 2024-04-23 16:06:24,647 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0580, cls: 0.0283, iou: 0.0774), misc (ry: 0.13, z: 0.30), dt: 0.79, eta: 4.5h
[INFO]: 2024-04-23 16:09:33,834 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0570, cls: 0.0265, iou: 0.0751), misc (ry: 0.13, z: 0.29), dt: 0.79, eta: 4.5h
[INFO]: 2024-04-23 16:12:38,742 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0570, cls: 0.0269, iou: 0.0782), misc (ry: 0.14, z: 0.30), dt: 0.78, eta: 4.4h
[INFO]: 2024-04-23 16:15:47,003 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0541, cls: 0.0250, iou: 0.0754), misc (ry: 0.13, z: 0.30), dt: 0.78, eta: 4.4h
[INFO]: 2024-04-23 16:26:05,035 test_iter 30000 2d car --> easy: 0.9766, mod: 0.8950, hard: 0.8027
[INFO]: 2024-04-23 16:26:05,037 test_iter 30000 gr car --> easy: 0.5362, mod: 0.3946, hard: 0.3295
[INFO]: 2024-04-23 16:26:05,037 test_iter 30000 3d car --> easy: 0.4685, mod: 0.3401, hard: 0.2795
[INFO]: 2024-04-23 16:26:05,038 test_iter 30000 2d pedestrian --> easy: 0.7345, mod: 0.5958, hard: 0.5114
[INFO]: 2024-04-23 16:26:05,038 test_iter 30000 gr pedestrian --> easy: 0.0353, mod: 0.0396, hard: 0.0339
[INFO]: 2024-04-23 16:26:05,039 test_iter 30000 3d pedestrian --> easy: 0.0302, mod: 0.0324, hard: 0.0271
[INFO]: 2024-04-23 16:26:05,040 test_iter 30000 2d cyclist --> easy: 0.7348, mod: 0.4804, hard: 0.4094
[INFO]: 2024-04-23 16:26:05,040 test_iter 30000 gr cyclist --> easy: 0.0385, mod: 0.0247, hard: 0.0250
[INFO]: 2024-04-23 16:26:05,041 test_iter 30000 3d cyclist --> easy: 0.0301, mod: 0.0238, hard: 0.0246
[INFO]: 2024-04-23 16:29:14,244 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0536, cls: 0.0250, iou: 0.0727), misc (ry: 0.13, z: 0.30), dt: 0.80, eta: 4.4h
[INFO]: 2024-04-23 16:32:22,341 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0584, cls: 0.0263, iou: 0.0765), misc (ry: 0.14, z: 0.31), dt: 0.80, eta: 4.4h
[INFO]: 2024-04-23 16:35:28,212 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0584, cls: 0.0281, iou: 0.0779), misc (ry: 0.14, z: 0.29), dt: 0.80, eta: 4.3h
[INFO]: 2024-04-23 16:38:40,926 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0617, cls: 0.0271, iou: 0.0758), misc (ry: 0.14, z: 0.30), dt: 0.80, eta: 4.2h
[INFO]: 2024-04-23 16:41:49,507 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0494, cls: 0.0247, iou: 0.0716), misc (ry: 0.12, z: 0.29), dt: 0.80, eta: 4.2h
[INFO]: 2024-04-23 16:44:58,023 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0533, cls: 0.0257, iou: 0.0717), misc (ry: 0.13, z: 0.29), dt: 0.80, eta: 4.1h
[INFO]: 2024-04-23 16:48:02,387 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0565, cls: 0.0273, iou: 0.0738), misc (ry: 0.14, z: 0.29), dt: 0.80, eta: 4.1h
[INFO]: 2024-04-23 16:51:11,262 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0548, cls: 0.0261, iou: 0.0729), misc (ry: 0.13, z: 0.30), dt: 0.80, eta: 4.0h
[INFO]: 2024-04-23 16:54:17,653 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0252, iou: 0.0731), misc (ry: 0.13, z: 0.31), dt: 0.80, eta: 4.0h
[INFO]: 2024-04-23 16:57:24,542 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0571, cls: 0.0261, iou: 0.0749), misc (ry: 0.12, z: 0.30), dt: 0.80, eta: 3.9h
[INFO]: 2024-04-23 17:00:35,891 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0547, cls: 0.0276, iou: 0.0722), misc (ry: 0.13, z: 0.28), dt: 0.80, eta: 3.8h
[INFO]: 2024-04-23 17:03:45,792 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0530, cls: 0.0240, iou: 0.0704), misc (ry: 0.12, z: 0.31), dt: 0.80, eta: 3.8h
[INFO]: 2024-04-23 17:06:54,274 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0475, cls: 0.0250, iou: 0.0689), misc (ry: 0.13, z: 0.28), dt: 0.80, eta: 3.7h
[INFO]: 2024-04-23 17:09:58,143 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0523, cls: 0.0269, iou: 0.0723), misc (ry: 0.13, z: 0.29), dt: 0.80, eta: 3.7h
[INFO]: 2024-04-23 17:13:05,142 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0537, cls: 0.0255, iou: 0.0711), misc (ry: 0.13, z: 0.30), dt: 0.80, eta: 3.6h
[INFO]: 2024-04-23 17:16:08,284 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0484, cls: 0.0239, iou: 0.0675), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 3.6h
[INFO]: 2024-04-23 17:19:10,221 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0496, cls: 0.0245, iou: 0.0707), misc (ry: 0.12, z: 0.30), dt: 0.80, eta: 3.5h
[INFO]: 2024-04-23 17:22:18,281 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0489, cls: 0.0252, iou: 0.0698), misc (ry: 0.12, z: 0.27), dt: 0.80, eta: 3.4h
[INFO]: 2024-04-23 17:25:27,120 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0240, iou: 0.0683), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 3.4h
[INFO]: 2024-04-23 17:28:38,895 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0446, cls: 0.0238, iou: 0.0670), misc (ry: 0.12, z: 0.27), dt: 0.80, eta: 3.3h
[INFO]: 2024-04-23 17:31:48,084 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0515, cls: 0.0248, iou: 0.0719), misc (ry: 0.14, z: 0.30), dt: 0.80, eta: 3.3h
[INFO]: 2024-04-23 17:34:54,901 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0237, iou: 0.0670), misc (ry: 0.12, z: 0.26), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-23 17:38:03,618 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0453, cls: 0.0238, iou: 0.0677), misc (ry: 0.12, z: 0.27), dt: 0.80, eta: 3.2h
[INFO]: 2024-04-23 17:41:12,141 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0471, cls: 0.0246, iou: 0.0673), misc (ry: 0.12, z: 0.28), dt: 0.80, eta: 3.1h
[INFO]: 2024-04-23 17:44:20,250 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0457, cls: 0.0245, iou: 0.0659), misc (ry: 0.11, z: 0.28), dt: 0.80, eta: 3.0h
[INFO]: 2024-04-23 17:47:24,487 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0227, iou: 0.0618), misc (ry: 0.11, z: 0.26), dt: 0.80, eta: 3.0h
[INFO]: 2024-04-23 17:50:31,385 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0486, cls: 0.0245, iou: 0.0684), misc (ry: 0.12, z: 0.30), dt: 0.80, eta: 2.9h
[INFO]: 2024-04-23 17:53:35,700 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0251, iou: 0.0664), misc (ry: 0.12, z: 0.27), dt: 0.79, eta: 2.9h
[INFO]: 2024-04-23 17:56:41,260 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0490, cls: 0.0254, iou: 0.0695), misc (ry: 0.12, z: 0.28), dt: 0.79, eta: 2.8h
[INFO]: 2024-04-23 17:59:48,205 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0380, cls: 0.0231, iou: 0.0608), misc (ry: 0.11, z: 0.26), dt: 0.79, eta: 2.8h
[INFO]: 2024-04-23 18:02:54,701 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0401, cls: 0.0236, iou: 0.0631), misc (ry: 0.11, z: 0.25), dt: 0.79, eta: 2.7h
[INFO]: 2024-04-23 18:05:59,968 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0233, iou: 0.0622), misc (ry: 0.12, z: 0.24), dt: 0.79, eta: 2.6h
[INFO]: 2024-04-23 18:09:06,142 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0367, cls: 0.0227, iou: 0.0592), misc (ry: 0.11, z: 0.23), dt: 0.79, eta: 2.6h
[INFO]: 2024-04-23 18:12:08,858 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0395, cls: 0.0232, iou: 0.0613), misc (ry: 0.11, z: 0.24), dt: 0.79, eta: 2.5h
[INFO]: 2024-04-23 18:15:11,536 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0420, cls: 0.0240, iou: 0.0617), misc (ry: 0.11, z: 0.26), dt: 0.79, eta: 2.5h
[INFO]: 2024-04-23 18:18:19,695 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0375, cls: 0.0219, iou: 0.0598), misc (ry: 0.11, z: 0.25), dt: 0.79, eta: 2.4h
[INFO]: 2024-04-23 18:21:33,641 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0354, cls: 0.0222, iou: 0.0583), misc (ry: 0.11, z: 0.25), dt: 0.79, eta: 2.4h
[INFO]: 2024-04-23 18:24:41,565 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0361, cls: 0.0236, iou: 0.0593), misc (ry: 0.10, z: 0.24), dt: 0.79, eta: 2.3h
[INFO]: 2024-04-23 18:27:48,374 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0226, iou: 0.0596), misc (ry: 0.11, z: 0.24), dt: 0.79, eta: 2.3h
[INFO]: 2024-04-23 18:30:54,598 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0377, cls: 0.0228, iou: 0.0607), misc (ry: 0.12, z: 0.23), dt: 0.79, eta: 2.2h
[INFO]: 2024-04-23 18:41:12,059 test_iter 40000 2d car --> easy: 0.9758, mod: 0.8934, hard: 0.8025
[INFO]: 2024-04-23 18:41:12,060 test_iter 40000 gr car --> easy: 0.5635, mod: 0.4209, hard: 0.3487
[INFO]: 2024-04-23 18:41:12,061 test_iter 40000 3d car --> easy: 0.4928, mod: 0.3601, hard: 0.2921
[INFO]: 2024-04-23 18:41:12,062 test_iter 40000 2d pedestrian --> easy: 0.6448, mod: 0.5691, hard: 0.4901
[INFO]: 2024-04-23 18:41:12,062 test_iter 40000 gr pedestrian --> easy: 0.1100, mod: 0.1110, hard: 0.1068
[INFO]: 2024-04-23 18:41:12,063 test_iter 40000 3d pedestrian --> easy: 0.1071, mod: 0.1063, hard: 0.1014
[INFO]: 2024-04-23 18:41:12,063 test_iter 40000 2d cyclist --> easy: 0.7147, mod: 0.4712, hard: 0.4649
[INFO]: 2024-04-23 18:41:12,064 test_iter 40000 gr cyclist --> easy: 0.0430, mod: 0.0301, hard: 0.0276
[INFO]: 2024-04-23 18:41:12,065 test_iter 40000 3d cyclist --> easy: 0.0277, mod: 0.0221, hard: 0.0233
[INFO]: 2024-04-23 18:44:18,541 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0370, cls: 0.0225, iou: 0.0579), misc (ry: 0.11, z: 0.25), dt: 0.81, eta: 2.2h
[INFO]: 2024-04-23 18:47:27,276 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0363, cls: 0.0221, iou: 0.0571), misc (ry: 0.10, z: 0.24), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-23 18:50:33,996 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0355, cls: 0.0214, iou: 0.0584), misc (ry: 0.10, z: 0.24), dt: 0.81, eta: 2.1h
[INFO]: 2024-04-23 18:53:41,608 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0345, cls: 0.0229, iou: 0.0563), misc (ry: 0.11, z: 0.23), dt: 0.81, eta: 2.0h
[INFO]: 2024-04-23 18:56:48,064 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0381, cls: 0.0229, iou: 0.0593), misc (ry: 0.11, z: 0.24), dt: 0.80, eta: 2.0h
[INFO]: 2024-04-23 18:59:53,906 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0357, cls: 0.0220, iou: 0.0573), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.9h
[INFO]: 2024-04-23 19:03:03,151 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0340, cls: 0.0235, iou: 0.0572), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 1.8h
[INFO]: 2024-04-23 19:06:12,385 iter: 42000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0327, cls: 0.0213, iou: 0.0539), misc (ry: 0.11, z: 0.23), dt: 0.80, eta: 1.8h
[INFO]: 2024-04-23 19:09:18,357 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0323, cls: 0.0217, iou: 0.0554), misc (ry: 0.11, z: 0.22), dt: 0.80, eta: 1.7h
[INFO]: 2024-04-23 19:12:23,322 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0346, cls: 0.0225, iou: 0.0558), misc (ry: 0.10, z: 0.23), dt: 0.80, eta: 1.7h
[INFO]: 2024-04-23 19:15:29,490 iter: 42750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0313, cls: 0.0214, iou: 0.0529), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 1.6h
[INFO]: 2024-04-23 19:18:33,395 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0315, cls: 0.0216, iou: 0.0528), misc (ry: 0.09, z: 0.22), dt: 0.80, eta: 1.6h
[INFO]: 2024-04-23 19:21:43,904 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0227, iou: 0.0522), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 1.5h
[INFO]: 2024-04-23 19:24:53,429 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0333, cls: 0.0223, iou: 0.0539), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 1.4h
[INFO]: 2024-04-23 19:28:01,085 iter: 43750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0297, cls: 0.0209, iou: 0.0515), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 1.4h
[INFO]: 2024-04-23 19:31:07,294 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0306, cls: 0.0209, iou: 0.0513), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 1.3h
[INFO]: 2024-04-23 19:34:13,972 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0298, cls: 0.0217, iou: 0.0522), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 1.3h
[INFO]: 2024-04-23 19:37:21,344 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0221, iou: 0.0525), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 1.2h
[INFO]: 2024-04-23 19:40:29,877 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0311, cls: 0.0216, iou: 0.0517), misc (ry: 0.10, z: 0.22), dt: 0.80, eta: 1.2h
[INFO]: 2024-04-23 19:43:36,942 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0303, cls: 0.0218, iou: 0.0505), misc (ry: 0.09, z: 0.21), dt: 0.80, eta: 1.1h
[INFO]: 2024-04-23 19:46:45,423 iter: 45250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0294, cls: 0.0213, iou: 0.0509), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 1.1h
[INFO]: 2024-04-23 19:49:53,844 iter: 45500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0258, cls: 0.0203, iou: 0.0472), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 60.0m
[INFO]: 2024-04-23 19:53:00,845 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0218, iou: 0.0508), misc (ry: 0.10, z: 0.21), dt: 0.80, eta: 56.6m
[INFO]: 2024-04-23 19:56:07,826 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0272, cls: 0.0213, iou: 0.0473), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 53.3m
[INFO]: 2024-04-23 19:59:17,807 iter: 46250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0260, cls: 0.0199, iou: 0.0458), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 49.9m
[INFO]: 2024-04-23 20:02:23,524 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0208, iou: 0.0482), misc (ry: 0.09, z: 0.21), dt: 0.80, eta: 46.6m
[INFO]: 2024-04-23 20:05:35,759 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0271, cls: 0.0216, iou: 0.0477), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 43.3m
[INFO]: 2024-04-23 20:08:40,133 iter: 47000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0270, cls: 0.0211, iou: 0.0472), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 39.9m
[INFO]: 2024-04-23 20:11:43,356 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0273, cls: 0.0204, iou: 0.0470), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 36.6m
[INFO]: 2024-04-23 20:14:51,716 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0286, cls: 0.0219, iou: 0.0481), misc (ry: 0.10, z: 0.20), dt: 0.80, eta: 33.2m
[INFO]: 2024-04-23 20:17:57,568 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0276, cls: 0.0215, iou: 0.0470), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 29.9m
[INFO]: 2024-04-23 20:21:01,295 iter: 48000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0251, cls: 0.0203, iou: 0.0447), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 26.6m
[INFO]: 2024-04-23 20:24:07,382 iter: 48250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0268, cls: 0.0205, iou: 0.0454), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 23.3m
[INFO]: 2024-04-23 20:27:14,159 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0287, cls: 0.0214, iou: 0.0473), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 19.9m
[INFO]: 2024-04-23 20:30:22,391 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0288, cls: 0.0214, iou: 0.0477), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 16.6m
[INFO]: 2024-04-23 20:33:31,067 iter: 49000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0253, cls: 0.0205, iou: 0.0454), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 13.3m
[INFO]: 2024-04-23 20:36:40,621 iter: 49250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0247, cls: 0.0199, iou: 0.0445), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 10.0m
[INFO]: 2024-04-23 20:39:54,092 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0302, cls: 0.0215, iou: 0.0471), misc (ry: 0.09, z: 0.21), dt: 0.80, eta: 6.6m
[INFO]: 2024-04-23 20:43:02,133 iter: 49750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0285, cls: 0.0207, iou: 0.0460), misc (ry: 0.09, z: 0.20), dt: 0.80, eta: 3.3m
[INFO]: 2024-04-23 20:46:09,772 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0280, cls: 0.0205, iou: 0.0442), misc (ry: 0.09, z: 0.19), dt: 0.80, eta: 0.8s
[INFO]: 2024-04-23 20:56:26,017 test_iter 50000 2d car --> easy: 0.9721, mod: 0.8929, hard: 0.8016
[INFO]: 2024-04-23 20:56:26,018 test_iter 50000 gr car --> easy: 0.5652, mod: 0.4307, hard: 0.3574
[INFO]: 2024-04-23 20:56:26,018 test_iter 50000 3d car --> easy: 0.5031, mod: 0.3694, hard: 0.3304
[INFO]: 2024-04-23 20:56:26,019 test_iter 50000 2d pedestrian --> easy: 0.6556, mod: 0.5797, hard: 0.4988
[INFO]: 2024-04-23 20:56:26,019 test_iter 50000 gr pedestrian --> easy: 0.1115, mod: 0.1121, hard: 0.1082
[INFO]: 2024-04-23 20:56:26,020 test_iter 50000 3d pedestrian --> easy: 0.1081, mod: 0.1084, hard: 0.1031
[INFO]: 2024-04-23 20:56:26,021 test_iter 50000 2d cyclist --> easy: 0.7312, mod: 0.4844, hard: 0.4749
[INFO]: 2024-04-23 20:56:26,021 test_iter 50000 gr cyclist --> easy: 0.0321, mod: 0.0278, hard: 0.0286
[INFO]: 2024-04-23 20:56:26,022 test_iter 50000 3d cyclist --> easy: 0.0301, mod: 0.0263, hard: 0.0182
