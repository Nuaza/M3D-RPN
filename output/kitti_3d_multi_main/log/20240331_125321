[INFO]: 2024-03-31 12:53:21,423 ==开始处理数据集==
[INFO]: 2024-03-31 12:53:21,423 命中imdb缓存.
[INFO]: 2024-03-31 12:53:22,721 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-03-31 12:53:22,722 找到 3534 张前景图和 178 张空图
[INFO]: 2024-03-31 12:53:25,155 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-03-31 12:53:25,155 ==数据集处理完毕==
[INFO]: 2024-03-31 12:53:28,159 ==开始生成anchors==
[INFO]: 2024-03-31 12:53:28,159 ==anchors生成完毕==
[INFO]: 2024-03-31 12:53:31,163 ==开始计算bbox参数==
[INFO]: 2024-03-31 12:53:31,163 命中bbox的回归均值缓存
[INFO]: 2024-03-31 12:53:31,163 命中bbox的回归标准差缓存
[INFO]: 2024-03-31 12:53:31,163 ==bbox参数计算完毕==
[INFO]: 2024-03-31 12:53:39,197 设置保存完成
[INFO]: 2024-03-31 12:53:42,200 训练配置一览
[INFO]: 2024-03-31 12:53:44,209 训练配置: {
    model:                  densenet121_3d_dilate_depth_aware       
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             4                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    bins:                   32                                      
    visdom_port:            8100                                    
    pretrained:             'output/kitti_3d_multi_warmup/weights/model_50000.pt'
}
[INFO]: 2024-03-31 12:53:49,883 装载完成
[INFO]: 2024-03-31 12:53:52,886 神经网络结构一览
[INFO]: 2024-03-31 12:53:54,889 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (prop_feats_loc): Sequential(
      (0): LocalConv2d(
        (group_conv): Conv2d(32768, 16384, kernel_size=(3, 3), stride=(1, 1), groups=32)
      )
      (1): ReLU(inplace=True)
    )
    (cls_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 4608, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_x3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_y3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_z3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_w3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_h3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_l3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (bbox_rY3d_loc): LocalConv2d(
      (group_conv): Conv2d(16384, 1152, kernel_size=(1, 1), stride=(1, 1), groups=32)
    )
    (sigmoid): Sigmoid()
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-03-31 12:53:54,914 使用预训练模型: output/kitti_3d_multi_warmup/weights/model_50000.pt
[INFO]: 2024-03-31 12:58:50,452 iter: 250, acc (bg: 1.00, fg: 0.93, iou: 0.86), loss (bbox_3d: 0.4673, cls: 0.0964, iou: 0.1605), misc (ry: 0.49, z: 0.75), dt: 1.19, eta: 16.4h
[INFO]: 2024-03-31 13:03:46,881 iter: 500, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.6325, cls: 0.1282, iou: 0.2087), misc (ry: 0.69, z: 0.87), dt: 1.19, eta: 16.3h
[INFO]: 2024-03-31 13:08:37,480 iter: 750, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4666, cls: 0.0967, iou: 0.1835), misc (ry: 0.51, z: 0.76), dt: 1.18, eta: 16.1h
[INFO]: 2024-03-31 13:13:30,697 iter: 1000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3859, cls: 0.0731, iou: 0.1613), misc (ry: 0.47, z: 0.64), dt: 1.18, eta: 16.0h
[INFO]: 2024-03-31 13:18:22,000 iter: 1250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2915, cls: 0.0575, iou: 0.1444), misc (ry: 0.41, z: 0.57), dt: 1.17, eta: 15.9h
[INFO]: 2024-03-31 13:23:11,043 iter: 1500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2873, cls: 0.0645, iou: 0.1482), misc (ry: 0.40, z: 0.57), dt: 1.17, eta: 15.8h
[INFO]: 2024-03-31 13:28:01,767 iter: 1750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2271, cls: 0.0518, iou: 0.1258), misc (ry: 0.34, z: 0.49), dt: 1.17, eta: 15.7h
[INFO]: 2024-03-31 13:32:53,175 iter: 2000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2455, cls: 0.0521, iou: 0.1314), misc (ry: 0.36, z: 0.54), dt: 1.17, eta: 15.6h
[INFO]: 2024-03-31 13:37:46,926 iter: 2250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1884, cls: 0.0488, iou: 0.1260), misc (ry: 0.28, z: 0.50), dt: 1.17, eta: 15.5h
[INFO]: 2024-03-31 13:42:35,571 iter: 2500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1718, cls: 0.0466, iou: 0.1190), misc (ry: 0.29, z: 0.44), dt: 1.17, eta: 15.4h
[INFO]: 2024-03-31 13:47:25,757 iter: 2750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1959, cls: 0.0466, iou: 0.1231), misc (ry: 0.31, z: 0.46), dt: 1.17, eta: 15.3h
[INFO]: 2024-03-31 13:52:18,938 iter: 3000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1909, cls: 0.0468, iou: 0.1208), misc (ry: 0.27, z: 0.47), dt: 1.17, eta: 15.3h
[INFO]: 2024-03-31 13:57:16,470 iter: 3250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1645, cls: 0.0480, iou: 0.1155), misc (ry: 0.27, z: 0.43), dt: 1.17, eta: 15.2h
[INFO]: 2024-03-31 14:02:05,654 iter: 3500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2058, cls: 0.0534, iou: 0.1240), misc (ry: 0.33, z: 0.50), dt: 1.17, eta: 15.1h
[INFO]: 2024-03-31 14:06:59,368 iter: 3750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1837, cls: 0.0473, iou: 0.1219), misc (ry: 0.28, z: 0.50), dt: 1.17, eta: 15.0h
[INFO]: 2024-03-31 14:11:55,773 iter: 4000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1515, cls: 0.0422, iou: 0.1115), misc (ry: 0.25, z: 0.41), dt: 1.17, eta: 15.0h
[INFO]: 2024-03-31 14:16:50,468 iter: 4250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1474, cls: 0.0425, iou: 0.1107), misc (ry: 0.23, z: 0.46), dt: 1.17, eta: 14.9h
[INFO]: 2024-03-31 14:21:43,724 iter: 4500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1217, cls: 0.0399, iou: 0.1041), misc (ry: 0.21, z: 0.39), dt: 1.17, eta: 14.8h
[INFO]: 2024-03-31 14:26:38,629 iter: 4750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1273, cls: 0.0387, iou: 0.1070), misc (ry: 0.21, z: 0.44), dt: 1.17, eta: 14.7h
[INFO]: 2024-03-31 14:31:33,711 iter: 5000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1129, cls: 0.0385, iou: 0.0986), misc (ry: 0.21, z: 0.36), dt: 1.17, eta: 14.6h
[INFO]: 2024-03-31 14:36:31,958 iter: 5250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1154, cls: 0.0380, iou: 0.0992), misc (ry: 0.23, z: 0.36), dt: 1.17, eta: 14.6h
[INFO]: 2024-03-31 14:41:24,991 iter: 5500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0374, iou: 0.0975), misc (ry: 0.20, z: 0.37), dt: 1.17, eta: 14.5h
[INFO]: 2024-03-31 14:46:19,705 iter: 5750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1016, cls: 0.0348, iou: 0.0954), misc (ry: 0.21, z: 0.35), dt: 1.17, eta: 14.4h
[INFO]: 2024-03-31 14:51:10,456 iter: 6000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0910, cls: 0.0360, iou: 0.0945), misc (ry: 0.17, z: 0.34), dt: 1.17, eta: 14.3h
[INFO]: 2024-03-31 14:56:00,720 iter: 6250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0916, cls: 0.0360, iou: 0.0908), misc (ry: 0.19, z: 0.33), dt: 1.17, eta: 14.2h
[INFO]: 2024-03-31 15:00:45,680 iter: 6500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0784, cls: 0.0330, iou: 0.0866), misc (ry: 0.15, z: 0.32), dt: 1.17, eta: 14.2h
[INFO]: 2024-03-31 15:05:37,062 iter: 6750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0890, cls: 0.0347, iou: 0.0916), misc (ry: 0.17, z: 0.33), dt: 1.17, eta: 14.1h
[INFO]: 2024-03-31 15:10:34,856 iter: 7000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1161, cls: 0.0352, iou: 0.0970), misc (ry: 0.23, z: 0.35), dt: 1.17, eta: 14.0h
[INFO]: 2024-03-31 15:15:30,689 iter: 7250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0935, cls: 0.0336, iou: 0.0884), misc (ry: 0.18, z: 0.33), dt: 1.17, eta: 13.9h
[INFO]: 2024-03-31 15:20:23,123 iter: 7500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0857, cls: 0.0340, iou: 0.0894), misc (ry: 0.18, z: 0.32), dt: 1.17, eta: 13.8h
[INFO]: 2024-03-31 15:25:13,111 iter: 7750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0940, cls: 0.0353, iou: 0.0904), misc (ry: 0.20, z: 0.32), dt: 1.17, eta: 13.7h
[INFO]: 2024-03-31 15:30:03,127 iter: 8000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0324, iou: 0.0853), misc (ry: 0.17, z: 0.31), dt: 1.17, eta: 13.7h
[INFO]: 2024-03-31 15:35:00,641 iter: 8250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0845, cls: 0.0323, iou: 0.0875), misc (ry: 0.17, z: 0.33), dt: 1.17, eta: 13.6h
[INFO]: 2024-03-31 15:39:57,664 iter: 8500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0816, cls: 0.0330, iou: 0.0868), misc (ry: 0.20, z: 0.30), dt: 1.17, eta: 13.5h
[INFO]: 2024-03-31 15:44:50,894 iter: 8750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0813, cls: 0.0316, iou: 0.0873), misc (ry: 0.17, z: 0.34), dt: 1.17, eta: 13.4h
[INFO]: 2024-03-31 15:49:45,485 iter: 9000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0850, cls: 0.0333, iou: 0.0880), misc (ry: 0.17, z: 0.33), dt: 1.17, eta: 13.4h
[INFO]: 2024-03-31 15:54:36,424 iter: 9250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0870, cls: 0.0318, iou: 0.0894), misc (ry: 0.18, z: 0.33), dt: 1.17, eta: 13.3h
[INFO]: 2024-03-31 15:59:27,305 iter: 9500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0779, cls: 0.0320, iou: 0.0839), misc (ry: 0.16, z: 0.33), dt: 1.17, eta: 13.2h
[INFO]: 2024-03-31 16:04:15,942 iter: 9750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0689, cls: 0.0311, iou: 0.0796), misc (ry: 0.15, z: 0.30), dt: 1.17, eta: 13.1h
[INFO]: 2024-03-31 16:09:04,852 iter: 10000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0749, cls: 0.0326, iou: 0.0817), misc (ry: 0.15, z: 0.33), dt: 1.17, eta: 13.0h
[INFO]: 2024-03-31 16:18:35,656 test_iter 10000 2d car --> easy: 0.8952, mod: 0.8276, hard: 0.6727
[INFO]: 2024-03-31 16:18:35,657 test_iter 10000 gr car --> easy: 0.2183, mod: 0.1794, hard: 0.1451
[INFO]: 2024-03-31 16:18:35,658 test_iter 10000 3d car --> easy: 0.1512, mod: 0.1271, hard: 0.0969
[INFO]: 2024-03-31 16:18:35,659 test_iter 10000 2d pedestrian --> easy: 0.6673, mod: 0.5883, hard: 0.5044
[INFO]: 2024-03-31 16:18:35,659 test_iter 10000 gr pedestrian --> easy: 0.0897, mod: 0.0694, hard: 0.0650
[INFO]: 2024-03-31 16:18:35,660 test_iter 10000 3d pedestrian --> easy: 0.0676, mod: 0.0577, hard: 0.0513
[INFO]: 2024-03-31 16:18:35,660 test_iter 10000 2d cyclist --> easy: 0.6527, mod: 0.4100, hard: 0.4053
[INFO]: 2024-03-31 16:18:35,661 test_iter 10000 gr cyclist --> easy: 0.0488, mod: 0.0324, hard: 0.0220
[INFO]: 2024-03-31 16:18:35,661 test_iter 10000 3d cyclist --> easy: 0.0471, mod: 0.0227, hard: 0.0220
[INFO]: 2024-03-31 16:23:31,844 iter: 10250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0688, cls: 0.0329, iou: 0.0825), misc (ry: 0.15, z: 0.29), dt: 1.23, eta: 13.5h
[INFO]: 2024-03-31 16:28:25,089 iter: 10500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0652, cls: 0.0309, iou: 0.0793), misc (ry: 0.14, z: 0.31), dt: 1.23, eta: 13.5h
[INFO]: 2024-03-31 16:33:20,552 iter: 10750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0646, cls: 0.0298, iou: 0.0806), misc (ry: 0.14, z: 0.30), dt: 1.22, eta: 13.4h
[INFO]: 2024-03-31 16:38:13,960 iter: 11000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0305, iou: 0.0775), misc (ry: 0.14, z: 0.30), dt: 1.22, eta: 13.3h
[INFO]: 2024-03-31 16:43:06,623 iter: 11250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0612, cls: 0.0287, iou: 0.0787), misc (ry: 0.13, z: 0.29), dt: 1.22, eta: 13.2h
[INFO]: 2024-03-31 16:48:03,963 iter: 11500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0602, cls: 0.0293, iou: 0.0745), misc (ry: 0.13, z: 0.27), dt: 1.22, eta: 13.1h
[INFO]: 2024-03-31 16:52:59,677 iter: 11750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0623, cls: 0.0301, iou: 0.0798), misc (ry: 0.14, z: 0.29), dt: 1.22, eta: 13.0h
[INFO]: 2024-03-31 16:57:52,942 iter: 12000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0546, cls: 0.0309, iou: 0.0751), misc (ry: 0.13, z: 0.27), dt: 1.22, eta: 12.9h
[INFO]: 2024-03-31 17:02:49,204 iter: 12250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0567, cls: 0.0292, iou: 0.0731), misc (ry: 0.14, z: 0.27), dt: 1.22, eta: 12.8h
[INFO]: 2024-03-31 17:07:43,978 iter: 12500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0282, iou: 0.0751), misc (ry: 0.14, z: 0.28), dt: 1.22, eta: 12.7h
[INFO]: 2024-03-31 17:12:37,287 iter: 12750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0287, iou: 0.0734), misc (ry: 0.14, z: 0.27), dt: 1.22, eta: 12.6h
[INFO]: 2024-03-31 17:17:31,289 iter: 13000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0555, cls: 0.0287, iou: 0.0722), misc (ry: 0.13, z: 0.27), dt: 1.22, eta: 12.5h
[INFO]: 2024-03-31 17:22:22,864 iter: 13250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0564, cls: 0.0289, iou: 0.0733), misc (ry: 0.13, z: 0.27), dt: 1.22, eta: 12.4h
[INFO]: 2024-03-31 17:27:11,566 iter: 13500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0588, cls: 0.0277, iou: 0.0711), misc (ry: 0.14, z: 0.29), dt: 1.21, eta: 12.3h
[INFO]: 2024-03-31 17:32:02,281 iter: 13750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0527, cls: 0.0280, iou: 0.0711), misc (ry: 0.13, z: 0.28), dt: 1.21, eta: 12.2h
[INFO]: 2024-03-31 17:36:53,631 iter: 14000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0562, cls: 0.0276, iou: 0.0723), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 12.1h
[INFO]: 2024-03-31 17:41:43,183 iter: 14250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0474, cls: 0.0270, iou: 0.0692), misc (ry: 0.12, z: 0.25), dt: 1.21, eta: 12.0h
[INFO]: 2024-03-31 17:46:34,013 iter: 14500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0533, cls: 0.0281, iou: 0.0727), misc (ry: 0.13, z: 0.27), dt: 1.21, eta: 11.9h
[INFO]: 2024-03-31 17:51:26,107 iter: 14750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0606, cls: 0.0291, iou: 0.0750), misc (ry: 0.15, z: 0.28), dt: 1.21, eta: 11.9h
[INFO]: 2024-03-31 17:56:19,762 iter: 15000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0495, cls: 0.0288, iou: 0.0703), misc (ry: 0.12, z: 0.26), dt: 1.21, eta: 11.8h
[INFO]: 2024-03-31 18:01:13,869 iter: 15250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0533, cls: 0.0281, iou: 0.0727), misc (ry: 0.12, z: 0.28), dt: 1.21, eta: 11.7h
[INFO]: 2024-03-31 18:06:03,280 iter: 15500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0496, cls: 0.0275, iou: 0.0701), misc (ry: 0.13, z: 0.27), dt: 1.21, eta: 11.6h
[INFO]: 2024-03-31 18:10:54,167 iter: 15750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0513, cls: 0.0287, iou: 0.0722), misc (ry: 0.13, z: 0.26), dt: 1.21, eta: 11.5h
[INFO]: 2024-03-31 18:15:47,132 iter: 16000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0532, cls: 0.0285, iou: 0.0737), misc (ry: 0.13, z: 0.27), dt: 1.21, eta: 11.4h
[INFO]: 2024-03-31 18:20:36,818 iter: 16250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0526, cls: 0.0291, iou: 0.0713), misc (ry: 0.14, z: 0.25), dt: 1.21, eta: 11.3h
[INFO]: 2024-03-31 18:25:27,292 iter: 16500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0452, cls: 0.0279, iou: 0.0699), misc (ry: 0.12, z: 0.25), dt: 1.21, eta: 11.2h
[INFO]: 2024-03-31 18:30:18,378 iter: 16750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0441, cls: 0.0264, iou: 0.0672), misc (ry: 0.11, z: 0.24), dt: 1.21, eta: 11.1h
[INFO]: 2024-03-31 18:35:07,414 iter: 17000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0494, cls: 0.0286, iou: 0.0695), misc (ry: 0.13, z: 0.24), dt: 1.20, eta: 11.0h
[INFO]: 2024-03-31 18:39:57,649 iter: 17250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0493, cls: 0.0271, iou: 0.0699), misc (ry: 0.12, z: 0.26), dt: 1.20, eta: 11.0h
[INFO]: 2024-03-31 18:44:49,140 iter: 17500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0451, cls: 0.0280, iou: 0.0673), misc (ry: 0.12, z: 0.24), dt: 1.20, eta: 10.9h
[INFO]: 2024-03-31 18:49:35,502 iter: 17750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0437, cls: 0.0261, iou: 0.0657), misc (ry: 0.11, z: 0.25), dt: 1.20, eta: 10.8h
[INFO]: 2024-03-31 18:54:30,956 iter: 18000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0458, cls: 0.0263, iou: 0.0659), misc (ry: 0.12, z: 0.24), dt: 1.20, eta: 10.7h
[INFO]: 2024-03-31 18:59:26,329 iter: 18250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0267, iou: 0.0644), misc (ry: 0.12, z: 0.24), dt: 1.20, eta: 10.6h
[INFO]: 2024-03-31 19:04:19,884 iter: 18500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0404, cls: 0.0263, iou: 0.0649), misc (ry: 0.12, z: 0.23), dt: 1.20, eta: 10.5h
[INFO]: 2024-03-31 19:09:14,080 iter: 18750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0386, cls: 0.0257, iou: 0.0605), misc (ry: 0.12, z: 0.23), dt: 1.20, eta: 10.4h
[INFO]: 2024-03-31 19:14:08,532 iter: 19000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0472, cls: 0.0263, iou: 0.0665), misc (ry: 0.14, z: 0.24), dt: 1.20, eta: 10.3h
[INFO]: 2024-03-31 19:19:04,433 iter: 19250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0390, cls: 0.0261, iou: 0.0643), misc (ry: 0.11, z: 0.24), dt: 1.20, eta: 10.3h
[INFO]: 2024-03-31 19:23:51,926 iter: 19500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0448, cls: 0.0269, iou: 0.0665), misc (ry: 0.12, z: 0.24), dt: 1.20, eta: 10.2h
[INFO]: 2024-03-31 19:28:47,466 iter: 19750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0460, cls: 0.0273, iou: 0.0653), misc (ry: 0.13, z: 0.24), dt: 1.20, eta: 10.1h
[INFO]: 2024-03-31 19:33:39,869 iter: 20000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0419, cls: 0.0266, iou: 0.0646), misc (ry: 0.11, z: 0.23), dt: 1.20, eta: 10.0h
[INFO]: 2024-03-31 19:43:09,541 test_iter 20000 2d car --> easy: 0.9245, mod: 0.8442, hard: 0.6829
[INFO]: 2024-03-31 19:43:09,542 test_iter 20000 gr car --> easy: 0.2609, mod: 0.2109, hard: 0.1763
[INFO]: 2024-03-31 19:43:09,542 test_iter 20000 3d car --> easy: 0.1670, mod: 0.1353, hard: 0.1030
[INFO]: 2024-03-31 19:43:09,543 test_iter 20000 2d pedestrian --> easy: 0.6434, mod: 0.5698, hard: 0.4910
[INFO]: 2024-03-31 19:43:09,543 test_iter 20000 gr pedestrian --> easy: 0.0497, mod: 0.0480, hard: 0.0424
[INFO]: 2024-03-31 19:43:09,543 test_iter 20000 3d pedestrian --> easy: 0.0442, mod: 0.0401, hard: 0.0403
[INFO]: 2024-03-31 19:43:09,544 test_iter 20000 2d cyclist --> easy: 0.6615, mod: 0.4180, hard: 0.4116
[INFO]: 2024-03-31 19:43:09,544 test_iter 20000 gr cyclist --> easy: 0.1016, mod: 0.0909, hard: 0.0909
[INFO]: 2024-03-31 19:43:09,545 test_iter 20000 3d cyclist --> easy: 0.0996, mod: 0.0909, hard: 0.0909
[INFO]: 2024-03-31 19:48:06,531 iter: 20250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0396, cls: 0.0273, iou: 0.0636), misc (ry: 0.11, z: 0.22), dt: 1.23, eta: 10.1h
[INFO]: 2024-03-31 19:53:02,870 iter: 20500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0271, iou: 0.0653), misc (ry: 0.11, z: 0.24), dt: 1.23, eta: 10.1h
[INFO]: 2024-03-31 19:58:00,124 iter: 20750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0265, iou: 0.0632), misc (ry: 0.11, z: 0.22), dt: 1.23, eta: 10.0h
[INFO]: 2024-03-31 20:02:53,487 iter: 21000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0372, cls: 0.0253, iou: 0.0623), misc (ry: 0.11, z: 0.24), dt: 1.23, eta: 9.9h
[INFO]: 2024-03-31 20:07:44,095 iter: 21250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0367, cls: 0.0261, iou: 0.0618), misc (ry: 0.11, z: 0.24), dt: 1.22, eta: 9.8h
[INFO]: 2024-03-31 20:12:35,107 iter: 21500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0399, cls: 0.0252, iou: 0.0628), misc (ry: 0.11, z: 0.25), dt: 1.22, eta: 9.7h
[INFO]: 2024-03-31 20:17:24,317 iter: 21750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0401, cls: 0.0259, iou: 0.0636), misc (ry: 0.12, z: 0.23), dt: 1.22, eta: 9.6h
[INFO]: 2024-03-31 20:22:18,156 iter: 22000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0394, cls: 0.0256, iou: 0.0636), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 9.5h
[INFO]: 2024-03-31 20:27:08,344 iter: 22250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0256, iou: 0.0623), misc (ry: 0.12, z: 0.24), dt: 1.22, eta: 9.4h
[INFO]: 2024-03-31 20:31:57,899 iter: 22500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0386, cls: 0.0258, iou: 0.0607), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 9.3h
[INFO]: 2024-03-31 20:36:45,712 iter: 22750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0329, cls: 0.0245, iou: 0.0578), misc (ry: 0.10, z: 0.21), dt: 1.22, eta: 9.2h
[INFO]: 2024-03-31 20:41:31,665 iter: 23000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0376, cls: 0.0246, iou: 0.0597), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 9.1h
[INFO]: 2024-03-31 20:46:24,109 iter: 23250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0335, cls: 0.0246, iou: 0.0573), misc (ry: 0.10, z: 0.21), dt: 1.22, eta: 9.1h
[INFO]: 2024-03-31 20:51:15,656 iter: 23500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0378, cls: 0.0251, iou: 0.0598), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 9.0h
[INFO]: 2024-03-31 20:56:04,946 iter: 23750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0386, cls: 0.0258, iou: 0.0596), misc (ry: 0.11, z: 0.22), dt: 1.22, eta: 8.9h
[INFO]: 2024-03-31 21:00:55,455 iter: 24000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0366, cls: 0.0251, iou: 0.0609), misc (ry: 0.10, z: 0.23), dt: 1.22, eta: 8.8h
[INFO]: 2024-03-31 21:05:46,116 iter: 24250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0355, cls: 0.0255, iou: 0.0603), misc (ry: 0.11, z: 0.22), dt: 1.22, eta: 8.7h
[INFO]: 2024-03-31 21:10:37,211 iter: 24500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0399, cls: 0.0264, iou: 0.0631), misc (ry: 0.10, z: 0.24), dt: 1.22, eta: 8.6h
[INFO]: 2024-03-31 21:15:32,711 iter: 24750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0406, cls: 0.0254, iou: 0.0604), misc (ry: 0.11, z: 0.23), dt: 1.22, eta: 8.5h
[INFO]: 2024-03-31 21:20:19,438 iter: 25000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0351, cls: 0.0249, iou: 0.0568), misc (ry: 0.10, z: 0.22), dt: 1.22, eta: 8.4h
[INFO]: 2024-03-31 21:25:14,774 iter: 25250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0340, cls: 0.0253, iou: 0.0586), misc (ry: 0.10, z: 0.22), dt: 1.22, eta: 8.4h
[INFO]: 2024-03-31 21:30:10,332 iter: 25500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0331, cls: 0.0251, iou: 0.0571), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 8.3h
[INFO]: 2024-03-31 21:35:03,129 iter: 25750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0342, cls: 0.0251, iou: 0.0593), misc (ry: 0.11, z: 0.22), dt: 1.21, eta: 8.2h
[INFO]: 2024-03-31 21:39:58,476 iter: 26000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0340, cls: 0.0255, iou: 0.0585), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 8.1h
[INFO]: 2024-03-31 21:44:56,107 iter: 26250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0247, iou: 0.0545), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 8.0h
[INFO]: 2024-03-31 21:49:52,956 iter: 26500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0310, cls: 0.0243, iou: 0.0555), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 7.9h
[INFO]: 2024-03-31 21:54:48,640 iter: 26750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0323, cls: 0.0243, iou: 0.0563), misc (ry: 0.10, z: 0.20), dt: 1.21, eta: 7.8h
[INFO]: 2024-03-31 21:59:41,061 iter: 27000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0309, cls: 0.0228, iou: 0.0550), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 7.7h
[INFO]: 2024-03-31 22:04:35,195 iter: 27250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0317, cls: 0.0241, iou: 0.0573), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 7.7h
[INFO]: 2024-03-31 22:09:29,222 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0333, cls: 0.0249, iou: 0.0568), misc (ry: 0.10, z: 0.20), dt: 1.21, eta: 7.6h
[INFO]: 2024-03-31 22:14:19,903 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0314, cls: 0.0245, iou: 0.0538), misc (ry: 0.10, z: 0.20), dt: 1.21, eta: 7.5h
[INFO]: 2024-03-31 22:19:12,084 iter: 28000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0318, cls: 0.0243, iou: 0.0543), misc (ry: 0.10, z: 0.21), dt: 1.21, eta: 7.4h
[INFO]: 2024-03-31 22:24:08,464 iter: 28250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0319, cls: 0.0223, iou: 0.0552), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 7.3h
[INFO]: 2024-03-31 22:29:03,388 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0329, cls: 0.0252, iou: 0.0564), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 7.2h
[INFO]: 2024-03-31 22:33:53,644 iter: 28750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0330, cls: 0.0245, iou: 0.0563), misc (ry: 0.10, z: 0.20), dt: 1.21, eta: 7.1h
[INFO]: 2024-03-31 22:38:50,352 iter: 29000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0302, cls: 0.0245, iou: 0.0536), misc (ry: 0.09, z: 0.20), dt: 1.21, eta: 7.1h
[INFO]: 2024-03-31 22:43:47,838 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0298, cls: 0.0237, iou: 0.0535), misc (ry: 0.09, z: 0.21), dt: 1.21, eta: 7.0h
[INFO]: 2024-03-31 22:48:41,722 iter: 29500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0276, cls: 0.0230, iou: 0.0533), misc (ry: 0.09, z: 0.19), dt: 1.21, eta: 6.9h
[INFO]: 2024-03-31 22:53:38,349 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0286, cls: 0.0244, iou: 0.0526), misc (ry: 0.09, z: 0.20), dt: 1.21, eta: 6.8h
[INFO]: 2024-03-31 22:58:36,425 iter: 30000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0267, cls: 0.0228, iou: 0.0505), misc (ry: 0.09, z: 0.19), dt: 1.21, eta: 6.7h
[INFO]: 2024-03-31 23:07:57,971 test_iter 30000 2d car --> easy: 0.9332, mod: 0.8485, hard: 0.6849
[INFO]: 2024-03-31 23:07:57,972 test_iter 30000 gr car --> easy: 0.2633, mod: 0.2139, hard: 0.1757
[INFO]: 2024-03-31 23:07:57,973 test_iter 30000 3d car --> easy: 0.1811, mod: 0.1531, hard: 0.1220
[INFO]: 2024-03-31 23:07:57,974 test_iter 30000 2d pedestrian --> easy: 0.6564, mod: 0.5816, hard: 0.5005
[INFO]: 2024-03-31 23:07:57,974 test_iter 30000 gr pedestrian --> easy: 0.0684, mod: 0.0547, hard: 0.0497
[INFO]: 2024-03-31 23:07:57,975 test_iter 30000 3d pedestrian --> easy: 0.0513, mod: 0.0496, hard: 0.0416
[INFO]: 2024-03-31 23:07:57,976 test_iter 30000 2d cyclist --> easy: 0.6594, mod: 0.4134, hard: 0.4100
[INFO]: 2024-03-31 23:07:57,976 test_iter 30000 gr cyclist --> easy: 0.1072, mod: 0.1007, hard: 0.0909
[INFO]: 2024-03-31 23:07:57,977 test_iter 30000 3d cyclist --> easy: 0.1039, mod: 0.0909, hard: 0.0909
[INFO]: 2024-03-31 23:12:55,524 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0285, cls: 0.0238, iou: 0.0527), misc (ry: 0.10, z: 0.19), dt: 1.23, eta: 6.7h
[INFO]: 2024-03-31 23:17:48,754 iter: 30500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0279, cls: 0.0232, iou: 0.0522), misc (ry: 0.09, z: 0.19), dt: 1.23, eta: 6.6h
[INFO]: 2024-03-31 23:22:44,479 iter: 30750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0286, cls: 0.0236, iou: 0.0524), misc (ry: 0.09, z: 0.19), dt: 1.23, eta: 6.6h
[INFO]: 2024-03-31 23:27:39,362 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0296, cls: 0.0238, iou: 0.0526), misc (ry: 0.10, z: 0.19), dt: 1.23, eta: 6.5h
[INFO]: 2024-03-31 23:32:34,185 iter: 31250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0280, cls: 0.0231, iou: 0.0513), misc (ry: 0.09, z: 0.19), dt: 1.23, eta: 6.4h
[INFO]: 2024-03-31 23:37:31,018 iter: 31500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0282, cls: 0.0231, iou: 0.0517), misc (ry: 0.09, z: 0.20), dt: 1.23, eta: 6.3h
[INFO]: 2024-03-31 23:42:20,579 iter: 31750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0264, cls: 0.0238, iou: 0.0514), misc (ry: 0.09, z: 0.18), dt: 1.23, eta: 6.2h
[INFO]: 2024-03-31 23:47:05,674 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0290, cls: 0.0243, iou: 0.0512), misc (ry: 0.09, z: 0.20), dt: 1.22, eta: 6.1h
[INFO]: 2024-03-31 23:51:50,516 iter: 32250, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0273, cls: 0.0230, iou: 0.0506), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 6.0h
[INFO]: 2024-03-31 23:56:37,820 iter: 32500, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0254, cls: 0.0225, iou: 0.0485), misc (ry: 0.09, z: 0.18), dt: 1.22, eta: 5.9h
[INFO]: 2024-04-01 00:01:24,118 iter: 32750, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0253, cls: 0.0228, iou: 0.0479), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 5.9h
[INFO]: 2024-04-01 00:06:10,368 iter: 33000, acc (bg: 1.00, fg: 1.00, iou: 0.95), loss (bbox_3d: 0.0260, cls: 0.0223, iou: 0.0497), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 5.8h
[INFO]: 2024-04-01 00:10:55,713 iter: 33250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0241, cls: 0.0229, iou: 0.0468), misc (ry: 0.09, z: 0.18), dt: 1.22, eta: 5.7h
[INFO]: 2024-04-01 00:15:43,439 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0260, cls: 0.0232, iou: 0.0487), misc (ry: 0.09, z: 0.19), dt: 1.22, eta: 5.6h
[INFO]: 2024-04-01 00:20:29,376 iter: 33750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0237, cls: 0.0222, iou: 0.0466), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 5.5h
[INFO]: 2024-04-01 00:25:17,522 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0255, cls: 0.0234, iou: 0.0479), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 5.4h
[INFO]: 2024-04-01 00:30:04,994 iter: 34250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0224, cls: 0.0226, iou: 0.0470), misc (ry: 0.08, z: 0.17), dt: 1.22, eta: 5.3h
[INFO]: 2024-04-01 00:34:52,187 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0247, cls: 0.0230, iou: 0.0472), misc (ry: 0.09, z: 0.18), dt: 1.22, eta: 5.2h
[INFO]: 2024-04-01 00:39:50,398 iter: 34750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0239, cls: 0.0232, iou: 0.0467), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 5.2h
[INFO]: 2024-04-01 00:44:45,795 iter: 35000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0233, cls: 0.0221, iou: 0.0465), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 5.1h
[INFO]: 2024-04-01 00:49:35,817 iter: 35250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0219, cls: 0.0218, iou: 0.0448), misc (ry: 0.08, z: 0.17), dt: 1.22, eta: 5.0h
[INFO]: 2024-04-01 00:54:19,653 iter: 35500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0208, cls: 0.0211, iou: 0.0439), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 4.9h
[INFO]: 2024-04-01 00:59:03,138 iter: 35750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0228, cls: 0.0215, iou: 0.0453), misc (ry: 0.08, z: 0.18), dt: 1.22, eta: 4.8h
[INFO]: 2024-04-01 01:03:52,066 iter: 36000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0227, cls: 0.0218, iou: 0.0447), misc (ry: 0.09, z: 0.17), dt: 1.22, eta: 4.7h
[INFO]: 2024-04-01 01:08:44,564 iter: 36250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0204, cls: 0.0205, iou: 0.0422), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 4.6h
[INFO]: 2024-04-01 01:13:30,781 iter: 36500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0229, cls: 0.0222, iou: 0.0443), misc (ry: 0.08, z: 0.17), dt: 1.22, eta: 4.6h
[INFO]: 2024-04-01 01:18:17,174 iter: 36750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0218, cls: 0.0228, iou: 0.0439), misc (ry: 0.08, z: 0.17), dt: 1.22, eta: 4.5h
[INFO]: 2024-04-01 01:23:02,723 iter: 37000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0215, cls: 0.0212, iou: 0.0426), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 4.4h
[INFO]: 2024-04-01 01:27:46,246 iter: 37250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0202, cls: 0.0210, iou: 0.0418), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 4.3h
[INFO]: 2024-04-01 01:32:32,822 iter: 37500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0209, cls: 0.0217, iou: 0.0424), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 4.2h
[INFO]: 2024-04-01 01:37:18,190 iter: 37750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0219, cls: 0.0216, iou: 0.0430), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 4.1h
[INFO]: 2024-04-01 01:42:07,588 iter: 38000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0195, cls: 0.0214, iou: 0.0410), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 4.0h
[INFO]: 2024-04-01 01:46:50,229 iter: 38250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0221, cls: 0.0218, iou: 0.0429), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 4.0h
[INFO]: 2024-04-01 01:51:35,231 iter: 38500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0218, cls: 0.0216, iou: 0.0426), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 3.9h
[INFO]: 2024-04-01 01:56:19,772 iter: 38750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0232, cls: 0.0221, iou: 0.0430), misc (ry: 0.08, z: 0.17), dt: 1.21, eta: 3.8h
[INFO]: 2024-04-01 02:01:09,337 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.96), loss (bbox_3d: 0.0235, cls: 0.0223, iou: 0.0427), misc (ry: 0.08, z: 0.18), dt: 1.21, eta: 3.7h
[INFO]: 2024-04-01 02:05:55,328 iter: 39250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0202, cls: 0.0213, iou: 0.0406), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 3.6h
[INFO]: 2024-04-01 02:10:39,189 iter: 39500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0187, cls: 0.0215, iou: 0.0401), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 3.5h
[INFO]: 2024-04-01 02:15:26,891 iter: 39750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0205, cls: 0.0208, iou: 0.0395), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 3.4h
[INFO]: 2024-04-01 02:20:18,882 iter: 40000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0197, cls: 0.0216, iou: 0.0403), misc (ry: 0.08, z: 0.16), dt: 1.21, eta: 3.4h
[INFO]: 2024-04-01 02:29:44,954 test_iter 40000 2d car --> easy: 0.9330, mod: 0.8493, hard: 0.6856
[INFO]: 2024-04-01 02:29:44,955 test_iter 40000 gr car --> easy: 0.2756, mod: 0.2191, hard: 0.1836
[INFO]: 2024-04-01 02:29:44,955 test_iter 40000 3d car --> easy: 0.2078, mod: 0.1727, hard: 0.1531
[INFO]: 2024-04-01 02:29:44,956 test_iter 40000 2d pedestrian --> easy: 0.6664, mod: 0.5889, hard: 0.5061
[INFO]: 2024-04-01 02:29:44,956 test_iter 40000 gr pedestrian --> easy: 0.0781, mod: 0.0619, hard: 0.0596
[INFO]: 2024-04-01 02:29:44,957 test_iter 40000 3d pedestrian --> easy: 0.0593, mod: 0.0564, hard: 0.0489
[INFO]: 2024-04-01 02:29:44,957 test_iter 40000 2d cyclist --> easy: 0.6498, mod: 0.4107, hard: 0.4048
[INFO]: 2024-04-01 02:29:44,958 test_iter 40000 gr cyclist --> easy: 0.1250, mod: 0.1083, hard: 0.1055
[INFO]: 2024-04-01 02:29:44,958 test_iter 40000 3d cyclist --> easy: 0.1092, mod: 0.1039, hard: 0.1039
[INFO]: 2024-04-01 02:34:33,294 iter: 40250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0185, cls: 0.0209, iou: 0.0391), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 3.3h
[INFO]: 2024-04-01 02:39:17,200 iter: 40500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0194, cls: 0.0215, iou: 0.0404), misc (ry: 0.08, z: 0.16), dt: 1.22, eta: 3.2h
[INFO]: 2024-04-01 02:44:03,323 iter: 40750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0176, cls: 0.0209, iou: 0.0375), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 3.1h
[INFO]: 2024-04-01 02:48:47,950 iter: 41000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0200, cls: 0.0217, iou: 0.0399), misc (ry: 0.08, z: 0.15), dt: 1.22, eta: 3.1h
[INFO]: 2024-04-01 02:53:32,759 iter: 41250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0174, cls: 0.0204, iou: 0.0373), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 3.0h
[INFO]: 2024-04-01 02:58:16,294 iter: 41500, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0189, cls: 0.0210, iou: 0.0386), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.9h
[INFO]: 2024-04-01 03:03:00,854 iter: 41750, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0169, cls: 0.0209, iou: 0.0369), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.8h
[INFO]: 2024-04-01 03:07:55,614 iter: 42000, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0187, cls: 0.0210, iou: 0.0373), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.7h
[INFO]: 2024-04-01 03:12:54,185 iter: 42250, acc (bg: 1.00, fg: 1.00, iou: 0.96), loss (bbox_3d: 0.0177, cls: 0.0213, iou: 0.0375), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.6h
[INFO]: 2024-04-01 03:17:41,691 iter: 42500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0177, cls: 0.0211, iou: 0.0357), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 2.5h
[INFO]: 2024-04-01 03:22:26,475 iter: 42750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0176, cls: 0.0209, iou: 0.0362), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.5h
[INFO]: 2024-04-01 03:27:09,549 iter: 43000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0181, cls: 0.0210, iou: 0.0358), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.4h
[INFO]: 2024-04-01 03:31:58,449 iter: 43250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0164, cls: 0.0205, iou: 0.0346), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 2.3h
[INFO]: 2024-04-01 03:36:42,776 iter: 43500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0169, cls: 0.0206, iou: 0.0354), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.2h
[INFO]: 2024-04-01 03:41:37,667 iter: 43750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0188, cls: 0.0213, iou: 0.0354), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.1h
[INFO]: 2024-04-01 03:46:30,418 iter: 44000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0177, cls: 0.0215, iou: 0.0360), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 2.0h
[INFO]: 2024-04-01 03:51:14,779 iter: 44250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0169, cls: 0.0204, iou: 0.0345), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.9h
[INFO]: 2024-04-01 03:55:58,093 iter: 44500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0165, cls: 0.0202, iou: 0.0341), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.9h
[INFO]: 2024-04-01 04:00:44,174 iter: 44750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0171, cls: 0.0202, iou: 0.0339), misc (ry: 0.07, z: 0.15), dt: 1.22, eta: 1.8h
[INFO]: 2024-04-01 04:05:28,844 iter: 45000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0178, cls: 0.0217, iou: 0.0345), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.7h
[INFO]: 2024-04-01 04:10:15,429 iter: 45250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0158, cls: 0.0208, iou: 0.0333), misc (ry: 0.07, z: 0.14), dt: 1.22, eta: 1.6h
[INFO]: 2024-04-01 04:14:59,024 iter: 45500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0154, cls: 0.0198, iou: 0.0319), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.5h
[INFO]: 2024-04-01 04:19:45,428 iter: 45750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0178, cls: 0.0215, iou: 0.0336), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.4h
[INFO]: 2024-04-01 04:24:29,948 iter: 46000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0166, cls: 0.0206, iou: 0.0322), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.3h
[INFO]: 2024-04-01 04:29:14,748 iter: 46250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0179, cls: 0.0214, iou: 0.0335), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.3h
[INFO]: 2024-04-01 04:33:58,095 iter: 46500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0157, cls: 0.0195, iou: 0.0311), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.2h
[INFO]: 2024-04-01 04:38:42,237 iter: 46750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0184, cls: 0.0210, iou: 0.0329), misc (ry: 0.07, z: 0.14), dt: 1.21, eta: 1.1h
[INFO]: 2024-04-01 04:43:30,314 iter: 47000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0151, cls: 0.0201, iou: 0.0304), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 1.0h
[INFO]: 2024-04-01 04:48:18,045 iter: 47250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0162, cls: 0.0206, iou: 0.0321), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 55.6m
[INFO]: 2024-04-01 04:53:00,904 iter: 47500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0142, cls: 0.0193, iou: 0.0293), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 50.5m
[INFO]: 2024-04-01 04:57:46,200 iter: 47750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0141, cls: 0.0197, iou: 0.0291), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 45.4m
[INFO]: 2024-04-01 05:02:30,748 iter: 48000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0142, cls: 0.0199, iou: 0.0291), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 40.4m
[INFO]: 2024-04-01 05:07:15,532 iter: 48250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0138, cls: 0.0202, iou: 0.0289), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 35.3m
[INFO]: 2024-04-01 05:11:58,470 iter: 48500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0141, cls: 0.0199, iou: 0.0287), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 30.3m
[INFO]: 2024-04-01 05:16:40,973 iter: 48750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0160, cls: 0.0211, iou: 0.0311), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 25.2m
[INFO]: 2024-04-01 05:21:26,333 iter: 49000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0157, cls: 0.0200, iou: 0.0300), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 20.2m
[INFO]: 2024-04-01 05:26:09,989 iter: 49250, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0148, cls: 0.0195, iou: 0.0285), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 15.1m
[INFO]: 2024-04-01 05:30:56,412 iter: 49500, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0149, cls: 0.0202, iou: 0.0290), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 10.1m
[INFO]: 2024-04-01 05:35:44,594 iter: 49750, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0169, cls: 0.0211, iou: 0.0305), misc (ry: 0.07, z: 0.13), dt: 1.21, eta: 5.1m
[INFO]: 2024-04-01 05:40:31,965 iter: 50000, acc (bg: 1.00, fg: 1.00, iou: 0.97), loss (bbox_3d: 0.0150, cls: 0.0205, iou: 0.0290), misc (ry: 0.06, z: 0.13), dt: 1.21, eta: 1.2s
[INFO]: 2024-04-01 05:49:52,570 test_iter 50000 2d car --> easy: 0.9289, mod: 0.8493, hard: 0.6845
[INFO]: 2024-04-01 05:49:52,571 test_iter 50000 gr car --> easy: 0.2740, mod: 0.2202, hard: 0.1843
[INFO]: 2024-04-01 05:49:52,571 test_iter 50000 3d car --> easy: 0.2089, mod: 0.1736, hard: 0.1542
[INFO]: 2024-04-01 05:49:52,572 test_iter 50000 2d pedestrian --> easy: 0.6665, mod: 0.5888, hard: 0.5058
[INFO]: 2024-04-01 05:49:52,573 test_iter 50000 gr pedestrian --> easy: 0.0716, mod: 0.0570, hard: 0.0515
[INFO]: 2024-04-01 05:49:52,573 test_iter 50000 3d pedestrian --> easy: 0.0570, mod: 0.0529, hard: 0.0439
[INFO]: 2024-04-01 05:49:52,574 test_iter 50000 2d cyclist --> easy: 0.6580, mod: 0.4121, hard: 0.4073
[INFO]: 2024-04-01 05:49:52,575 test_iter 50000 gr cyclist --> easy: 0.1092, mod: 0.1024, hard: 0.1027
[INFO]: 2024-04-01 05:49:52,575 test_iter 50000 3d cyclist --> easy: 0.1088, mod: 0.1019, hard: 0.1021
