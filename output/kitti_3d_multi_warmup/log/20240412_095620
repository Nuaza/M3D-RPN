[INFO]: 2024-04-12 09:56:20,609 ==开始处理数据集==
[INFO]: 2024-04-12 09:56:20,609 命中imdb缓存.
[INFO]: 2024-04-12 09:56:21,919 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-12 09:56:21,919 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-12 09:56:24,359 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-12 09:56:24,359 ==数据集处理完毕==
[INFO]: 2024-04-12 09:56:27,362 ==开始生成anchors==
[INFO]: 2024-04-12 09:56:27,363 ==anchors生成完毕==
[INFO]: 2024-04-12 09:56:30,366 ==开始计算bbox参数==
[INFO]: 2024-04-12 09:56:30,366 命中bbox的回归均值缓存
[INFO]: 2024-04-12 09:56:30,367 命中bbox的回归标准差缓存
[INFO]: 2024-04-12 09:56:30,367 ==bbox参数计算完毕==
[INFO]: 2024-04-12 09:56:38,400 设置保存完成
[INFO]: 2024-04-12 09:56:41,403 训练配置一览
[INFO]: 2024-04-12 09:56:43,411 训练配置: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2024-04-12 09:56:48,906 装载完成
[INFO]: 2024-04-12 09:56:51,910 神经网络结构一览
[INFO]: 2024-04-12 09:56:53,912 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(1024, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-12 09:59:32,069 iter: 250, acc (bg: 0.98, fg: 0.37, iou: 0.61), loss (bbox_3d: 2.2440, cls: 0.6303, iou: 0.5006), misc (ry: 1.53, z: 2.82), dt: 0.64, eta: 8.8h
[INFO]: 2024-04-12 10:02:05,339 iter: 500, acc (bg: 0.99, fg: 0.73, iou: 0.68), loss (bbox_3d: 1.5438, cls: 0.3138, iou: 0.4003), misc (ry: 1.23, z: 2.07), dt: 0.62, eta: 8.6h
[INFO]: 2024-04-12 10:04:42,587 iter: 750, acc (bg: 0.99, fg: 0.82, iou: 0.72), loss (bbox_3d: 1.2185, cls: 0.2486, iou: 0.3394), misc (ry: 1.06, z: 1.61), dt: 0.63, eta: 8.6h
[INFO]: 2024-04-12 10:07:16,406 iter: 1000, acc (bg: 0.99, fg: 0.83, iou: 0.73), loss (bbox_3d: 1.1507, cls: 0.2231, iou: 0.3188), misc (ry: 0.99, z: 1.57), dt: 0.62, eta: 8.5h
[INFO]: 2024-04-12 10:09:49,332 iter: 1250, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0569, cls: 0.2009, iou: 0.2941), misc (ry: 0.96, z: 1.44), dt: 0.62, eta: 8.4h
[INFO]: 2024-04-12 10:12:25,501 iter: 1500, acc (bg: 0.99, fg: 0.86, iou: 0.76), loss (bbox_3d: 0.9340, cls: 0.1919, iou: 0.2840), misc (ry: 0.90, z: 1.31), dt: 0.62, eta: 8.4h
[INFO]: 2024-04-12 10:15:01,489 iter: 1750, acc (bg: 1.00, fg: 0.86, iou: 0.77), loss (bbox_3d: 0.9393, cls: 0.1861, iou: 0.2736), misc (ry: 0.86, z: 1.32), dt: 0.62, eta: 8.3h
[INFO]: 2024-04-12 10:17:37,936 iter: 2000, acc (bg: 1.00, fg: 0.89, iou: 0.77), loss (bbox_3d: 0.9195, cls: 0.1645, iou: 0.2651), misc (ry: 0.84, z: 1.30), dt: 0.62, eta: 8.3h
[INFO]: 2024-04-12 10:20:08,658 iter: 2250, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7907, cls: 0.1570, iou: 0.2408), misc (ry: 0.77, z: 1.17), dt: 0.62, eta: 8.2h
[INFO]: 2024-04-12 10:22:39,599 iter: 2500, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7654, cls: 0.1546, iou: 0.2438), misc (ry: 0.75, z: 1.16), dt: 0.62, eta: 8.2h
[INFO]: 2024-04-12 10:25:12,892 iter: 2750, acc (bg: 1.00, fg: 0.91, iou: 0.80), loss (bbox_3d: 0.7317, cls: 0.1417, iou: 0.2292), misc (ry: 0.75, z: 1.09), dt: 0.62, eta: 8.1h
[INFO]: 2024-04-12 10:27:48,735 iter: 3000, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7642, cls: 0.1372, iou: 0.2301), misc (ry: 0.79, z: 1.14), dt: 0.62, eta: 8.1h
[INFO]: 2024-04-12 10:30:27,030 iter: 3250, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6826, cls: 0.1344, iou: 0.2214), misc (ry: 0.68, z: 1.07), dt: 0.62, eta: 8.0h
[INFO]: 2024-04-12 10:33:00,674 iter: 3500, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6967, cls: 0.1357, iou: 0.2205), misc (ry: 0.73, z: 1.06), dt: 0.62, eta: 8.0h
[INFO]: 2024-04-12 10:35:32,820 iter: 3750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6415, cls: 0.1193, iou: 0.2107), misc (ry: 0.63, z: 1.00), dt: 0.62, eta: 7.9h
[INFO]: 2024-04-12 10:38:05,499 iter: 4000, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.7372, cls: 0.1304, iou: 0.2193), misc (ry: 0.77, z: 1.20), dt: 0.62, eta: 7.9h
[INFO]: 2024-04-12 10:40:39,286 iter: 4250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6360, cls: 0.1227, iou: 0.2152), misc (ry: 0.60, z: 1.01), dt: 0.62, eta: 7.9h
[INFO]: 2024-04-12 10:43:14,881 iter: 4500, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5909, cls: 0.1134, iou: 0.1962), misc (ry: 0.63, z: 0.94), dt: 0.62, eta: 7.8h
[INFO]: 2024-04-12 10:45:52,706 iter: 4750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6498, cls: 0.1230, iou: 0.2092), misc (ry: 0.68, z: 1.01), dt: 0.62, eta: 7.8h
[INFO]: 2024-04-12 10:48:30,033 iter: 5000, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6065, cls: 0.1285, iou: 0.2067), misc (ry: 0.65, z: 0.91), dt: 0.62, eta: 7.7h
[INFO]: 2024-04-12 10:51:01,857 iter: 5250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5299, cls: 0.1077, iou: 0.1902), misc (ry: 0.55, z: 0.92), dt: 0.62, eta: 7.7h
[INFO]: 2024-04-12 10:53:35,446 iter: 5500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5590, cls: 0.1096, iou: 0.1964), misc (ry: 0.52, z: 1.01), dt: 0.62, eta: 7.6h
[INFO]: 2024-04-12 10:56:11,908 iter: 5750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5450, cls: 0.1101, iou: 0.1943), misc (ry: 0.58, z: 1.01), dt: 0.62, eta: 7.6h
[INFO]: 2024-04-12 10:58:47,988 iter: 6000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5622, cls: 0.1116, iou: 0.1914), misc (ry: 0.61, z: 0.86), dt: 0.62, eta: 7.6h
[INFO]: 2024-04-12 11:01:22,974 iter: 6250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5309, cls: 0.1121, iou: 0.1934), misc (ry: 0.58, z: 0.89), dt: 0.62, eta: 7.5h
[INFO]: 2024-04-12 11:03:56,997 iter: 6500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5271, cls: 0.1133, iou: 0.1911), misc (ry: 0.60, z: 0.84), dt: 0.62, eta: 7.5h
[INFO]: 2024-04-12 11:06:26,229 iter: 6750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4546, cls: 0.0975, iou: 0.1847), misc (ry: 0.50, z: 0.82), dt: 0.62, eta: 7.4h
[INFO]: 2024-04-12 11:08:58,956 iter: 7000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4789, cls: 0.0981, iou: 0.1824), misc (ry: 0.51, z: 0.86), dt: 0.62, eta: 7.4h
[INFO]: 2024-04-12 11:11:33,866 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.5342, cls: 0.1009, iou: 0.1842), misc (ry: 0.58, z: 0.92), dt: 0.62, eta: 7.3h
[INFO]: 2024-04-12 11:14:06,140 iter: 7500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4842, cls: 0.0890, iou: 0.1791), misc (ry: 0.47, z: 0.91), dt: 0.62, eta: 7.3h
[INFO]: 2024-04-12 11:16:38,703 iter: 7750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4255, cls: 0.0889, iou: 0.1743), misc (ry: 0.44, z: 0.76), dt: 0.62, eta: 7.2h
[INFO]: 2024-04-12 11:19:14,921 iter: 8000, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4785, cls: 0.1076, iou: 0.1862), misc (ry: 0.49, z: 0.82), dt: 0.62, eta: 7.2h
[INFO]: 2024-04-12 11:21:48,168 iter: 8250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4031, cls: 0.0962, iou: 0.1773), misc (ry: 0.45, z: 0.81), dt: 0.62, eta: 7.2h
[INFO]: 2024-04-12 11:24:24,700 iter: 8500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3969, cls: 0.0864, iou: 0.1667), misc (ry: 0.44, z: 0.74), dt: 0.62, eta: 7.1h
[INFO]: 2024-04-12 11:27:04,247 iter: 8750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4308, cls: 0.0955, iou: 0.1776), misc (ry: 0.45, z: 0.82), dt: 0.62, eta: 7.1h
[INFO]: 2024-04-12 11:29:37,112 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4158, cls: 0.0890, iou: 0.1708), misc (ry: 0.46, z: 0.76), dt: 0.62, eta: 7.0h
[INFO]: 2024-04-12 11:32:12,684 iter: 9250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4115, cls: 0.0845, iou: 0.1698), misc (ry: 0.46, z: 0.76), dt: 0.62, eta: 7.0h
[INFO]: 2024-04-12 11:34:47,005 iter: 9500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3928, cls: 0.0835, iou: 0.1688), misc (ry: 0.43, z: 0.70), dt: 0.62, eta: 7.0h
[INFO]: 2024-04-12 11:37:24,801 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4013, cls: 0.0887, iou: 0.1674), misc (ry: 0.42, z: 0.75), dt: 0.62, eta: 6.9h
[INFO]: 2024-04-12 11:39:59,094 iter: 10000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3836, cls: 0.0833, iou: 0.1699), misc (ry: 0.46, z: 0.77), dt: 0.62, eta: 6.9h
[INFO]: 2024-04-12 11:49:02,835 test_iter 10000 2d car --> easy: 0.8593, mod: 0.8234, hard: 0.6719
[INFO]: 2024-04-12 11:49:02,836 test_iter 10000 gr car --> easy: 0.1110, mod: 0.0911, hard: 0.0745
[INFO]: 2024-04-12 11:49:02,836 test_iter 10000 3d car --> easy: 0.0824, mod: 0.0678, hard: 0.0628
[INFO]: 2024-04-12 11:49:02,837 test_iter 10000 2d pedestrian --> easy: 0.5941, mod: 0.5283, hard: 0.4563
[INFO]: 2024-04-12 11:49:02,838 test_iter 10000 gr pedestrian --> easy: 0.0225, mod: 0.0182, hard: 0.0182
[INFO]: 2024-04-12 11:49:02,838 test_iter 10000 3d pedestrian --> easy: 0.0108, mod: 0.0116, hard: 0.0112
[INFO]: 2024-04-12 11:49:02,839 test_iter 10000 2d cyclist --> easy: 0.3157, mod: 0.2091, hard: 0.2034
[INFO]: 2024-04-12 11:49:02,839 test_iter 10000 gr cyclist --> easy: 0.0065, mod: 0.0065, hard: 0.0065
[INFO]: 2024-04-12 11:49:02,840 test_iter 10000 3d cyclist --> easy: 0.0065, mod: 0.0065, hard: 0.0065
[INFO]: 2024-04-12 11:51:37,608 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3393, cls: 0.0850, iou: 0.1637), misc (ry: 0.44, z: 0.68), dt: 0.67, eta: 7.4h
[INFO]: 2024-04-12 11:54:12,027 iter: 10500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3620, cls: 0.0774, iou: 0.1632), misc (ry: 0.40, z: 0.70), dt: 0.67, eta: 7.4h
[INFO]: 2024-04-12 11:56:46,796 iter: 10750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3348, cls: 0.0784, iou: 0.1594), misc (ry: 0.36, z: 0.67), dt: 0.67, eta: 7.3h
[INFO]: 2024-04-12 11:59:20,824 iter: 11000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3899, cls: 0.0855, iou: 0.1689), misc (ry: 0.48, z: 0.71), dt: 0.67, eta: 7.2h
[INFO]: 2024-04-12 12:01:54,331 iter: 11250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3295, cls: 0.0791, iou: 0.1633), misc (ry: 0.38, z: 0.70), dt: 0.67, eta: 7.2h
[INFO]: 2024-04-12 12:04:26,011 iter: 11500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3267, cls: 0.0772, iou: 0.1546), misc (ry: 0.39, z: 0.67), dt: 0.67, eta: 7.1h
[INFO]: 2024-04-12 12:06:56,554 iter: 11750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3894, cls: 0.0851, iou: 0.1665), misc (ry: 0.47, z: 0.73), dt: 0.66, eta: 7.1h
[INFO]: 2024-04-12 12:09:31,392 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3264, cls: 0.0737, iou: 0.1548), misc (ry: 0.39, z: 0.68), dt: 0.66, eta: 7.0h
[INFO]: 2024-04-12 12:12:03,837 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3148, cls: 0.0772, iou: 0.1533), misc (ry: 0.39, z: 0.63), dt: 0.66, eta: 6.9h
[INFO]: 2024-04-12 12:14:35,053 iter: 12500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3184, cls: 0.0735, iou: 0.1530), misc (ry: 0.40, z: 0.66), dt: 0.66, eta: 6.9h
[INFO]: 2024-04-12 12:17:09,982 iter: 12750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3324, cls: 0.0786, iou: 0.1598), misc (ry: 0.40, z: 0.70), dt: 0.66, eta: 6.8h
[INFO]: 2024-04-12 12:19:44,705 iter: 13000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3246, cls: 0.0742, iou: 0.1550), misc (ry: 0.43, z: 0.67), dt: 0.66, eta: 6.8h
[INFO]: 2024-04-12 12:22:21,076 iter: 13250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2988, cls: 0.0721, iou: 0.1476), misc (ry: 0.37, z: 0.66), dt: 0.66, eta: 6.7h
[INFO]: 2024-04-12 12:24:58,492 iter: 13500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3355, cls: 0.0730, iou: 0.1548), misc (ry: 0.38, z: 0.67), dt: 0.66, eta: 6.7h
[INFO]: 2024-04-12 12:27:36,010 iter: 13750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2933, cls: 0.0673, iou: 0.1463), misc (ry: 0.39, z: 0.62), dt: 0.66, eta: 6.6h
[INFO]: 2024-04-12 12:30:11,862 iter: 14000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2975, cls: 0.0711, iou: 0.1494), misc (ry: 0.37, z: 0.64), dt: 0.66, eta: 6.6h
[INFO]: 2024-04-12 12:32:51,079 iter: 14250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3189, cls: 0.0754, iou: 0.1523), misc (ry: 0.36, z: 0.72), dt: 0.66, eta: 6.5h
[INFO]: 2024-04-12 12:35:26,485 iter: 14500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2791, cls: 0.0685, iou: 0.1457), misc (ry: 0.31, z: 0.64), dt: 0.66, eta: 6.5h
[INFO]: 2024-04-12 12:38:01,104 iter: 14750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2422, cls: 0.0650, iou: 0.1404), misc (ry: 0.33, z: 0.57), dt: 0.66, eta: 6.4h
[INFO]: 2024-04-12 12:40:31,407 iter: 15000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2281, cls: 0.0656, iou: 0.1389), misc (ry: 0.31, z: 0.58), dt: 0.65, eta: 6.4h
[INFO]: 2024-04-12 12:43:01,442 iter: 15250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2398, cls: 0.0632, iou: 0.1353), misc (ry: 0.35, z: 0.55), dt: 0.65, eta: 6.3h
[INFO]: 2024-04-12 12:45:31,891 iter: 15500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2429, cls: 0.0626, iou: 0.1429), misc (ry: 0.29, z: 0.63), dt: 0.65, eta: 6.3h
[INFO]: 2024-04-12 12:48:01,744 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2624, cls: 0.0656, iou: 0.1399), misc (ry: 0.30, z: 0.59), dt: 0.65, eta: 6.2h
[INFO]: 2024-04-12 12:50:35,807 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2368, cls: 0.0648, iou: 0.1381), misc (ry: 0.28, z: 0.59), dt: 0.65, eta: 6.2h
[INFO]: 2024-04-12 12:53:08,568 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2409, cls: 0.0629, iou: 0.1386), misc (ry: 0.33, z: 0.56), dt: 0.65, eta: 6.1h
[INFO]: 2024-04-12 12:55:45,233 iter: 16500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2179, cls: 0.0618, iou: 0.1367), misc (ry: 0.29, z: 0.58), dt: 0.65, eta: 6.1h
[INFO]: 2024-04-12 12:58:17,627 iter: 16750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2242, cls: 0.0640, iou: 0.1353), misc (ry: 0.30, z: 0.52), dt: 0.65, eta: 6.0h
[INFO]: 2024-04-12 13:00:47,403 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2207, cls: 0.0613, iou: 0.1338), misc (ry: 0.30, z: 0.53), dt: 0.65, eta: 5.9h
[INFO]: 2024-04-12 13:03:17,672 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2272, cls: 0.0598, iou: 0.1383), misc (ry: 0.30, z: 0.55), dt: 0.65, eta: 5.9h
[INFO]: 2024-04-12 13:05:46,193 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2389, cls: 0.0611, iou: 0.1374), misc (ry: 0.32, z: 0.63), dt: 0.65, eta: 5.8h
[INFO]: 2024-04-12 13:08:18,077 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1984, cls: 0.0563, iou: 0.1265), misc (ry: 0.28, z: 0.55), dt: 0.65, eta: 5.8h
[INFO]: 2024-04-12 13:10:50,520 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2117, cls: 0.0587, iou: 0.1309), misc (ry: 0.29, z: 0.59), dt: 0.65, eta: 5.7h
[INFO]: 2024-04-12 13:13:25,401 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1991, cls: 0.0584, iou: 0.1295), misc (ry: 0.27, z: 0.53), dt: 0.65, eta: 5.7h
[INFO]: 2024-04-12 13:15:58,994 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1949, cls: 0.0559, iou: 0.1305), misc (ry: 0.26, z: 0.56), dt: 0.65, eta: 5.7h
[INFO]: 2024-04-12 13:18:31,851 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1957, cls: 0.0548, iou: 0.1278), misc (ry: 0.30, z: 0.56), dt: 0.65, eta: 5.6h
[INFO]: 2024-04-12 13:21:01,759 iter: 19000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1980, cls: 0.0552, iou: 0.1285), misc (ry: 0.30, z: 0.53), dt: 0.64, eta: 5.6h
[INFO]: 2024-04-12 13:23:34,193 iter: 19250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1915, cls: 0.0537, iou: 0.1283), misc (ry: 0.25, z: 0.55), dt: 0.64, eta: 5.5h
[INFO]: 2024-04-12 13:26:04,768 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1865, cls: 0.0562, iou: 0.1239), misc (ry: 0.24, z: 0.53), dt: 0.64, eta: 5.5h
[INFO]: 2024-04-12 13:28:34,379 iter: 19750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1903, cls: 0.0544, iou: 0.1273), misc (ry: 0.25, z: 0.57), dt: 0.64, eta: 5.4h
[INFO]: 2024-04-12 13:31:02,786 iter: 20000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1909, cls: 0.0534, iou: 0.1268), misc (ry: 0.27, z: 0.55), dt: 0.64, eta: 5.4h
[INFO]: 2024-04-12 13:40:11,251 test_iter 20000 2d car --> easy: 0.9042, mod: 0.8123, hard: 0.6681
[INFO]: 2024-04-12 13:40:11,252 test_iter 20000 gr car --> easy: 0.1339, mod: 0.1007, hard: 0.0842
[INFO]: 2024-04-12 13:40:11,252 test_iter 20000 3d car --> easy: 0.0942, mod: 0.0692, hard: 0.0561
[INFO]: 2024-04-12 13:40:11,253 test_iter 20000 2d pedestrian --> easy: 0.6675, mod: 0.5829, hard: 0.5057
[INFO]: 2024-04-12 13:40:11,253 test_iter 20000 gr pedestrian --> easy: 0.0123, mod: 0.0151, hard: 0.0102
[INFO]: 2024-04-12 13:40:11,254 test_iter 20000 3d pedestrian --> easy: 0.0107, mod: 0.0087, hard: 0.0085
[INFO]: 2024-04-12 13:40:11,254 test_iter 20000 2d cyclist --> easy: 0.4257, mod: 0.2914, hard: 0.2870
[INFO]: 2024-04-12 13:40:11,255 test_iter 20000 gr cyclist --> easy: 0.0159, mod: 0.0087, hard: 0.0092
[INFO]: 2024-04-12 13:40:11,255 test_iter 20000 3d cyclist --> easy: 0.0131, mod: 0.0071, hard: 0.0065
[INFO]: 2024-04-12 13:42:41,674 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2697, cls: 0.0602, iou: 0.1348), misc (ry: 0.45, z: 0.57), dt: 0.67, eta: 5.5h
[INFO]: 2024-04-12 13:45:14,033 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2250, cls: 0.0606, iou: 0.1330), misc (ry: 0.34, z: 0.56), dt: 0.67, eta: 5.5h
[INFO]: 2024-04-12 13:47:47,828 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2016, cls: 0.0590, iou: 0.1266), misc (ry: 0.31, z: 0.52), dt: 0.67, eta: 5.4h
[INFO]: 2024-04-12 13:50:17,789 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1970, cls: 0.0516, iou: 0.1273), misc (ry: 0.32, z: 0.52), dt: 0.67, eta: 5.4h
[INFO]: 2024-04-12 13:52:47,236 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1915, cls: 0.0555, iou: 0.1257), misc (ry: 0.30, z: 0.50), dt: 0.67, eta: 5.3h
[INFO]: 2024-04-12 13:55:20,720 iter: 21500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1695, cls: 0.0517, iou: 0.1199), misc (ry: 0.25, z: 0.52), dt: 0.67, eta: 5.3h
[INFO]: 2024-04-12 13:57:58,143 iter: 21750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1848, cls: 0.0543, iou: 0.1218), misc (ry: 0.26, z: 0.50), dt: 0.67, eta: 5.2h
[INFO]: 2024-04-12 14:00:33,584 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1727, cls: 0.0510, iou: 0.1196), misc (ry: 0.26, z: 0.52), dt: 0.66, eta: 5.2h
[INFO]: 2024-04-12 14:03:01,613 iter: 22250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1559, cls: 0.0501, iou: 0.1185), misc (ry: 0.26, z: 0.48), dt: 0.66, eta: 5.1h
[INFO]: 2024-04-12 14:05:35,013 iter: 22500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1796, cls: 0.0531, iou: 0.1239), misc (ry: 0.27, z: 0.50), dt: 0.66, eta: 5.1h
[INFO]: 2024-04-12 14:08:13,203 iter: 22750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1824, cls: 0.0544, iou: 0.1236), misc (ry: 0.26, z: 0.52), dt: 0.66, eta: 5.0h
[INFO]: 2024-04-12 14:10:51,215 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1526, cls: 0.0508, iou: 0.1158), misc (ry: 0.24, z: 0.46), dt: 0.66, eta: 5.0h
[INFO]: 2024-04-12 14:13:24,577 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1478, cls: 0.0464, iou: 0.1151), misc (ry: 0.23, z: 0.47), dt: 0.66, eta: 4.9h
[INFO]: 2024-04-12 14:16:02,498 iter: 23500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1530, cls: 0.0475, iou: 0.1113), misc (ry: 0.22, z: 0.49), dt: 0.66, eta: 4.9h
[INFO]: 2024-04-12 14:18:36,498 iter: 23750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1557, cls: 0.0508, iou: 0.1164), misc (ry: 0.24, z: 0.46), dt: 0.66, eta: 4.8h
[INFO]: 2024-04-12 14:21:03,287 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1619, cls: 0.0490, iou: 0.1129), misc (ry: 0.23, z: 0.51), dt: 0.66, eta: 4.8h
[INFO]: 2024-04-12 14:23:32,963 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1436, cls: 0.0519, iou: 0.1111), misc (ry: 0.20, z: 0.47), dt: 0.66, eta: 4.7h
[INFO]: 2024-04-12 14:26:03,946 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1316, cls: 0.0493, iou: 0.1082), misc (ry: 0.20, z: 0.44), dt: 0.66, eta: 4.7h
[INFO]: 2024-04-12 14:28:36,251 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1499, cls: 0.0502, iou: 0.1123), misc (ry: 0.23, z: 0.49), dt: 0.66, eta: 4.6h
[INFO]: 2024-04-12 14:31:13,532 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1360, cls: 0.0453, iou: 0.1062), misc (ry: 0.21, z: 0.49), dt: 0.66, eta: 4.6h
[INFO]: 2024-04-12 14:33:46,561 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1411, cls: 0.0451, iou: 0.1101), misc (ry: 0.21, z: 0.47), dt: 0.66, eta: 4.5h
[INFO]: 2024-04-12 14:36:25,219 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1375, cls: 0.0476, iou: 0.1135), misc (ry: 0.22, z: 0.45), dt: 0.66, eta: 4.5h
[INFO]: 2024-04-12 14:38:59,232 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1263, cls: 0.0484, iou: 0.1069), misc (ry: 0.20, z: 0.44), dt: 0.66, eta: 4.4h
[INFO]: 2024-04-12 14:41:28,749 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1310, cls: 0.0450, iou: 0.1075), misc (ry: 0.20, z: 0.46), dt: 0.66, eta: 4.4h
[INFO]: 2024-04-12 14:44:01,673 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1214, cls: 0.0453, iou: 0.1073), misc (ry: 0.21, z: 0.42), dt: 0.66, eta: 4.3h
[INFO]: 2024-04-12 14:46:31,565 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1281, cls: 0.0440, iou: 0.1045), misc (ry: 0.22, z: 0.45), dt: 0.66, eta: 4.3h
[INFO]: 2024-04-12 14:49:06,956 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1320, cls: 0.0433, iou: 0.1049), misc (ry: 0.24, z: 0.46), dt: 0.66, eta: 4.2h
[INFO]: 2024-04-12 14:51:45,067 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1295, cls: 0.0475, iou: 0.1098), misc (ry: 0.22, z: 0.43), dt: 0.66, eta: 4.2h
[INFO]: 2024-04-12 14:54:21,338 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1383, cls: 0.0470, iou: 0.1089), misc (ry: 0.24, z: 0.44), dt: 0.65, eta: 4.1h
[INFO]: 2024-04-12 14:56:55,941 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1305, cls: 0.0479, iou: 0.1090), misc (ry: 0.21, z: 0.44), dt: 0.65, eta: 4.1h
[INFO]: 2024-04-12 14:59:31,103 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1210, cls: 0.0474, iou: 0.1085), misc (ry: 0.19, z: 0.41), dt: 0.65, eta: 4.0h
[INFO]: 2024-04-12 15:02:03,059 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1208, cls: 0.0446, iou: 0.1035), misc (ry: 0.19, z: 0.42), dt: 0.65, eta: 4.0h
[INFO]: 2024-04-12 15:04:32,456 iter: 28250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1108, cls: 0.0419, iou: 0.1023), misc (ry: 0.20, z: 0.39), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-12 15:07:03,490 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1154, cls: 0.0443, iou: 0.1023), misc (ry: 0.20, z: 0.40), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-12 15:09:37,077 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1167, cls: 0.0445, iou: 0.1054), misc (ry: 0.22, z: 0.43), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-12 15:12:13,727 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1074, cls: 0.0412, iou: 0.1018), misc (ry: 0.19, z: 0.42), dt: 0.65, eta: 3.8h
[INFO]: 2024-04-12 15:14:46,503 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1075, cls: 0.0404, iou: 0.1002), misc (ry: 0.18, z: 0.40), dt: 0.65, eta: 3.8h
[INFO]: 2024-04-12 15:17:16,973 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1210, cls: 0.0456, iou: 0.1018), misc (ry: 0.22, z: 0.41), dt: 0.65, eta: 3.7h
[INFO]: 2024-04-12 15:19:52,643 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1280, cls: 0.0478, iou: 0.1070), misc (ry: 0.21, z: 0.44), dt: 0.65, eta: 3.7h
[INFO]: 2024-04-12 15:22:25,363 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1029, cls: 0.0427, iou: 0.0993), misc (ry: 0.19, z: 0.39), dt: 0.65, eta: 3.6h
[INFO]: 2024-04-12 15:31:19,700 test_iter 30000 2d car --> easy: 0.9333, mod: 0.8435, hard: 0.6847
[INFO]: 2024-04-12 15:31:19,701 test_iter 30000 gr car --> easy: 0.2379, mod: 0.1774, hard: 0.1594
[INFO]: 2024-04-12 15:31:19,702 test_iter 30000 3d car --> easy: 0.1773, mod: 0.1430, hard: 0.1257
[INFO]: 2024-04-12 15:31:19,702 test_iter 30000 2d pedestrian --> easy: 0.7239, mod: 0.5826, hard: 0.4996
[INFO]: 2024-04-12 15:31:19,703 test_iter 30000 gr pedestrian --> easy: 0.0295, mod: 0.0264, hard: 0.0263
[INFO]: 2024-04-12 15:31:19,703 test_iter 30000 3d pedestrian --> easy: 0.0225, mod: 0.0218, hard: 0.0148
[INFO]: 2024-04-12 15:31:19,704 test_iter 30000 2d cyclist --> easy: 0.5953, mod: 0.4181, hard: 0.3470
[INFO]: 2024-04-12 15:31:19,705 test_iter 30000 gr cyclist --> easy: 0.0276, mod: 0.0140, hard: 0.0145
[INFO]: 2024-04-12 15:31:19,705 test_iter 30000 3d cyclist --> easy: 0.0206, mod: 0.0112, hard: 0.0117
[INFO]: 2024-04-12 15:33:50,496 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0952, cls: 0.0422, iou: 0.0957), misc (ry: 0.18, z: 0.37), dt: 0.67, eta: 3.7h
[INFO]: 2024-04-12 15:36:23,695 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1113, cls: 0.0400, iou: 0.0996), misc (ry: 0.20, z: 0.44), dt: 0.67, eta: 3.6h
[INFO]: 2024-04-12 15:39:00,190 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1094, cls: 0.0437, iou: 0.1017), misc (ry: 0.19, z: 0.40), dt: 0.67, eta: 3.6h
[INFO]: 2024-04-12 15:41:36,720 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1039, cls: 0.0407, iou: 0.0957), misc (ry: 0.20, z: 0.36), dt: 0.67, eta: 3.5h
[INFO]: 2024-04-12 15:44:10,863 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0996, cls: 0.0417, iou: 0.0976), misc (ry: 0.19, z: 0.37), dt: 0.67, eta: 3.5h
[INFO]: 2024-04-12 15:46:44,851 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1059, cls: 0.0408, iou: 0.0944), misc (ry: 0.21, z: 0.38), dt: 0.67, eta: 3.4h
[INFO]: 2024-04-12 15:49:18,676 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1145, cls: 0.0422, iou: 0.1017), misc (ry: 0.22, z: 0.41), dt: 0.67, eta: 3.4h
[INFO]: 2024-04-12 15:51:52,540 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0998, cls: 0.0404, iou: 0.0968), misc (ry: 0.18, z: 0.38), dt: 0.67, eta: 3.3h
[INFO]: 2024-04-12 15:54:27,904 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0974, cls: 0.0414, iou: 0.0951), misc (ry: 0.17, z: 0.40), dt: 0.67, eta: 3.3h
[INFO]: 2024-04-12 15:57:00,692 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0904, cls: 0.0430, iou: 0.0930), misc (ry: 0.17, z: 0.37), dt: 0.66, eta: 3.2h
[INFO]: 2024-04-12 15:59:35,415 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0914, cls: 0.0390, iou: 0.0917), misc (ry: 0.17, z: 0.36), dt: 0.66, eta: 3.2h
[INFO]: 2024-04-12 16:02:08,637 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0922, cls: 0.0405, iou: 0.0899), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 3.1h
[INFO]: 2024-04-12 16:04:41,356 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0865, cls: 0.0375, iou: 0.0924), misc (ry: 0.16, z: 0.38), dt: 0.66, eta: 3.1h
[INFO]: 2024-04-12 16:07:15,887 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0920, cls: 0.0384, iou: 0.0921), misc (ry: 0.17, z: 0.38), dt: 0.66, eta: 3.0h
[INFO]: 2024-04-12 16:09:47,553 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0832, cls: 0.0375, iou: 0.0889), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 3.0h
[INFO]: 2024-04-12 16:12:23,451 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0802, cls: 0.0369, iou: 0.0887), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 2.9h
[INFO]: 2024-04-12 16:14:55,158 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0870, cls: 0.0378, iou: 0.0900), misc (ry: 0.17, z: 0.36), dt: 0.66, eta: 2.9h
[INFO]: 2024-04-12 16:17:27,283 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0812, cls: 0.0388, iou: 0.0890), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.8h
[INFO]: 2024-04-12 16:20:01,857 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0813, cls: 0.0354, iou: 0.0855), misc (ry: 0.17, z: 0.33), dt: 0.66, eta: 2.8h
[INFO]: 2024-04-12 16:22:33,820 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0775, cls: 0.0381, iou: 0.0886), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 2.8h
[INFO]: 2024-04-12 16:25:04,816 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0821, cls: 0.0367, iou: 0.0888), misc (ry: 0.16, z: 0.35), dt: 0.66, eta: 2.7h
[INFO]: 2024-04-12 16:27:38,641 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0757, cls: 0.0361, iou: 0.0859), misc (ry: 0.16, z: 0.35), dt: 0.66, eta: 2.7h
[INFO]: 2024-04-12 16:30:11,441 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0802, cls: 0.0388, iou: 0.0873), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.6h
[INFO]: 2024-04-12 16:32:42,536 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0724, cls: 0.0359, iou: 0.0844), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 2.6h
[INFO]: 2024-04-12 16:35:18,551 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0748, cls: 0.0372, iou: 0.0838), misc (ry: 0.15, z: 0.34), dt: 0.66, eta: 2.5h
[INFO]: 2024-04-12 16:37:53,304 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0697, cls: 0.0356, iou: 0.0836), misc (ry: 0.15, z: 0.32), dt: 0.66, eta: 2.5h
[INFO]: 2024-04-12 16:40:27,639 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0698, cls: 0.0352, iou: 0.0836), misc (ry: 0.15, z: 0.33), dt: 0.66, eta: 2.4h
[INFO]: 2024-04-12 16:43:02,240 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0698, cls: 0.0351, iou: 0.0820), misc (ry: 0.15, z: 0.33), dt: 0.66, eta: 2.4h
[INFO]: 2024-04-12 16:45:34,306 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0668, cls: 0.0357, iou: 0.0822), misc (ry: 0.15, z: 0.31), dt: 0.66, eta: 2.3h
[INFO]: 2024-04-12 16:48:06,135 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0653, cls: 0.0354, iou: 0.0792), misc (ry: 0.14, z: 0.30), dt: 0.66, eta: 2.3h
[INFO]: 2024-04-12 16:50:37,159 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0614, cls: 0.0333, iou: 0.0770), misc (ry: 0.14, z: 0.32), dt: 0.66, eta: 2.2h
[INFO]: 2024-04-12 16:53:10,091 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0702, cls: 0.0360, iou: 0.0810), misc (ry: 0.14, z: 0.34), dt: 0.66, eta: 2.2h
[INFO]: 2024-04-12 16:55:46,261 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0656, cls: 0.0352, iou: 0.0773), misc (ry: 0.14, z: 0.30), dt: 0.66, eta: 2.1h
[INFO]: 2024-04-12 16:58:23,941 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0643, cls: 0.0356, iou: 0.0777), misc (ry: 0.14, z: 0.31), dt: 0.66, eta: 2.1h
[INFO]: 2024-04-12 17:01:00,294 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0605, cls: 0.0340, iou: 0.0776), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 2.1h
[INFO]: 2024-04-12 17:03:31,689 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0643, cls: 0.0336, iou: 0.0752), misc (ry: 0.15, z: 0.30), dt: 0.66, eta: 2.0h
[INFO]: 2024-04-12 17:06:06,710 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0638, cls: 0.0346, iou: 0.0742), misc (ry: 0.16, z: 0.28), dt: 0.66, eta: 2.0h
[INFO]: 2024-04-12 17:08:39,652 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0644, cls: 0.0343, iou: 0.0738), misc (ry: 0.16, z: 0.29), dt: 0.66, eta: 1.9h
[INFO]: 2024-04-12 17:11:14,307 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0330, iou: 0.0727), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.9h
[INFO]: 2024-04-12 17:13:47,453 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0613, cls: 0.0311, iou: 0.0761), misc (ry: 0.16, z: 0.28), dt: 0.66, eta: 1.8h
[INFO]: 2024-04-12 17:22:42,005 test_iter 40000 2d car --> easy: 0.8942, mod: 0.8313, hard: 0.6738
[INFO]: 2024-04-12 17:22:42,006 test_iter 40000 gr car --> easy: 0.2617, mod: 0.2041, hard: 0.1710
[INFO]: 2024-04-12 17:22:42,006 test_iter 40000 3d car --> easy: 0.1458, mod: 0.1174, hard: 0.0903
[INFO]: 2024-04-12 17:22:42,007 test_iter 40000 2d pedestrian --> easy: 0.7172, mod: 0.5798, hard: 0.4984
[INFO]: 2024-04-12 17:22:42,008 test_iter 40000 gr pedestrian --> easy: 0.0405, mod: 0.0410, hard: 0.0340
[INFO]: 2024-04-12 17:22:42,008 test_iter 40000 3d pedestrian --> easy: 0.0343, mod: 0.0312, hard: 0.0310
[INFO]: 2024-04-12 17:22:42,009 test_iter 40000 2d cyclist --> easy: 0.6350, mod: 0.4031, hard: 0.3943
[INFO]: 2024-04-12 17:22:42,009 test_iter 40000 gr cyclist --> easy: 0.0217, mod: 0.0130, hard: 0.0130
[INFO]: 2024-04-12 17:22:42,010 test_iter 40000 3d cyclist --> easy: 0.0210, mod: 0.0130, hard: 0.0130
[INFO]: 2024-04-12 17:25:15,783 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0542, cls: 0.0331, iou: 0.0735), misc (ry: 0.14, z: 0.27), dt: 0.67, eta: 1.8h
[INFO]: 2024-04-12 17:27:53,029 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0315, iou: 0.0706), misc (ry: 0.13, z: 0.29), dt: 0.67, eta: 1.8h
[INFO]: 2024-04-12 17:30:25,501 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0543, cls: 0.0321, iou: 0.0729), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 1.7h
[INFO]: 2024-04-12 17:32:59,321 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0565, cls: 0.0322, iou: 0.0736), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 1.7h
[INFO]: 2024-04-12 17:35:32,221 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0538, cls: 0.0324, iou: 0.0722), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 1.6h
[INFO]: 2024-04-12 17:38:07,670 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0532, cls: 0.0311, iou: 0.0713), misc (ry: 0.13, z: 0.28), dt: 0.67, eta: 1.6h
[INFO]: 2024-04-12 17:40:41,925 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0526, cls: 0.0329, iou: 0.0711), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 1.5h
[INFO]: 2024-04-12 17:43:16,540 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0542, cls: 0.0324, iou: 0.0717), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 1.5h
[INFO]: 2024-04-12 17:45:51,888 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0500, cls: 0.0328, iou: 0.0678), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 1.4h
[INFO]: 2024-04-12 17:48:27,550 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0521, cls: 0.0300, iou: 0.0680), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 1.4h
[INFO]: 2024-04-12 17:51:05,038 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0530, cls: 0.0319, iou: 0.0693), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 1.3h
[INFO]: 2024-04-12 17:53:38,646 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0509, cls: 0.0319, iou: 0.0685), misc (ry: 0.13, z: 0.27), dt: 0.67, eta: 1.3h
[INFO]: 2024-04-12 17:56:11,496 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0566, cls: 0.0317, iou: 0.0682), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 1.2h
[INFO]: 2024-04-12 17:58:45,115 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0530, cls: 0.0325, iou: 0.0684), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 1.2h
[INFO]: 2024-04-12 18:01:17,832 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0514, cls: 0.0341, iou: 0.0685), misc (ry: 0.13, z: 0.26), dt: 0.66, eta: 1.2h
[INFO]: 2024-04-12 18:03:49,255 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0504, cls: 0.0305, iou: 0.0679), misc (ry: 0.12, z: 0.28), dt: 0.66, eta: 1.1h
[INFO]: 2024-04-12 18:06:23,780 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0515, cls: 0.0322, iou: 0.0697), misc (ry: 0.12, z: 0.27), dt: 0.66, eta: 1.1h
[INFO]: 2024-04-12 18:08:57,304 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0494, cls: 0.0333, iou: 0.0688), misc (ry: 0.13, z: 0.26), dt: 0.66, eta: 1.0h
[INFO]: 2024-04-12 18:11:30,211 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0476, cls: 0.0311, iou: 0.0662), misc (ry: 0.13, z: 0.25), dt: 0.66, eta: 58.0m
[INFO]: 2024-04-12 18:14:04,223 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0470, cls: 0.0315, iou: 0.0650), misc (ry: 0.12, z: 0.26), dt: 0.66, eta: 55.3m
[INFO]: 2024-04-12 18:16:37,181 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0471, cls: 0.0313, iou: 0.0639), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 52.5m
[INFO]: 2024-04-12 18:19:16,115 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0422, cls: 0.0306, iou: 0.0607), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 49.7m
[INFO]: 2024-04-12 18:21:50,039 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0445, cls: 0.0304, iou: 0.0626), misc (ry: 0.12, z: 0.25), dt: 0.66, eta: 46.9m
[INFO]: 2024-04-12 18:24:22,187 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0426, cls: 0.0290, iou: 0.0626), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 44.1m
[INFO]: 2024-04-12 18:26:58,217 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0308, iou: 0.0617), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 41.4m
[INFO]: 2024-04-12 18:29:28,932 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0445, cls: 0.0303, iou: 0.0624), misc (ry: 0.12, z: 0.25), dt: 0.66, eta: 38.6m
[INFO]: 2024-04-12 18:32:01,236 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0452, cls: 0.0317, iou: 0.0628), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 35.8m
[INFO]: 2024-04-12 18:34:35,204 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0432, cls: 0.0302, iou: 0.0608), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 33.1m
[INFO]: 2024-04-12 18:37:04,268 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0445, cls: 0.0306, iou: 0.0602), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 30.3m
[INFO]: 2024-04-12 18:39:35,336 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0441, cls: 0.0314, iou: 0.0606), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 27.5m
[INFO]: 2024-04-12 18:42:04,911 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0401, cls: 0.0299, iou: 0.0575), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 24.8m
[INFO]: 2024-04-12 18:44:39,107 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0463, cls: 0.0306, iou: 0.0619), misc (ry: 0.13, z: 0.24), dt: 0.66, eta: 22.0m
[INFO]: 2024-04-12 18:47:09,334 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0410, cls: 0.0291, iou: 0.0590), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 19.2m
[INFO]: 2024-04-12 18:49:42,305 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0388, cls: 0.0285, iou: 0.0578), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 16.5m
[INFO]: 2024-04-12 18:52:13,455 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0295, iou: 0.0602), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 13.7m
[INFO]: 2024-04-12 18:54:43,611 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0424, cls: 0.0293, iou: 0.0593), misc (ry: 0.12, z: 0.24), dt: 0.66, eta: 11.0m
[INFO]: 2024-04-12 18:57:13,465 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0301, iou: 0.0594), misc (ry: 0.12, z: 0.23), dt: 0.66, eta: 8.2m
[INFO]: 2024-04-12 18:59:46,193 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0427, cls: 0.0313, iou: 0.0596), misc (ry: 0.11, z: 0.24), dt: 0.66, eta: 5.5m
[INFO]: 2024-04-12 19:02:24,184 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0387, cls: 0.0287, iou: 0.0571), misc (ry: 0.11, z: 0.23), dt: 0.66, eta: 2.8m
[INFO]: 2024-04-12 19:05:01,799 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0405, cls: 0.0300, iou: 0.0589), misc (ry: 0.12, z: 0.23), dt: 0.66, eta: 0.7s
[INFO]: 2024-04-12 19:13:54,061 test_iter 50000 2d car --> easy: 0.8931, mod: 0.8301, hard: 0.6721
[INFO]: 2024-04-12 19:13:54,062 test_iter 50000 gr car --> easy: 0.2619, mod: 0.2074, hard: 0.1757
[INFO]: 2024-04-12 19:13:54,063 test_iter 50000 3d car --> easy: 0.2026, mod: 0.1645, hard: 0.1349
[INFO]: 2024-04-12 19:13:54,063 test_iter 50000 2d pedestrian --> easy: 0.7262, mod: 0.5833, hard: 0.5015
[INFO]: 2024-04-12 19:13:54,064 test_iter 50000 gr pedestrian --> easy: 0.0463, mod: 0.0477, hard: 0.0419
[INFO]: 2024-04-12 19:13:54,064 test_iter 50000 3d pedestrian --> easy: 0.0422, mod: 0.0395, hard: 0.0397
[INFO]: 2024-04-12 19:13:54,065 test_iter 50000 2d cyclist --> easy: 0.6581, mod: 0.4131, hard: 0.4080
[INFO]: 2024-04-12 19:13:54,066 test_iter 50000 gr cyclist --> easy: 0.0287, mod: 0.0182, hard: 0.0182
[INFO]: 2024-04-12 19:13:54,066 test_iter 50000 3d cyclist --> easy: 0.0287, mod: 0.0182, hard: 0.0182
