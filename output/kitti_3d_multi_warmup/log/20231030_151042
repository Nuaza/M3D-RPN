[INFO]: 2023-10-30 15:10:42,827 Preloading imdb.
[INFO]: 2023-10-30 15:10:44,090 weighted respectively as 1.05 and 0.00
[INFO]: 2023-10-30 15:10:44,090 Found 3534 foreground and 178 empty images
[INFO]: 2023-10-30 15:10:46,365 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-10-30 15:10:46,369 conf: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2023-10-30 15:10:46,609 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-10-30 15:13:04,313 iter: 250, acc (bg: 0.97, fg: 0.17, iou: 0.59), loss (bbox_3d: 2.6236, cls: 0.8162, iou: 0.5414), misc (ry: 1.58, z: 3.00), dt: 0.55, eta: 7.6h
[INFO]: 2023-10-30 15:15:22,123 iter: 500, acc (bg: 1.00, fg: 0.39, iou: 0.62), loss (bbox_3d: 2.1802, cls: 0.5559, iou: 0.4856), misc (ry: 1.49, z: 2.60), dt: 0.55, eta: 7.6h
[INFO]: 2023-10-30 15:17:36,422 iter: 750, acc (bg: 0.99, fg: 0.63, iou: 0.66), loss (bbox_3d: 1.6747, cls: 0.3782, iou: 0.4269), misc (ry: 1.40, z: 2.01), dt: 0.55, eta: 7.5h
[INFO]: 2023-10-30 15:19:50,166 iter: 1000, acc (bg: 0.99, fg: 0.73, iou: 0.69), loss (bbox_3d: 1.4833, cls: 0.3232, iou: 0.3796), misc (ry: 1.39, z: 1.84), dt: 0.54, eta: 7.4h
[INFO]: 2023-10-30 15:22:05,485 iter: 1250, acc (bg: 0.99, fg: 0.72, iou: 0.70), loss (bbox_3d: 1.4918, cls: 0.3213, iou: 0.3710), misc (ry: 1.31, z: 1.88), dt: 0.54, eta: 7.4h
[INFO]: 2023-10-30 15:24:21,876 iter: 1500, acc (bg: 0.99, fg: 0.78, iou: 0.72), loss (bbox_3d: 1.2533, cls: 0.2610, iou: 0.3440), misc (ry: 1.15, z: 1.56), dt: 0.54, eta: 7.3h
[INFO]: 2023-10-30 15:26:34,993 iter: 1750, acc (bg: 0.99, fg: 0.81, iou: 0.73), loss (bbox_3d: 1.1814, cls: 0.2403, iou: 0.3226), misc (ry: 1.13, z: 1.54), dt: 0.54, eta: 7.3h
[INFO]: 2023-10-30 15:28:49,566 iter: 2000, acc (bg: 0.99, fg: 0.83, iou: 0.74), loss (bbox_3d: 1.1587, cls: 0.2230, iou: 0.3167), misc (ry: 1.12, z: 1.48), dt: 0.54, eta: 7.2h
[INFO]: 2023-10-30 15:31:05,530 iter: 2250, acc (bg: 0.99, fg: 0.80, iou: 0.74), loss (bbox_3d: 1.1748, cls: 0.2443, iou: 0.3148), misc (ry: 1.04, z: 1.50), dt: 0.54, eta: 7.2h
[INFO]: 2023-10-30 15:33:22,066 iter: 2500, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0604, cls: 0.2006, iou: 0.2987), misc (ry: 0.97, z: 1.45), dt: 0.54, eta: 7.2h
[INFO]: 2023-10-30 15:35:40,943 iter: 2750, acc (bg: 0.99, fg: 0.86, iou: 0.76), loss (bbox_3d: 0.9477, cls: 0.1892, iou: 0.2810), misc (ry: 0.95, z: 1.24), dt: 0.54, eta: 7.1h
[INFO]: 2023-10-30 15:37:57,207 iter: 3000, acc (bg: 1.00, fg: 0.87, iou: 0.77), loss (bbox_3d: 0.9517, cls: 0.1777, iou: 0.2703), misc (ry: 0.91, z: 1.32), dt: 0.54, eta: 7.1h
[INFO]: 2023-10-30 15:40:13,716 iter: 3250, acc (bg: 0.99, fg: 0.87, iou: 0.77), loss (bbox_3d: 0.9046, cls: 0.1779, iou: 0.2667), misc (ry: 0.91, z: 1.21), dt: 0.54, eta: 7.1h
[INFO]: 2023-10-30 15:42:29,700 iter: 3500, acc (bg: 1.00, fg: 0.89, iou: 0.77), loss (bbox_3d: 0.8806, cls: 0.1634, iou: 0.2644), misc (ry: 0.84, z: 1.24), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-30 15:44:45,323 iter: 3750, acc (bg: 1.00, fg: 0.88, iou: 0.78), loss (bbox_3d: 0.8379, cls: 0.1569, iou: 0.2565), misc (ry: 0.83, z: 1.19), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-30 15:47:02,902 iter: 4000, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7958, cls: 0.1528, iou: 0.2508), misc (ry: 0.73, z: 1.12), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-30 15:49:20,795 iter: 4250, acc (bg: 1.00, fg: 0.87, iou: 0.78), loss (bbox_3d: 0.8587, cls: 0.1651, iou: 0.2518), misc (ry: 0.80, z: 1.23), dt: 0.54, eta: 6.9h
[INFO]: 2023-10-30 15:51:37,583 iter: 4500, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7770, cls: 0.1575, iou: 0.2437), misc (ry: 0.78, z: 1.06), dt: 0.54, eta: 6.9h
[INFO]: 2023-10-30 15:53:54,374 iter: 4750, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7792, cls: 0.1474, iou: 0.2380), misc (ry: 0.79, z: 1.18), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-30 15:56:09,164 iter: 5000, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.7596, cls: 0.1455, iou: 0.2354), misc (ry: 0.73, z: 1.12), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-30 15:58:23,679 iter: 5250, acc (bg: 1.00, fg: 0.87, iou: 0.79), loss (bbox_3d: 0.7634, cls: 0.1654, iou: 0.2384), misc (ry: 0.72, z: 1.11), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-30 16:00:39,583 iter: 5500, acc (bg: 1.00, fg: 0.91, iou: 0.80), loss (bbox_3d: 0.6740, cls: 0.1311, iou: 0.2256), misc (ry: 0.68, z: 1.04), dt: 0.54, eta: 6.7h
[INFO]: 2023-10-30 16:02:53,741 iter: 5750, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6731, cls: 0.1379, iou: 0.2226), misc (ry: 0.69, z: 1.04), dt: 0.54, eta: 6.7h
[INFO]: 2023-10-30 16:05:10,098 iter: 6000, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.7392, cls: 0.1531, iou: 0.2273), misc (ry: 0.79, z: 1.03), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-30 16:07:23,798 iter: 6250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6841, cls: 0.1326, iou: 0.2192), misc (ry: 0.69, z: 1.01), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-30 16:09:38,286 iter: 6500, acc (bg: 1.00, fg: 0.88, iou: 0.81), loss (bbox_3d: 0.6885, cls: 0.1507, iou: 0.2248), misc (ry: 0.71, z: 1.06), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-30 16:11:53,529 iter: 6750, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6832, cls: 0.1365, iou: 0.2209), misc (ry: 0.67, z: 1.02), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-30 16:14:10,914 iter: 7000, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5902, cls: 0.1239, iou: 0.2120), misc (ry: 0.61, z: 0.98), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-30 16:16:25,401 iter: 7250, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6416, cls: 0.1210, iou: 0.2092), misc (ry: 0.69, z: 0.98), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-30 16:18:39,495 iter: 7500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5889, cls: 0.1234, iou: 0.2091), misc (ry: 0.59, z: 1.06), dt: 0.54, eta: 6.4h
[INFO]: 2023-10-30 16:20:55,414 iter: 7750, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5975, cls: 0.1279, iou: 0.2062), misc (ry: 0.63, z: 0.95), dt: 0.54, eta: 6.4h
[INFO]: 2023-10-30 16:23:09,339 iter: 8000, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6258, cls: 0.1212, iou: 0.2111), misc (ry: 0.68, z: 1.00), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-30 16:25:23,320 iter: 8250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5570, cls: 0.1111, iou: 0.1982), misc (ry: 0.58, z: 0.90), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-30 16:27:34,776 iter: 8500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5698, cls: 0.1139, iou: 0.1982), misc (ry: 0.66, z: 0.89), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-30 16:29:48,822 iter: 8750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6077, cls: 0.1190, iou: 0.2026), misc (ry: 0.67, z: 0.94), dt: 0.54, eta: 6.2h
[INFO]: 2023-10-30 16:32:05,699 iter: 9000, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5647, cls: 0.1152, iou: 0.2025), misc (ry: 0.60, z: 0.92), dt: 0.54, eta: 6.2h
[INFO]: 2023-10-30 16:34:23,199 iter: 9250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.4923, cls: 0.1087, iou: 0.1924), misc (ry: 0.55, z: 0.88), dt: 0.54, eta: 6.1h
[INFO]: 2023-10-30 16:36:39,988 iter: 9500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5249, cls: 0.1130, iou: 0.1898), misc (ry: 0.58, z: 0.84), dt: 0.54, eta: 6.1h
[INFO]: 2023-10-30 16:38:57,524 iter: 9750, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5649, cls: 0.1246, iou: 0.1979), misc (ry: 0.61, z: 0.87), dt: 0.54, eta: 6.1h
[INFO]: 2023-10-30 16:41:14,324 iter: 10000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5146, cls: 0.1080, iou: 0.1908), misc (ry: 0.55, z: 0.88), dt: 0.54, eta: 6.0h
[INFO]: 2023-10-30 16:43:29,468 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-10-30 16:45:43,119 testing 2000/3769, dt: 0.134, eta: 4.0m
[INFO]: 2023-10-30 16:47:57,076 testing 3000/3769, dt: 0.134, eta: 1.7m
[INFO]: 2023-10-30 16:49:51,071 test_iter 10000 2d car --> easy: 0.7918, mod: 0.7175, hard: 0.6169
[INFO]: 2023-10-30 16:49:51,072 test_iter 10000 gr car --> easy: 0.0373, mod: 0.0317, hard: 0.0295
[INFO]: 2023-10-30 16:49:51,072 test_iter 10000 3d car --> easy: 0.0168, mod: 0.0153, hard: 0.0104
[INFO]: 2023-10-30 16:49:51,073 test_iter 10000 2d pedestrian --> easy: 0.4928, mod: 0.4357, hard: 0.3724
[INFO]: 2023-10-30 16:49:51,074 test_iter 10000 gr pedestrian --> easy: 0.0963, mod: 0.0979, hard: 0.0909
[INFO]: 2023-10-30 16:49:51,074 test_iter 10000 3d pedestrian --> easy: 0.0909, mod: 0.0909, hard: 0.0909
[INFO]: 2023-10-30 16:49:51,075 test_iter 10000 2d cyclist --> easy: 0.2629, mod: 0.1605, hard: 0.1532
[INFO]: 2023-10-30 16:49:51,075 test_iter 10000 gr cyclist --> easy: 0.0455, mod: 0.0455, hard: 0.0455
[INFO]: 2023-10-30 16:49:51,076 test_iter 10000 3d cyclist --> easy: 0.0455, mod: 0.0455, hard: 0.0455
[INFO]: 2023-10-30 16:52:08,080 iter: 10250, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.5244, cls: 0.1006, iou: 0.1827), misc (ry: 0.52, z: 0.89), dt: 0.59, eta: 6.6h
[INFO]: 2023-10-30 16:54:21,205 iter: 10500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4430, cls: 0.0986, iou: 0.1791), misc (ry: 0.49, z: 0.84), dt: 0.59, eta: 6.5h
[INFO]: 2023-10-30 16:56:36,512 iter: 10750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4358, cls: 0.1000, iou: 0.1796), misc (ry: 0.48, z: 0.78), dt: 0.59, eta: 6.4h
[INFO]: 2023-10-30 16:58:51,495 iter: 11000, acc (bg: 1.00, fg: 0.92, iou: 0.84), loss (bbox_3d: 0.4550, cls: 0.1056, iou: 0.1792), misc (ry: 0.55, z: 0.77), dt: 0.59, eta: 6.4h
[INFO]: 2023-10-30 17:01:05,513 iter: 11250, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4461, cls: 0.1056, iou: 0.1824), misc (ry: 0.51, z: 0.77), dt: 0.59, eta: 6.3h
[INFO]: 2023-10-30 17:03:20,617 iter: 11500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4295, cls: 0.0990, iou: 0.1828), misc (ry: 0.49, z: 0.79), dt: 0.59, eta: 6.3h
[INFO]: 2023-10-30 17:05:35,260 iter: 11750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4781, cls: 0.0945, iou: 0.1841), misc (ry: 0.54, z: 0.83), dt: 0.59, eta: 6.2h
[INFO]: 2023-10-30 17:07:48,431 iter: 12000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4319, cls: 0.0923, iou: 0.1779), misc (ry: 0.50, z: 0.79), dt: 0.59, eta: 6.2h
[INFO]: 2023-10-30 17:10:00,132 iter: 12250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3954, cls: 0.0881, iou: 0.1732), misc (ry: 0.47, z: 0.73), dt: 0.58, eta: 6.1h
[INFO]: 2023-10-30 17:12:14,527 iter: 12500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4232, cls: 0.0933, iou: 0.1725), misc (ry: 0.45, z: 0.80), dt: 0.58, eta: 6.1h
[INFO]: 2023-10-30 17:14:28,565 iter: 12750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4112, cls: 0.0861, iou: 0.1703), misc (ry: 0.40, z: 0.80), dt: 0.58, eta: 6.0h
[INFO]: 2023-10-30 17:16:42,876 iter: 13000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3843, cls: 0.0850, iou: 0.1663), misc (ry: 0.43, z: 0.77), dt: 0.58, eta: 6.0h
[INFO]: 2023-10-30 17:18:59,816 iter: 13250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4126, cls: 0.0949, iou: 0.1781), misc (ry: 0.48, z: 0.72), dt: 0.58, eta: 5.9h
[INFO]: 2023-10-30 17:21:16,304 iter: 13500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3764, cls: 0.0881, iou: 0.1722), misc (ry: 0.44, z: 0.74), dt: 0.58, eta: 5.9h
[INFO]: 2023-10-30 17:23:30,696 iter: 13750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3554, cls: 0.0848, iou: 0.1679), misc (ry: 0.41, z: 0.71), dt: 0.58, eta: 5.8h
[INFO]: 2023-10-30 17:25:44,632 iter: 14000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3564, cls: 0.0853, iou: 0.1664), misc (ry: 0.41, z: 0.74), dt: 0.58, eta: 5.8h
[INFO]: 2023-10-30 17:27:57,179 iter: 14250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3803, cls: 0.0839, iou: 0.1628), misc (ry: 0.46, z: 0.73), dt: 0.58, eta: 5.7h
[INFO]: 2023-10-30 17:30:12,186 iter: 14500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3653, cls: 0.0827, iou: 0.1621), misc (ry: 0.41, z: 0.70), dt: 0.58, eta: 5.7h
[INFO]: 2023-10-30 17:32:26,658 iter: 14750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3563, cls: 0.0830, iou: 0.1611), misc (ry: 0.42, z: 0.70), dt: 0.58, eta: 5.6h
[INFO]: 2023-10-30 17:34:41,435 iter: 15000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3606, cls: 0.0854, iou: 0.1669), misc (ry: 0.40, z: 0.68), dt: 0.58, eta: 5.6h
[INFO]: 2023-10-30 17:36:53,273 iter: 15250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3593, cls: 0.0815, iou: 0.1570), misc (ry: 0.44, z: 0.64), dt: 0.57, eta: 5.5h
[INFO]: 2023-10-30 17:39:10,810 iter: 15500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3466, cls: 0.0827, iou: 0.1656), misc (ry: 0.42, z: 0.66), dt: 0.57, eta: 5.5h
[INFO]: 2023-10-30 17:41:26,243 iter: 15750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3715, cls: 0.0796, iou: 0.1579), misc (ry: 0.47, z: 0.67), dt: 0.57, eta: 5.5h
[INFO]: 2023-10-30 17:43:37,172 iter: 16000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3406, cls: 0.0772, iou: 0.1605), misc (ry: 0.40, z: 0.74), dt: 0.57, eta: 5.4h
[INFO]: 2023-10-30 17:45:54,131 iter: 16250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3239, cls: 0.0830, iou: 0.1594), misc (ry: 0.40, z: 0.67), dt: 0.57, eta: 5.4h
[INFO]: 2023-10-30 17:48:06,158 iter: 16500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3326, cls: 0.0751, iou: 0.1568), misc (ry: 0.37, z: 0.76), dt: 0.57, eta: 5.3h
[INFO]: 2023-10-30 17:50:23,790 iter: 16750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3655, cls: 0.0894, iou: 0.1680), misc (ry: 0.48, z: 0.70), dt: 0.57, eta: 5.3h
[INFO]: 2023-10-30 17:52:38,992 iter: 17000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3012, cls: 0.0780, iou: 0.1554), misc (ry: 0.36, z: 0.73), dt: 0.57, eta: 5.2h
[INFO]: 2023-10-30 17:54:55,518 iter: 17250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3168, cls: 0.0830, iou: 0.1597), misc (ry: 0.39, z: 0.66), dt: 0.57, eta: 5.2h
[INFO]: 2023-10-30 17:57:08,543 iter: 17500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3149, cls: 0.0726, iou: 0.1570), misc (ry: 0.36, z: 0.70), dt: 0.57, eta: 5.1h
[INFO]: 2023-10-30 17:59:23,128 iter: 17750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.2918, cls: 0.0788, iou: 0.1509), misc (ry: 0.34, z: 0.65), dt: 0.57, eta: 5.1h
[INFO]: 2023-10-30 18:01:36,420 iter: 18000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2916, cls: 0.0668, iou: 0.1476), misc (ry: 0.38, z: 0.69), dt: 0.57, eta: 5.1h
[INFO]: 2023-10-30 18:03:49,818 iter: 18250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3031, cls: 0.0716, iou: 0.1508), misc (ry: 0.42, z: 0.70), dt: 0.57, eta: 5.0h
[INFO]: 2023-10-30 18:06:03,258 iter: 18500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2784, cls: 0.0735, iou: 0.1507), misc (ry: 0.37, z: 0.64), dt: 0.57, eta: 5.0h
[INFO]: 2023-10-30 18:08:14,373 iter: 18750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2588, cls: 0.0662, iou: 0.1432), misc (ry: 0.33, z: 0.62), dt: 0.57, eta: 4.9h
[INFO]: 2023-10-30 18:10:25,926 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2634, cls: 0.0690, iou: 0.1428), misc (ry: 0.32, z: 0.62), dt: 0.57, eta: 4.9h
[INFO]: 2023-10-30 18:12:41,311 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2641, cls: 0.0685, iou: 0.1503), misc (ry: 0.35, z: 0.61), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-30 18:14:54,887 iter: 19500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2664, cls: 0.0700, iou: 0.1465), misc (ry: 0.34, z: 0.61), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-30 18:17:05,171 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2387, cls: 0.0661, iou: 0.1384), misc (ry: 0.33, z: 0.55), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-30 18:19:18,753 iter: 20000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2447, cls: 0.0702, iou: 0.1433), misc (ry: 0.31, z: 0.57), dt: 0.57, eta: 4.7h
[INFO]: 2023-10-30 18:21:33,970 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-10-30 18:23:47,804 testing 2000/3769, dt: 0.134, eta: 4.0m
[INFO]: 2023-10-30 18:26:05,151 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-10-30 18:27:57,571 test_iter 20000 2d car --> easy: 0.8560, mod: 0.7913, hard: 0.6481
[INFO]: 2023-10-30 18:27:57,573 test_iter 20000 gr car --> easy: 0.0574, mod: 0.0549, hard: 0.0653
[INFO]: 2023-10-30 18:27:57,573 test_iter 20000 3d car --> easy: 0.0384, mod: 0.0330, hard: 0.0266
[INFO]: 2023-10-30 18:27:57,574 test_iter 20000 2d pedestrian --> easy: 0.6226, mod: 0.5488, hard: 0.4691
[INFO]: 2023-10-30 18:27:57,575 test_iter 20000 gr pedestrian --> easy: 0.0180, mod: 0.0121, hard: 0.0120
[INFO]: 2023-10-30 18:27:57,575 test_iter 20000 3d pedestrian --> easy: 0.0089, mod: 0.0105, hard: 0.0107
[INFO]: 2023-10-30 18:27:57,576 test_iter 20000 2d cyclist --> easy: 0.3265, mod: 0.2444, hard: 0.2742
[INFO]: 2023-10-30 18:27:57,576 test_iter 20000 gr cyclist --> easy: 0.0035, mod: 0.0035, hard: 0.0035
[INFO]: 2023-10-30 18:27:57,577 test_iter 20000 3d cyclist --> easy: 0.0035, mod: 0.0035, hard: 0.0035
[INFO]: 2023-10-30 18:30:11,950 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2742, cls: 0.0682, iou: 0.1467), misc (ry: 0.36, z: 0.62), dt: 0.59, eta: 4.9h
[INFO]: 2023-10-30 18:32:24,100 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2346, cls: 0.0639, iou: 0.1413), misc (ry: 0.31, z: 0.59), dt: 0.59, eta: 4.8h
[INFO]: 2023-10-30 18:34:40,394 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2465, cls: 0.0648, iou: 0.1417), misc (ry: 0.31, z: 0.57), dt: 0.59, eta: 4.8h
[INFO]: 2023-10-30 18:36:57,100 iter: 21000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2712, cls: 0.0672, iou: 0.1404), misc (ry: 0.39, z: 0.64), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-30 18:39:11,345 iter: 21250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2855, cls: 0.0658, iou: 0.1420), misc (ry: 0.40, z: 0.58), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-30 18:41:24,009 iter: 21500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2645, cls: 0.0660, iou: 0.1419), misc (ry: 0.34, z: 0.58), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-30 18:43:35,925 iter: 21750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2449, cls: 0.0637, iou: 0.1416), misc (ry: 0.33, z: 0.63), dt: 0.59, eta: 4.6h
[INFO]: 2023-10-30 18:45:49,767 iter: 22000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2499, cls: 0.0688, iou: 0.1418), misc (ry: 0.32, z: 0.59), dt: 0.59, eta: 4.6h
[INFO]: 2023-10-30 18:48:03,912 iter: 22250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2191, cls: 0.0616, iou: 0.1359), misc (ry: 0.25, z: 0.58), dt: 0.59, eta: 4.5h
[INFO]: 2023-10-30 18:50:15,791 iter: 22500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2276, cls: 0.0652, iou: 0.1365), misc (ry: 0.31, z: 0.57), dt: 0.59, eta: 4.5h
[INFO]: 2023-10-30 18:52:29,021 iter: 22750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2131, cls: 0.0627, iou: 0.1354), misc (ry: 0.31, z: 0.56), dt: 0.58, eta: 4.4h
[INFO]: 2023-10-30 18:54:43,728 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1948, cls: 0.0560, iou: 0.1251), misc (ry: 0.29, z: 0.52), dt: 0.58, eta: 4.4h
[INFO]: 2023-10-30 18:56:56,223 iter: 23250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2412, cls: 0.0641, iou: 0.1363), misc (ry: 0.35, z: 0.61), dt: 0.58, eta: 4.3h
[INFO]: 2023-10-30 18:59:08,033 iter: 23500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2161, cls: 0.0622, iou: 0.1339), misc (ry: 0.27, z: 0.58), dt: 0.58, eta: 4.3h
[INFO]: 2023-10-30 19:01:21,800 iter: 23750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2076, cls: 0.0618, iou: 0.1344), misc (ry: 0.28, z: 0.57), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-30 19:03:38,664 iter: 24000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2041, cls: 0.0604, iou: 0.1307), misc (ry: 0.26, z: 0.60), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-30 19:05:55,964 iter: 24250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1942, cls: 0.0568, iou: 0.1267), misc (ry: 0.24, z: 0.60), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-30 19:08:07,656 iter: 24500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1884, cls: 0.0568, iou: 0.1254), misc (ry: 0.26, z: 0.55), dt: 0.58, eta: 4.1h
[INFO]: 2023-10-30 19:10:20,830 iter: 24750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1940, cls: 0.0598, iou: 0.1340), misc (ry: 0.27, z: 0.54), dt: 0.58, eta: 4.1h
[INFO]: 2023-10-30 19:12:37,446 iter: 25000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2193, cls: 0.0601, iou: 0.1373), misc (ry: 0.34, z: 0.55), dt: 0.58, eta: 4.0h
[INFO]: 2023-10-30 19:14:51,568 iter: 25250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1998, cls: 0.0587, iou: 0.1320), misc (ry: 0.29, z: 0.55), dt: 0.58, eta: 4.0h
[INFO]: 2023-10-30 19:17:04,245 iter: 25500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2109, cls: 0.0569, iou: 0.1265), misc (ry: 0.29, z: 0.52), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-30 19:19:17,076 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1860, cls: 0.0549, iou: 0.1251), misc (ry: 0.26, z: 0.55), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-30 19:21:31,106 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1739, cls: 0.0530, iou: 0.1233), misc (ry: 0.25, z: 0.51), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-30 19:23:45,969 iter: 26250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1931, cls: 0.0574, iou: 0.1282), misc (ry: 0.28, z: 0.58), dt: 0.58, eta: 3.8h
[INFO]: 2023-10-30 19:25:59,360 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1775, cls: 0.0532, iou: 0.1214), misc (ry: 0.27, z: 0.52), dt: 0.58, eta: 3.8h
[INFO]: 2023-10-30 19:28:14,575 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1679, cls: 0.0542, iou: 0.1196), misc (ry: 0.24, z: 0.50), dt: 0.58, eta: 3.7h
[INFO]: 2023-10-30 19:30:27,979 iter: 27000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2518, cls: 0.0571, iou: 0.1320), misc (ry: 0.38, z: 0.55), dt: 0.58, eta: 3.7h
[INFO]: 2023-10-30 19:32:44,602 iter: 27250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2169, cls: 0.0580, iou: 0.1327), misc (ry: 0.34, z: 0.54), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-30 19:34:55,537 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1911, cls: 0.0519, iou: 0.1207), misc (ry: 0.28, z: 0.52), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-30 19:37:09,341 iter: 27750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2520, cls: 0.0631, iou: 0.1333), misc (ry: 0.39, z: 0.55), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-30 19:39:21,727 iter: 28000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1907, cls: 0.0568, iou: 0.1267), misc (ry: 0.28, z: 0.50), dt: 0.58, eta: 3.5h
[INFO]: 2023-10-30 19:41:34,808 iter: 28250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1980, cls: 0.0562, iou: 0.1250), misc (ry: 0.31, z: 0.47), dt: 0.58, eta: 3.5h
[INFO]: 2023-10-30 19:43:50,336 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1674, cls: 0.0532, iou: 0.1205), misc (ry: 0.24, z: 0.49), dt: 0.57, eta: 3.4h
[INFO]: 2023-10-30 19:46:04,963 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1750, cls: 0.0524, iou: 0.1220), misc (ry: 0.27, z: 0.47), dt: 0.57, eta: 3.4h
[INFO]: 2023-10-30 19:48:17,435 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1434, cls: 0.0499, iou: 0.1152), misc (ry: 0.24, z: 0.46), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-30 19:50:31,962 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1620, cls: 0.0523, iou: 0.1198), misc (ry: 0.24, z: 0.52), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-30 19:52:48,114 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1681, cls: 0.0553, iou: 0.1203), misc (ry: 0.26, z: 0.48), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-30 19:55:03,036 iter: 29750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1885, cls: 0.0546, iou: 0.1213), misc (ry: 0.30, z: 0.46), dt: 0.57, eta: 3.2h
[INFO]: 2023-10-30 19:57:13,988 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1527, cls: 0.0500, iou: 0.1170), misc (ry: 0.23, z: 0.50), dt: 0.57, eta: 3.2h
[INFO]: 2023-10-30 19:59:27,818 testing 1000/3769, dt: 0.134, eta: 6.2m
[INFO]: 2023-10-30 20:01:43,750 testing 2000/3769, dt: 0.135, eta: 4.0m
[INFO]: 2023-10-30 20:04:00,020 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-10-30 20:05:53,475 test_iter 30000 2d car --> easy: 0.9007, mod: 0.8186, hard: 0.6674
[INFO]: 2023-10-30 20:05:53,476 test_iter 30000 gr car --> easy: 0.1331, mod: 0.1501, hard: 0.1378
[INFO]: 2023-10-30 20:05:53,477 test_iter 30000 3d car --> easy: 0.0806, mod: 0.1183, hard: 0.1147
[INFO]: 2023-10-30 20:05:53,477 test_iter 30000 2d pedestrian --> easy: 0.6123, mod: 0.5418, hard: 0.4666
[INFO]: 2023-10-30 20:05:53,478 test_iter 30000 gr pedestrian --> easy: 0.0447, mod: 0.0429, hard: 0.0392
[INFO]: 2023-10-30 20:05:53,478 test_iter 30000 3d pedestrian --> easy: 0.0428, mod: 0.0378, hard: 0.0303
[INFO]: 2023-10-30 20:05:53,479 test_iter 30000 2d cyclist --> easy: 0.3427, mod: 0.2307, hard: 0.2352
[INFO]: 2023-10-30 20:05:53,480 test_iter 30000 gr cyclist --> easy: 0.0060, mod: 0.0068, hard: 0.0064
[INFO]: 2023-10-30 20:05:53,480 test_iter 30000 3d cyclist --> easy: 0.0048, mod: 0.0048, hard: 0.0048
[INFO]: 2023-10-30 20:08:07,008 iter: 30250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1577, cls: 0.0528, iou: 0.1177), misc (ry: 0.23, z: 0.51), dt: 0.59, eta: 3.2h
[INFO]: 2023-10-30 20:10:24,801 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1567, cls: 0.0538, iou: 0.1188), misc (ry: 0.23, z: 0.45), dt: 0.59, eta: 3.2h
[INFO]: 2023-10-30 20:12:38,515 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1629, cls: 0.0522, iou: 0.1174), misc (ry: 0.24, z: 0.47), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-30 20:14:51,799 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1517, cls: 0.0527, iou: 0.1179), misc (ry: 0.24, z: 0.48), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-30 20:17:03,300 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1263, cls: 0.0484, iou: 0.1100), misc (ry: 0.21, z: 0.43), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-30 20:19:14,455 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1477, cls: 0.0498, iou: 0.1145), misc (ry: 0.26, z: 0.48), dt: 0.59, eta: 3.0h
[INFO]: 2023-10-30 20:21:27,705 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1616, cls: 0.0489, iou: 0.1153), misc (ry: 0.28, z: 0.47), dt: 0.59, eta: 3.0h
[INFO]: 2023-10-30 20:23:36,735 iter: 32000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1391, cls: 0.0472, iou: 0.1082), misc (ry: 0.23, z: 0.44), dt: 0.59, eta: 2.9h
[INFO]: 2023-10-30 20:25:51,678 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1456, cls: 0.0519, iou: 0.1153), misc (ry: 0.23, z: 0.46), dt: 0.59, eta: 2.9h
[INFO]: 2023-10-30 20:28:05,222 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1376, cls: 0.0512, iou: 0.1140), misc (ry: 0.23, z: 0.42), dt: 0.59, eta: 2.8h
[INFO]: 2023-10-30 20:30:20,472 iter: 32750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1419, cls: 0.0508, iou: 0.1126), misc (ry: 0.24, z: 0.45), dt: 0.59, eta: 2.8h
[INFO]: 2023-10-30 20:32:33,919 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1324, cls: 0.0476, iou: 0.1088), misc (ry: 0.24, z: 0.42), dt: 0.59, eta: 2.8h
[INFO]: 2023-10-30 20:34:45,916 iter: 33250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1469, cls: 0.0482, iou: 0.1128), misc (ry: 0.24, z: 0.50), dt: 0.58, eta: 2.7h
[INFO]: 2023-10-30 20:37:01,015 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1274, cls: 0.0520, iou: 0.1104), misc (ry: 0.21, z: 0.44), dt: 0.58, eta: 2.7h
[INFO]: 2023-10-30 20:39:12,127 iter: 33750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1301, cls: 0.0447, iou: 0.1087), misc (ry: 0.21, z: 0.47), dt: 0.58, eta: 2.6h
[INFO]: 2023-10-30 20:41:23,310 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1125, cls: 0.0456, iou: 0.1019), misc (ry: 0.19, z: 0.39), dt: 0.58, eta: 2.6h
[INFO]: 2023-10-30 20:43:34,172 iter: 34250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1267, cls: 0.0466, iou: 0.1070), misc (ry: 0.20, z: 0.45), dt: 0.58, eta: 2.6h
[INFO]: 2023-10-30 20:45:48,293 iter: 34500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1129, cls: 0.0456, iou: 0.1039), misc (ry: 0.20, z: 0.40), dt: 0.58, eta: 2.5h
[INFO]: 2023-10-30 20:48:03,271 iter: 34750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1145, cls: 0.0460, iou: 0.1040), misc (ry: 0.19, z: 0.41), dt: 0.58, eta: 2.5h
[INFO]: 2023-10-30 20:50:16,445 iter: 35000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1034, cls: 0.0425, iou: 0.0968), misc (ry: 0.19, z: 0.37), dt: 0.58, eta: 2.4h
[INFO]: 2023-10-30 20:52:31,414 iter: 35250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1149, cls: 0.0467, iou: 0.1031), misc (ry: 0.19, z: 0.41), dt: 0.58, eta: 2.4h
[INFO]: 2023-10-30 20:54:45,835 iter: 35500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0989, cls: 0.0431, iou: 0.0966), misc (ry: 0.18, z: 0.37), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-30 20:56:58,121 iter: 35750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1108, cls: 0.0462, iou: 0.1020), misc (ry: 0.19, z: 0.39), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-30 20:59:10,769 iter: 36000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0993, cls: 0.0448, iou: 0.0979), misc (ry: 0.19, z: 0.39), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-30 21:01:21,632 iter: 36250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1045, cls: 0.0436, iou: 0.0994), misc (ry: 0.19, z: 0.39), dt: 0.58, eta: 2.2h
[INFO]: 2023-10-30 21:03:34,734 iter: 36500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1017, cls: 0.0443, iou: 0.0983), misc (ry: 0.18, z: 0.37), dt: 0.58, eta: 2.2h
[INFO]: 2023-10-30 21:05:51,399 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0937, cls: 0.0413, iou: 0.0945), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-30 21:08:06,424 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0945, cls: 0.0407, iou: 0.0944), misc (ry: 0.17, z: 0.39), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-30 21:10:20,402 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0957, cls: 0.0406, iou: 0.0968), misc (ry: 0.17, z: 0.37), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-30 21:12:32,700 iter: 37500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0972, cls: 0.0424, iou: 0.0957), misc (ry: 0.18, z: 0.36), dt: 0.58, eta: 2.0h
[INFO]: 2023-10-30 21:14:45,837 iter: 37750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0974, cls: 0.0418, iou: 0.0961), misc (ry: 0.18, z: 0.37), dt: 0.58, eta: 2.0h
[INFO]: 2023-10-30 21:16:58,076 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0975, cls: 0.0416, iou: 0.0950), misc (ry: 0.19, z: 0.39), dt: 0.58, eta: 1.9h
[INFO]: 2023-10-30 21:19:10,895 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0872, cls: 0.0411, iou: 0.0922), misc (ry: 0.18, z: 0.35), dt: 0.58, eta: 1.9h
[INFO]: 2023-10-30 21:21:25,473 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0910, cls: 0.0393, iou: 0.0920), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-30 21:23:41,158 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1007, cls: 0.0412, iou: 0.0977), misc (ry: 0.20, z: 0.37), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-30 21:25:55,432 iter: 39000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0901, cls: 0.0410, iou: 0.0933), misc (ry: 0.17, z: 0.37), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-30 21:28:07,559 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0863, cls: 0.0406, iou: 0.0903), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 1.7h
[INFO]: 2023-10-30 21:30:22,203 iter: 39500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0902, cls: 0.0413, iou: 0.0897), misc (ry: 0.16, z: 0.36), dt: 0.58, eta: 1.7h
[INFO]: 2023-10-30 21:32:34,382 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0853, cls: 0.0416, iou: 0.0895), misc (ry: 0.17, z: 0.33), dt: 0.58, eta: 1.6h
[INFO]: 2023-10-30 21:34:48,351 iter: 40000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0871, cls: 0.0404, iou: 0.0885), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 1.6h
[INFO]: 2023-10-30 21:37:01,192 testing 1000/3769, dt: 0.132, eta: 6.1m
[INFO]: 2023-10-30 21:39:13,915 testing 2000/3769, dt: 0.133, eta: 3.9m
[INFO]: 2023-10-30 21:41:29,335 testing 3000/3769, dt: 0.134, eta: 1.7m
[INFO]: 2023-10-30 21:43:23,255 test_iter 40000 2d car --> easy: 0.8821, mod: 0.8141, hard: 0.6639
[INFO]: 2023-10-30 21:43:23,256 test_iter 40000 gr car --> easy: 0.1796, mod: 0.1708, hard: 0.1494
[INFO]: 2023-10-30 21:43:23,256 test_iter 40000 3d car --> easy: 0.1211, mod: 0.0988, hard: 0.0785
[INFO]: 2023-10-30 21:43:23,257 test_iter 40000 2d pedestrian --> easy: 0.6517, mod: 0.5755, hard: 0.4951
[INFO]: 2023-10-30 21:43:23,258 test_iter 40000 gr pedestrian --> easy: 0.0462, mod: 0.0412, hard: 0.0415
[INFO]: 2023-10-30 21:43:23,258 test_iter 40000 3d pedestrian --> easy: 0.0436, mod: 0.0396, hard: 0.0303
[INFO]: 2023-10-30 21:43:23,259 test_iter 40000 2d cyclist --> easy: 0.5050, mod: 0.3571, hard: 0.3491
[INFO]: 2023-10-30 21:43:23,260 test_iter 40000 gr cyclist --> easy: 0.0196, mod: 0.0121, hard: 0.0121
[INFO]: 2023-10-30 21:43:23,260 test_iter 40000 3d cyclist --> easy: 0.0165, mod: 0.0114, hard: 0.0114
[INFO]: 2023-10-30 21:45:35,520 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0858, cls: 0.0416, iou: 0.0897), misc (ry: 0.18, z: 0.34), dt: 0.59, eta: 1.6h
[INFO]: 2023-10-30 21:47:50,807 iter: 40500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0839, cls: 0.0417, iou: 0.0904), misc (ry: 0.16, z: 0.34), dt: 0.59, eta: 1.6h
[INFO]: 2023-10-30 21:50:03,917 iter: 40750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0788, cls: 0.0405, iou: 0.0869), misc (ry: 0.16, z: 0.33), dt: 0.59, eta: 1.5h
[INFO]: 2023-10-30 21:52:16,313 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0789, cls: 0.0369, iou: 0.0862), misc (ry: 0.15, z: 0.33), dt: 0.59, eta: 1.5h
[INFO]: 2023-10-30 21:54:31,814 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0903, cls: 0.0413, iou: 0.0903), misc (ry: 0.17, z: 0.35), dt: 0.59, eta: 1.4h
[INFO]: 2023-10-30 21:56:45,269 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0760, cls: 0.0374, iou: 0.0851), misc (ry: 0.16, z: 0.33), dt: 0.59, eta: 1.4h
[INFO]: 2023-10-30 21:59:00,442 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0788, cls: 0.0390, iou: 0.0860), misc (ry: 0.16, z: 0.31), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-30 22:01:12,684 iter: 42000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0793, cls: 0.0404, iou: 0.0863), misc (ry: 0.16, z: 0.32), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-30 22:03:26,203 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0759, cls: 0.0382, iou: 0.0839), misc (ry: 0.15, z: 0.32), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-30 22:05:38,773 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0710, cls: 0.0377, iou: 0.0818), misc (ry: 0.16, z: 0.30), dt: 0.59, eta: 1.2h
[INFO]: 2023-10-30 22:07:50,898 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0755, cls: 0.0404, iou: 0.0843), misc (ry: 0.15, z: 0.32), dt: 0.59, eta: 1.2h
[INFO]: 2023-10-30 22:10:05,300 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0373, iou: 0.0813), misc (ry: 0.15, z: 0.32), dt: 0.59, eta: 1.1h
[INFO]: 2023-10-30 22:12:18,295 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0740, cls: 0.0384, iou: 0.0840), misc (ry: 0.16, z: 0.32), dt: 0.58, eta: 1.1h
[INFO]: 2023-10-30 22:14:30,387 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0397, iou: 0.0837), misc (ry: 0.15, z: 0.32), dt: 0.58, eta: 1.1h
[INFO]: 2023-10-30 22:16:43,319 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0715, cls: 0.0371, iou: 0.0811), misc (ry: 0.16, z: 0.32), dt: 0.58, eta: 1.0h
[INFO]: 2023-10-30 22:18:58,072 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0714, cls: 0.0380, iou: 0.0821), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 58.4m
[INFO]: 2023-10-30 22:21:12,869 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0699, cls: 0.0371, iou: 0.0811), misc (ry: 0.14, z: 0.32), dt: 0.58, eta: 55.9m
[INFO]: 2023-10-30 22:23:24,501 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0669, cls: 0.0367, iou: 0.0800), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 53.5m
[INFO]: 2023-10-30 22:25:36,963 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0629, cls: 0.0359, iou: 0.0773), misc (ry: 0.14, z: 0.29), dt: 0.58, eta: 51.0m
[INFO]: 2023-10-30 22:27:48,443 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0650, cls: 0.0369, iou: 0.0797), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 48.6m
[INFO]: 2023-10-30 22:30:01,501 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0623, cls: 0.0359, iou: 0.0742), misc (ry: 0.13, z: 0.29), dt: 0.58, eta: 46.1m
[INFO]: 2023-10-30 22:32:15,182 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0647, cls: 0.0373, iou: 0.0764), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 43.7m
[INFO]: 2023-10-30 22:34:27,699 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0630, cls: 0.0370, iou: 0.0784), misc (ry: 0.15, z: 0.29), dt: 0.58, eta: 41.2m
[INFO]: 2023-10-30 22:36:41,603 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0374, iou: 0.0755), misc (ry: 0.13, z: 0.28), dt: 0.58, eta: 38.8m
[INFO]: 2023-10-30 22:38:54,083 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0598, cls: 0.0340, iou: 0.0760), misc (ry: 0.13, z: 0.30), dt: 0.58, eta: 36.3m
[INFO]: 2023-10-30 22:41:09,190 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0581, cls: 0.0341, iou: 0.0720), misc (ry: 0.14, z: 0.29), dt: 0.58, eta: 33.9m
[INFO]: 2023-10-30 22:43:20,636 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0631, cls: 0.0359, iou: 0.0774), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 31.5m
[INFO]: 2023-10-30 22:45:36,055 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0598, cls: 0.0371, iou: 0.0746), misc (ry: 0.13, z: 0.29), dt: 0.58, eta: 29.0m
[INFO]: 2023-10-30 22:47:49,188 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0647, cls: 0.0374, iou: 0.0764), misc (ry: 0.15, z: 0.30), dt: 0.58, eta: 26.6m
[INFO]: 2023-10-30 22:50:04,003 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0610, cls: 0.0367, iou: 0.0760), misc (ry: 0.13, z: 0.28), dt: 0.58, eta: 24.2m
[INFO]: 2023-10-30 22:52:18,062 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0578, cls: 0.0362, iou: 0.0731), misc (ry: 0.14, z: 0.28), dt: 0.58, eta: 21.8m
[INFO]: 2023-10-30 22:54:28,467 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0644, cls: 0.0343, iou: 0.0726), misc (ry: 0.14, z: 0.28), dt: 0.58, eta: 19.3m
[INFO]: 2023-10-30 22:56:44,045 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0581, cls: 0.0359, iou: 0.0729), misc (ry: 0.14, z: 0.28), dt: 0.58, eta: 16.9m
[INFO]: 2023-10-30 22:58:57,114 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0627, cls: 0.0376, iou: 0.0738), misc (ry: 0.14, z: 0.27), dt: 0.58, eta: 14.5m
[INFO]: 2023-10-30 23:01:12,234 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0572, cls: 0.0361, iou: 0.0710), misc (ry: 0.13, z: 0.29), dt: 0.58, eta: 12.1m
[INFO]: 2023-10-30 23:03:25,177 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0558, cls: 0.0352, iou: 0.0725), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 9.7m
[INFO]: 2023-10-30 23:05:36,707 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0554, cls: 0.0352, iou: 0.0705), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 7.2m
[INFO]: 2023-10-30 23:07:52,295 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0550, cls: 0.0353, iou: 0.0714), misc (ry: 0.14, z: 0.28), dt: 0.58, eta: 4.8m
[INFO]: 2023-10-30 23:10:05,342 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0544, cls: 0.0362, iou: 0.0707), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 2.4m
[INFO]: 2023-10-30 23:12:19,178 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0590, cls: 0.0365, iou: 0.0732), misc (ry: 0.14, z: 0.28), dt: 0.58, eta: 0.6s
[INFO]: 2023-10-30 23:14:32,623 testing 1000/3769, dt: 0.133, eta: 6.1m
[INFO]: 2023-10-30 23:16:47,481 testing 2000/3769, dt: 0.134, eta: 3.9m
[INFO]: 2023-10-30 23:19:00,922 testing 3000/3769, dt: 0.134, eta: 1.7m
[INFO]: 2023-10-30 23:20:51,267 test_iter 50000 2d car --> easy: 0.8545, mod: 0.8036, hard: 0.6546
[INFO]: 2023-10-30 23:20:51,269 test_iter 50000 gr car --> easy: 0.2080, mod: 0.1547, hard: 0.1645
[INFO]: 2023-10-30 23:20:51,270 test_iter 50000 3d car --> easy: 0.1396, mod: 0.1114, hard: 0.0893
[INFO]: 2023-10-30 23:20:51,270 test_iter 50000 2d pedestrian --> easy: 0.6347, mod: 0.5612, hard: 0.4837
[INFO]: 2023-10-30 23:20:51,271 test_iter 50000 gr pedestrian --> easy: 0.0329, mod: 0.0295, hard: 0.0283
[INFO]: 2023-10-30 23:20:51,272 test_iter 50000 3d pedestrian --> easy: 0.0295, mod: 0.0269, hard: 0.0182
[INFO]: 2023-10-30 23:20:51,272 test_iter 50000 2d cyclist --> easy: 0.5354, mod: 0.3771, hard: 0.3187
[INFO]: 2023-10-30 23:20:51,273 test_iter 50000 gr cyclist --> easy: 0.0215, mod: 0.0182, hard: 0.0909
[INFO]: 2023-10-30 23:20:51,273 test_iter 50000 3d cyclist --> easy: 0.0182, mod: 0.0182, hard: 0.0909
