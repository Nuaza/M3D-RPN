[INFO]: 2023-10-27 15:29:31,947 Preloading imdb.
[INFO]: 2023-10-27 15:29:33,224 weighted respectively as 1.05 and 0.00
[INFO]: 2023-10-27 15:29:33,224 Found 3534 foreground and 178 empty images
[INFO]: 2023-10-27 15:29:35,675 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-10-27 15:29:35,678 conf: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2023-10-27 15:29:35,923 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): PConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-10-27 15:31:54,484 iter: 250, acc (bg: 0.97, fg: 0.43, iou: 0.61), loss (bbox_3d: 2.3228, cls: 0.6379, iou: 0.5128), misc (ry: 1.57, z: 2.83), dt: 0.56, eta: 7.7h
[INFO]: 2023-10-27 15:34:11,935 iter: 500, acc (bg: 0.99, fg: 0.73, iou: 0.66), loss (bbox_3d: 1.6424, cls: 0.3286, iou: 0.4195), misc (ry: 1.31, z: 2.07), dt: 0.55, eta: 7.6h
[INFO]: 2023-10-27 15:36:28,405 iter: 750, acc (bg: 0.99, fg: 0.82, iou: 0.70), loss (bbox_3d: 1.2235, cls: 0.2428, iou: 0.3636), misc (ry: 1.13, z: 1.73), dt: 0.55, eta: 7.5h
[INFO]: 2023-10-27 15:38:43,606 iter: 1000, acc (bg: 0.99, fg: 0.84, iou: 0.72), loss (bbox_3d: 1.1251, cls: 0.2255, iou: 0.3406), misc (ry: 1.01, z: 1.49), dt: 0.55, eta: 7.5h
[INFO]: 2023-10-27 15:40:58,166 iter: 1250, acc (bg: 0.99, fg: 0.86, iou: 0.74), loss (bbox_3d: 1.0567, cls: 0.1987, iou: 0.3143), misc (ry: 0.92, z: 1.51), dt: 0.55, eta: 7.4h
[INFO]: 2023-10-27 15:43:14,737 iter: 1500, acc (bg: 0.99, fg: 0.86, iou: 0.74), loss (bbox_3d: 1.0403, cls: 0.2034, iou: 0.3074), misc (ry: 0.90, z: 1.45), dt: 0.55, eta: 7.4h
[INFO]: 2023-10-27 15:45:30,277 iter: 1750, acc (bg: 1.00, fg: 0.88, iou: 0.76), loss (bbox_3d: 0.9018, cls: 0.1716, iou: 0.2792), misc (ry: 0.91, z: 1.29), dt: 0.55, eta: 7.3h
[INFO]: 2023-10-27 15:47:46,765 iter: 2000, acc (bg: 0.99, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.8854, cls: 0.1671, iou: 0.2752), misc (ry: 0.83, z: 1.16), dt: 0.55, eta: 7.3h
[INFO]: 2023-10-27 15:50:02,041 iter: 2250, acc (bg: 0.99, fg: 0.89, iou: 0.78), loss (bbox_3d: 0.8737, cls: 0.1623, iou: 0.2627), misc (ry: 0.85, z: 1.18), dt: 0.55, eta: 7.2h
[INFO]: 2023-10-27 15:52:20,134 iter: 2500, acc (bg: 1.00, fg: 0.89, iou: 0.78), loss (bbox_3d: 0.8374, cls: 0.1539, iou: 0.2500), misc (ry: 0.81, z: 1.16), dt: 0.55, eta: 7.2h
[INFO]: 2023-10-27 15:54:36,884 iter: 2750, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.8229, cls: 0.1604, iou: 0.2500), misc (ry: 0.79, z: 1.21), dt: 0.55, eta: 7.2h
[INFO]: 2023-10-27 15:56:51,338 iter: 3000, acc (bg: 1.00, fg: 0.91, iou: 0.80), loss (bbox_3d: 0.7670, cls: 0.1410, iou: 0.2320), misc (ry: 0.74, z: 1.10), dt: 0.55, eta: 7.1h
[INFO]: 2023-10-27 15:59:05,106 iter: 3250, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7889, cls: 0.1506, iou: 0.2437), misc (ry: 0.80, z: 1.23), dt: 0.54, eta: 7.1h
[INFO]: 2023-10-27 16:01:19,782 iter: 3500, acc (bg: 1.00, fg: 0.87, iou: 0.79), loss (bbox_3d: 0.7712, cls: 0.1680, iou: 0.2464), misc (ry: 0.75, z: 1.18), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-27 16:03:35,236 iter: 3750, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6671, cls: 0.1271, iou: 0.2192), misc (ry: 0.67, z: 1.05), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-27 16:05:51,387 iter: 4000, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6787, cls: 0.1302, iou: 0.2218), misc (ry: 0.69, z: 1.06), dt: 0.54, eta: 7.0h
[INFO]: 2023-10-27 16:08:06,627 iter: 4250, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6856, cls: 0.1259, iou: 0.2192), misc (ry: 0.71, z: 1.03), dt: 0.54, eta: 6.9h
[INFO]: 2023-10-27 16:10:22,385 iter: 4500, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6805, cls: 0.1320, iou: 0.2237), misc (ry: 0.68, z: 1.02), dt: 0.54, eta: 6.9h
[INFO]: 2023-10-27 16:12:40,015 iter: 4750, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5806, cls: 0.1137, iou: 0.2021), misc (ry: 0.60, z: 0.94), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-27 16:14:57,105 iter: 5000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5641, cls: 0.1231, iou: 0.2025), misc (ry: 0.63, z: 0.94), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-27 16:17:14,190 iter: 5250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5499, cls: 0.1077, iou: 0.1934), misc (ry: 0.58, z: 0.90), dt: 0.54, eta: 6.8h
[INFO]: 2023-10-27 16:19:27,712 iter: 5500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5328, cls: 0.1019, iou: 0.1961), misc (ry: 0.59, z: 0.92), dt: 0.54, eta: 6.7h
[INFO]: 2023-10-27 16:21:41,921 iter: 5750, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5432, cls: 0.1131, iou: 0.2003), misc (ry: 0.61, z: 0.87), dt: 0.54, eta: 6.7h
[INFO]: 2023-10-27 16:23:58,505 iter: 6000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5486, cls: 0.1073, iou: 0.1948), misc (ry: 0.55, z: 0.93), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-27 16:26:11,229 iter: 6250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5511, cls: 0.1059, iou: 0.1957), misc (ry: 0.58, z: 0.89), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-27 16:28:29,050 iter: 6500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5056, cls: 0.1099, iou: 0.1899), misc (ry: 0.55, z: 0.89), dt: 0.54, eta: 6.6h
[INFO]: 2023-10-27 16:30:47,189 iter: 6750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5089, cls: 0.1112, iou: 0.1950), misc (ry: 0.53, z: 0.90), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-27 16:33:04,665 iter: 7000, acc (bg: 1.00, fg: 0.95, iou: 0.83), loss (bbox_3d: 0.5137, cls: 0.0960, iou: 0.1882), misc (ry: 0.58, z: 0.90), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-27 16:35:20,815 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4912, cls: 0.1002, iou: 0.1882), misc (ry: 0.58, z: 0.80), dt: 0.54, eta: 6.5h
[INFO]: 2023-10-27 16:37:36,586 iter: 7500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4660, cls: 0.0986, iou: 0.1806), misc (ry: 0.55, z: 0.77), dt: 0.54, eta: 6.4h
[INFO]: 2023-10-27 16:39:49,728 iter: 7750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4346, cls: 0.0939, iou: 0.1778), misc (ry: 0.49, z: 0.78), dt: 0.54, eta: 6.4h
[INFO]: 2023-10-27 16:42:06,770 iter: 8000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4358, cls: 0.0957, iou: 0.1763), misc (ry: 0.48, z: 0.77), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-27 16:44:21,934 iter: 8250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3926, cls: 0.0904, iou: 0.1717), misc (ry: 0.44, z: 0.75), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-27 16:46:37,713 iter: 8500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4151, cls: 0.0890, iou: 0.1709), misc (ry: 0.52, z: 0.76), dt: 0.54, eta: 6.3h
[INFO]: 2023-10-27 16:48:54,945 iter: 8750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4008, cls: 0.0915, iou: 0.1708), misc (ry: 0.47, z: 0.75), dt: 0.54, eta: 6.2h
[INFO]: 2023-10-27 16:51:11,430 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4029, cls: 0.0865, iou: 0.1756), misc (ry: 0.45, z: 0.76), dt: 0.54, eta: 6.2h
[INFO]: 2023-10-27 16:53:26,024 iter: 9250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3829, cls: 0.0908, iou: 0.1709), misc (ry: 0.43, z: 0.72), dt: 0.54, eta: 6.2h
[INFO]: 2023-10-27 16:55:40,885 iter: 9500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3979, cls: 0.0866, iou: 0.1731), misc (ry: 0.47, z: 0.78), dt: 0.54, eta: 6.1h
[INFO]: 2023-10-27 16:57:56,809 iter: 9750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3696, cls: 0.0803, iou: 0.1670), misc (ry: 0.41, z: 0.79), dt: 0.54, eta: 6.1h
[INFO]: 2023-10-27 17:00:11,576 iter: 10000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3649, cls: 0.0822, iou: 0.1661), misc (ry: 0.44, z: 0.74), dt: 0.54, eta: 6.0h
[INFO]: 2023-10-27 17:02:30,793 testing 1000/3769, dt: 0.139, eta: 6.4m
[INFO]: 2023-10-27 17:04:48,030 testing 2000/3769, dt: 0.138, eta: 4.1m
[INFO]: 2023-10-27 17:07:04,585 testing 3000/3769, dt: 0.138, eta: 1.8m
[INFO]: 2023-10-27 17:08:59,226 test_iter 10000 2d car --> easy: 0.8092, mod: 0.7418, hard: 0.6448
[INFO]: 2023-10-27 17:08:59,227 test_iter 10000 gr car --> easy: 0.0646, mod: 0.0486, hard: 0.0467
[INFO]: 2023-10-27 17:08:59,228 test_iter 10000 3d car --> easy: 0.0436, mod: 0.0341, hard: 0.0264
[INFO]: 2023-10-27 17:08:59,229 test_iter 10000 2d pedestrian --> easy: 0.6400, mod: 0.5647, hard: 0.4865
[INFO]: 2023-10-27 17:08:59,229 test_iter 10000 gr pedestrian --> easy: 0.0271, mod: 0.0257, hard: 0.0232
[INFO]: 2023-10-27 17:08:59,230 test_iter 10000 3d pedestrian --> easy: 0.0164, mod: 0.0184, hard: 0.0130
[INFO]: 2023-10-27 17:08:59,230 test_iter 10000 2d cyclist --> easy: 0.2969, mod: 0.2561, hard: 0.2550
[INFO]: 2023-10-27 17:08:59,231 test_iter 10000 gr cyclist --> easy: 0.0019, mod: 0.0019, hard: 0.0019
[INFO]: 2023-10-27 17:08:59,232 test_iter 10000 3d cyclist --> easy: 0.0016, mod: 0.0016, hard: 0.0016
[INFO]: 2023-10-27 17:11:17,533 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4036, cls: 0.0846, iou: 0.1677), misc (ry: 0.46, z: 0.77), dt: 0.60, eta: 6.6h
[INFO]: 2023-10-27 17:13:30,014 iter: 10500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2963, cls: 0.0751, iou: 0.1578), misc (ry: 0.37, z: 0.67), dt: 0.59, eta: 6.5h
[INFO]: 2023-10-27 17:15:42,567 iter: 10750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3733, cls: 0.0835, iou: 0.1699), misc (ry: 0.46, z: 0.70), dt: 0.59, eta: 6.5h
[INFO]: 2023-10-27 17:18:00,302 iter: 11000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3397, cls: 0.0804, iou: 0.1640), misc (ry: 0.39, z: 0.67), dt: 0.59, eta: 6.4h
[INFO]: 2023-10-27 17:20:12,475 iter: 11250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3148, cls: 0.0786, iou: 0.1550), misc (ry: 0.40, z: 0.65), dt: 0.59, eta: 6.4h
[INFO]: 2023-10-27 17:22:29,991 iter: 11500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3194, cls: 0.0793, iou: 0.1572), misc (ry: 0.38, z: 0.66), dt: 0.59, eta: 6.3h
[INFO]: 2023-10-27 17:24:44,835 iter: 11750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3238, cls: 0.0773, iou: 0.1537), misc (ry: 0.37, z: 0.70), dt: 0.59, eta: 6.2h
[INFO]: 2023-10-27 17:26:56,572 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3251, cls: 0.0778, iou: 0.1564), misc (ry: 0.38, z: 0.73), dt: 0.59, eta: 6.2h
[INFO]: 2023-10-27 17:29:09,192 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3028, cls: 0.0776, iou: 0.1545), misc (ry: 0.36, z: 0.67), dt: 0.59, eta: 6.1h
[INFO]: 2023-10-27 17:31:25,420 iter: 12500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3142, cls: 0.0739, iou: 0.1526), misc (ry: 0.42, z: 0.69), dt: 0.58, eta: 6.1h
[INFO]: 2023-10-27 17:33:42,391 iter: 12750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3091, cls: 0.0748, iou: 0.1548), misc (ry: 0.42, z: 0.68), dt: 0.58, eta: 6.0h
[INFO]: 2023-10-27 17:35:56,461 iter: 13000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3045, cls: 0.0752, iou: 0.1537), misc (ry: 0.39, z: 0.63), dt: 0.58, eta: 6.0h
[INFO]: 2023-10-27 17:38:08,788 iter: 13250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2768, cls: 0.0701, iou: 0.1436), misc (ry: 0.38, z: 0.60), dt: 0.58, eta: 5.9h
[INFO]: 2023-10-27 17:40:21,677 iter: 13500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3282, cls: 0.0770, iou: 0.1565), misc (ry: 0.41, z: 0.67), dt: 0.58, eta: 5.9h
[INFO]: 2023-10-27 17:42:34,075 iter: 13750, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2935, cls: 0.0701, iou: 0.1497), misc (ry: 0.39, z: 0.65), dt: 0.58, eta: 5.8h
[INFO]: 2023-10-27 17:44:46,753 iter: 14000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2581, cls: 0.0707, iou: 0.1443), misc (ry: 0.33, z: 0.58), dt: 0.58, eta: 5.8h
[INFO]: 2023-10-27 17:47:00,792 iter: 14250, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2889, cls: 0.0712, iou: 0.1500), misc (ry: 0.37, z: 0.62), dt: 0.58, eta: 5.7h
[INFO]: 2023-10-27 17:49:11,736 iter: 14500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2707, cls: 0.0669, iou: 0.1456), misc (ry: 0.34, z: 0.60), dt: 0.58, eta: 5.7h
[INFO]: 2023-10-27 17:51:23,368 iter: 14750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2724, cls: 0.0748, iou: 0.1480), misc (ry: 0.34, z: 0.59), dt: 0.58, eta: 5.6h
[INFO]: 2023-10-27 17:53:39,135 iter: 15000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2336, cls: 0.0668, iou: 0.1438), misc (ry: 0.31, z: 0.63), dt: 0.58, eta: 5.6h
[INFO]: 2023-10-27 17:55:54,583 iter: 15250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2495, cls: 0.0669, iou: 0.1408), misc (ry: 0.34, z: 0.60), dt: 0.58, eta: 5.6h
[INFO]: 2023-10-27 17:58:05,269 iter: 15500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2489, cls: 0.0635, iou: 0.1423), misc (ry: 0.35, z: 0.56), dt: 0.57, eta: 5.5h
[INFO]: 2023-10-27 18:00:18,873 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2416, cls: 0.0615, iou: 0.1364), misc (ry: 0.35, z: 0.57), dt: 0.57, eta: 5.5h
[INFO]: 2023-10-27 18:02:33,533 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2505, cls: 0.0636, iou: 0.1399), misc (ry: 0.38, z: 0.56), dt: 0.57, eta: 5.4h
[INFO]: 2023-10-27 18:04:45,065 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2676, cls: 0.0690, iou: 0.1445), misc (ry: 0.37, z: 0.62), dt: 0.57, eta: 5.4h
[INFO]: 2023-10-27 18:07:01,204 iter: 16500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2568, cls: 0.0660, iou: 0.1405), misc (ry: 0.33, z: 0.60), dt: 0.57, eta: 5.3h
[INFO]: 2023-10-27 18:09:17,234 iter: 16750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2218, cls: 0.0649, iou: 0.1368), misc (ry: 0.29, z: 0.56), dt: 0.57, eta: 5.3h
[INFO]: 2023-10-27 18:11:32,484 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2215, cls: 0.0633, iou: 0.1351), misc (ry: 0.32, z: 0.56), dt: 0.57, eta: 5.2h
[INFO]: 2023-10-27 18:13:45,513 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2612, cls: 0.0662, iou: 0.1437), misc (ry: 0.33, z: 0.64), dt: 0.57, eta: 5.2h
[INFO]: 2023-10-27 18:15:58,370 iter: 17500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2934, cls: 0.0698, iou: 0.1494), misc (ry: 0.43, z: 0.63), dt: 0.57, eta: 5.2h
[INFO]: 2023-10-27 18:18:10,136 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2457, cls: 0.0606, iou: 0.1372), misc (ry: 0.31, z: 0.64), dt: 0.57, eta: 5.1h
[INFO]: 2023-10-27 18:20:21,424 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2614, cls: 0.0638, iou: 0.1375), misc (ry: 0.32, z: 0.58), dt: 0.57, eta: 5.1h
[INFO]: 2023-10-27 18:22:37,059 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2467, cls: 0.0630, iou: 0.1392), misc (ry: 0.33, z: 0.58), dt: 0.57, eta: 5.0h
[INFO]: 2023-10-27 18:24:50,446 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2204, cls: 0.0607, iou: 0.1373), misc (ry: 0.32, z: 0.54), dt: 0.57, eta: 5.0h
[INFO]: 2023-10-27 18:27:02,954 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2177, cls: 0.0585, iou: 0.1364), misc (ry: 0.33, z: 0.56), dt: 0.57, eta: 4.9h
[INFO]: 2023-10-27 18:29:14,957 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2121, cls: 0.0598, iou: 0.1299), misc (ry: 0.28, z: 0.57), dt: 0.57, eta: 4.9h
[INFO]: 2023-10-27 18:31:30,125 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2022, cls: 0.0575, iou: 0.1312), misc (ry: 0.28, z: 0.57), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-27 18:33:45,847 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1897, cls: 0.0561, iou: 0.1261), misc (ry: 0.24, z: 0.55), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-27 18:35:57,993 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2256, cls: 0.0589, iou: 0.1353), misc (ry: 0.29, z: 0.59), dt: 0.57, eta: 4.8h
[INFO]: 2023-10-27 18:38:08,717 iter: 20000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2053, cls: 0.0549, iou: 0.1328), misc (ry: 0.29, z: 0.53), dt: 0.57, eta: 4.7h
[INFO]: 2023-10-27 18:40:23,903 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-10-27 18:42:37,430 testing 2000/3769, dt: 0.134, eta: 4.0m
[INFO]: 2023-10-27 18:44:51,201 testing 3000/3769, dt: 0.134, eta: 1.7m
[INFO]: 2023-10-27 18:46:42,802 test_iter 20000 2d car --> easy: 0.8243, mod: 0.8151, hard: 0.6661
[INFO]: 2023-10-27 18:46:42,804 test_iter 20000 gr car --> easy: 0.1012, mod: 0.0849, hard: 0.0635
[INFO]: 2023-10-27 18:46:42,804 test_iter 20000 3d car --> easy: 0.0635, mod: 0.0513, hard: 0.0478
[INFO]: 2023-10-27 18:46:42,805 test_iter 20000 2d pedestrian --> easy: 0.6236, mod: 0.5551, hard: 0.4785
[INFO]: 2023-10-27 18:46:42,805 test_iter 20000 gr pedestrian --> easy: 0.0519, mod: 0.0455, hard: 0.0455
[INFO]: 2023-10-27 18:46:42,806 test_iter 20000 3d pedestrian --> easy: 0.0455, mod: 0.0455, hard: 0.0455
[INFO]: 2023-10-27 18:46:42,806 test_iter 20000 2d cyclist --> easy: 0.5113, mod: 0.3611, hard: 0.3532
[INFO]: 2023-10-27 18:46:42,807 test_iter 20000 gr cyclist --> easy: 0.0032, mod: 0.0101, hard: 0.0101
[INFO]: 2023-10-27 18:46:42,807 test_iter 20000 3d cyclist --> easy: 0.0032, mod: 0.0101, hard: 0.0101
[INFO]: 2023-10-27 18:48:58,456 iter: 20250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1877, cls: 0.0560, iou: 0.1245), misc (ry: 0.28, z: 0.51), dt: 0.59, eta: 4.9h
[INFO]: 2023-10-27 18:51:12,680 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1843, cls: 0.0576, iou: 0.1254), misc (ry: 0.27, z: 0.51), dt: 0.59, eta: 4.8h
[INFO]: 2023-10-27 18:53:25,256 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2213, cls: 0.0578, iou: 0.1294), misc (ry: 0.33, z: 0.55), dt: 0.59, eta: 4.8h
[INFO]: 2023-10-27 18:55:38,378 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1789, cls: 0.0558, iou: 0.1242), misc (ry: 0.28, z: 0.51), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-27 18:57:48,654 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1855, cls: 0.0545, iou: 0.1271), misc (ry: 0.28, z: 0.50), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-27 19:00:05,126 iter: 21500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1598, cls: 0.0550, iou: 0.1214), misc (ry: 0.23, z: 0.48), dt: 0.59, eta: 4.7h
[INFO]: 2023-10-27 19:02:20,962 iter: 21750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1629, cls: 0.0548, iou: 0.1233), misc (ry: 0.24, z: 0.50), dt: 0.59, eta: 4.6h
[INFO]: 2023-10-27 19:04:37,204 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1696, cls: 0.0558, iou: 0.1246), misc (ry: 0.26, z: 0.49), dt: 0.59, eta: 4.6h
[INFO]: 2023-10-27 19:06:48,496 iter: 22250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1720, cls: 0.0573, iou: 0.1222), misc (ry: 0.27, z: 0.46), dt: 0.59, eta: 4.5h
[INFO]: 2023-10-27 19:09:01,159 iter: 22500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1876, cls: 0.0575, iou: 0.1268), misc (ry: 0.28, z: 0.52), dt: 0.59, eta: 4.5h
[INFO]: 2023-10-27 19:11:15,543 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1824, cls: 0.0548, iou: 0.1224), misc (ry: 0.26, z: 0.60), dt: 0.58, eta: 4.4h
[INFO]: 2023-10-27 19:13:31,246 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1582, cls: 0.0516, iou: 0.1182), misc (ry: 0.21, z: 0.53), dt: 0.58, eta: 4.4h
[INFO]: 2023-10-27 19:15:44,524 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1630, cls: 0.0510, iou: 0.1213), misc (ry: 0.23, z: 0.53), dt: 0.58, eta: 4.3h
[INFO]: 2023-10-27 19:18:00,496 iter: 23500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1644, cls: 0.0562, iou: 0.1231), misc (ry: 0.25, z: 0.48), dt: 0.58, eta: 4.3h
[INFO]: 2023-10-27 19:20:11,715 iter: 23750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1399, cls: 0.0508, iou: 0.1138), misc (ry: 0.23, z: 0.49), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-27 19:22:25,381 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1417, cls: 0.0470, iou: 0.1116), misc (ry: 0.22, z: 0.49), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-27 19:24:40,593 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1401, cls: 0.0505, iou: 0.1136), misc (ry: 0.24, z: 0.47), dt: 0.58, eta: 4.2h
[INFO]: 2023-10-27 19:26:53,231 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1268, cls: 0.0459, iou: 0.1059), misc (ry: 0.20, z: 0.43), dt: 0.58, eta: 4.1h
[INFO]: 2023-10-27 19:29:08,472 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1380, cls: 0.0521, iou: 0.1125), misc (ry: 0.23, z: 0.43), dt: 0.58, eta: 4.1h
[INFO]: 2023-10-27 19:31:20,249 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1311, cls: 0.0462, iou: 0.1074), misc (ry: 0.21, z: 0.44), dt: 0.58, eta: 4.0h
[INFO]: 2023-10-27 19:33:30,117 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1360, cls: 0.0466, iou: 0.1105), misc (ry: 0.21, z: 0.46), dt: 0.58, eta: 4.0h
[INFO]: 2023-10-27 19:35:46,161 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1302, cls: 0.0486, iou: 0.1071), misc (ry: 0.22, z: 0.45), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-27 19:38:01,313 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1443, cls: 0.0493, iou: 0.1136), misc (ry: 0.22, z: 0.44), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-27 19:40:14,124 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1372, cls: 0.0503, iou: 0.1115), misc (ry: 0.22, z: 0.46), dt: 0.58, eta: 3.9h
[INFO]: 2023-10-27 19:42:31,808 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1194, cls: 0.0478, iou: 0.1101), misc (ry: 0.19, z: 0.40), dt: 0.58, eta: 3.8h
[INFO]: 2023-10-27 19:44:47,885 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1299, cls: 0.0487, iou: 0.1094), misc (ry: 0.21, z: 0.46), dt: 0.58, eta: 3.8h
[INFO]: 2023-10-27 19:47:02,426 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1496, cls: 0.0517, iou: 0.1113), misc (ry: 0.22, z: 0.47), dt: 0.58, eta: 3.7h
[INFO]: 2023-10-27 19:49:14,930 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1342, cls: 0.0482, iou: 0.1072), misc (ry: 0.22, z: 0.45), dt: 0.58, eta: 3.7h
[INFO]: 2023-10-27 19:51:29,399 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1173, cls: 0.0471, iou: 0.1043), misc (ry: 0.19, z: 0.40), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-27 19:53:40,969 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1296, cls: 0.0472, iou: 0.1082), misc (ry: 0.21, z: 0.45), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-27 19:55:54,499 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1194, cls: 0.0435, iou: 0.1037), misc (ry: 0.21, z: 0.44), dt: 0.58, eta: 3.6h
[INFO]: 2023-10-27 19:58:10,012 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1229, cls: 0.0446, iou: 0.1068), misc (ry: 0.21, z: 0.44), dt: 0.58, eta: 3.5h
[INFO]: 2023-10-27 20:00:20,283 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1178, cls: 0.0455, iou: 0.1018), misc (ry: 0.20, z: 0.39), dt: 0.58, eta: 3.5h
[INFO]: 2023-10-27 20:02:32,444 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1121, cls: 0.0447, iou: 0.1028), misc (ry: 0.19, z: 0.41), dt: 0.57, eta: 3.4h
[INFO]: 2023-10-27 20:04:43,106 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1220, cls: 0.0446, iou: 0.1032), misc (ry: 0.20, z: 0.43), dt: 0.57, eta: 3.4h
[INFO]: 2023-10-27 20:06:53,556 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1275, cls: 0.0479, iou: 0.1058), misc (ry: 0.21, z: 0.44), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-27 20:09:06,085 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1139, cls: 0.0427, iou: 0.0992), misc (ry: 0.19, z: 0.46), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-27 20:11:21,569 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1077, cls: 0.0459, iou: 0.1041), misc (ry: 0.18, z: 0.39), dt: 0.57, eta: 3.3h
[INFO]: 2023-10-27 20:13:35,907 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1062, cls: 0.0419, iou: 0.0993), misc (ry: 0.18, z: 0.42), dt: 0.57, eta: 3.2h
[INFO]: 2023-10-27 20:15:51,529 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1098, cls: 0.0430, iou: 0.1005), misc (ry: 0.19, z: 0.42), dt: 0.57, eta: 3.2h
[INFO]: 2023-10-27 20:18:06,105 testing 1000/3769, dt: 0.134, eta: 6.2m
[INFO]: 2023-10-27 20:20:20,593 testing 2000/3769, dt: 0.134, eta: 4.0m
[INFO]: 2023-10-27 20:22:34,926 testing 3000/3769, dt: 0.134, eta: 1.7m
[INFO]: 2023-10-27 20:24:28,636 test_iter 30000 2d car --> easy: 0.9214, mod: 0.8390, hard: 0.6783
[INFO]: 2023-10-27 20:24:28,638 test_iter 30000 gr car --> easy: 0.1937, mod: 0.1691, hard: 0.1519
[INFO]: 2023-10-27 20:24:28,639 test_iter 30000 3d car --> easy: 0.1644, mod: 0.1395, hard: 0.1234
[INFO]: 2023-10-27 20:24:28,639 test_iter 30000 2d pedestrian --> easy: 0.7159, mod: 0.5796, hard: 0.4981
[INFO]: 2023-10-27 20:24:28,640 test_iter 30000 gr pedestrian --> easy: 0.0443, mod: 0.0430, hard: 0.0396
[INFO]: 2023-10-27 20:24:28,640 test_iter 30000 3d pedestrian --> easy: 0.0400, mod: 0.0376, hard: 0.0303
[INFO]: 2023-10-27 20:24:28,641 test_iter 30000 2d cyclist --> easy: 0.6142, mod: 0.3945, hard: 0.3858
[INFO]: 2023-10-27 20:24:28,641 test_iter 30000 gr cyclist --> easy: 0.0253, mod: 0.0131, hard: 0.0138
[INFO]: 2023-10-27 20:24:28,642 test_iter 30000 3d cyclist --> easy: 0.0221, mod: 0.0124, hard: 0.0130
[INFO]: 2023-10-27 20:26:42,500 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1036, cls: 0.0425, iou: 0.0980), misc (ry: 0.17, z: 0.38), dt: 0.59, eta: 3.2h
[INFO]: 2023-10-27 20:28:54,902 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1111, cls: 0.0413, iou: 0.0974), misc (ry: 0.18, z: 0.41), dt: 0.59, eta: 3.2h
[INFO]: 2023-10-27 20:31:06,287 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1021, cls: 0.0444, iou: 0.0954), misc (ry: 0.18, z: 0.39), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-27 20:33:20,615 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1026, cls: 0.0427, iou: 0.0964), misc (ry: 0.19, z: 0.42), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-27 20:35:33,007 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0966, cls: 0.0424, iou: 0.0959), misc (ry: 0.17, z: 0.39), dt: 0.59, eta: 3.1h
[INFO]: 2023-10-27 20:37:45,076 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1094, cls: 0.0442, iou: 0.1019), misc (ry: 0.21, z: 0.40), dt: 0.59, eta: 3.0h
[INFO]: 2023-10-27 20:40:00,182 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0991, cls: 0.0407, iou: 0.0961), misc (ry: 0.20, z: 0.40), dt: 0.59, eta: 3.0h
[INFO]: 2023-10-27 20:42:14,959 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0967, cls: 0.0407, iou: 0.0948), misc (ry: 0.17, z: 0.40), dt: 0.59, eta: 2.9h
[INFO]: 2023-10-27 20:44:27,248 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0983, cls: 0.0409, iou: 0.0954), misc (ry: 0.19, z: 0.40), dt: 0.59, eta: 2.9h
[INFO]: 2023-10-27 20:46:42,446 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0963, cls: 0.0426, iou: 0.0967), misc (ry: 0.18, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-10-27 20:48:55,172 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0892, cls: 0.0395, iou: 0.0941), misc (ry: 0.17, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-10-27 20:51:07,534 iter: 33000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0841, cls: 0.0395, iou: 0.0919), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 2.8h
[INFO]: 2023-10-27 20:53:19,894 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0808, cls: 0.0385, iou: 0.0895), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.7h
[INFO]: 2023-10-27 20:55:31,826 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0857, cls: 0.0405, iou: 0.0926), misc (ry: 0.16, z: 0.40), dt: 0.58, eta: 2.7h
[INFO]: 2023-10-27 20:57:45,144 iter: 33750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0945, cls: 0.0404, iou: 0.0940), misc (ry: 0.18, z: 0.38), dt: 0.58, eta: 2.6h
[INFO]: 2023-10-27 20:59:59,620 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0854, cls: 0.0395, iou: 0.0894), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.6h
[INFO]: 2023-10-27 21:02:11,840 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0782, cls: 0.0358, iou: 0.0872), misc (ry: 0.16, z: 0.39), dt: 0.58, eta: 2.5h
[INFO]: 2023-10-27 21:04:25,207 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0804, cls: 0.0377, iou: 0.0879), misc (ry: 0.16, z: 0.35), dt: 0.58, eta: 2.5h
[INFO]: 2023-10-27 21:06:35,860 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0806, cls: 0.0377, iou: 0.0875), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.5h
[INFO]: 2023-10-27 21:08:51,118 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0825, cls: 0.0380, iou: 0.0860), misc (ry: 0.16, z: 0.36), dt: 0.58, eta: 2.4h
[INFO]: 2023-10-27 21:11:03,205 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0792, cls: 0.0402, iou: 0.0883), misc (ry: 0.15, z: 0.36), dt: 0.58, eta: 2.4h
[INFO]: 2023-10-27 21:13:17,583 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0832, cls: 0.0393, iou: 0.0897), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-27 21:15:31,053 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0756, cls: 0.0366, iou: 0.0858), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-27 21:17:46,826 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0891, cls: 0.0401, iou: 0.0902), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 2.3h
[INFO]: 2023-10-27 21:20:02,761 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0811, cls: 0.0388, iou: 0.0864), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.2h
[INFO]: 2023-10-27 21:22:15,166 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0365, iou: 0.0864), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.2h
[INFO]: 2023-10-27 21:24:29,464 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0398, iou: 0.0884), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-27 21:26:44,509 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0750, cls: 0.0376, iou: 0.0851), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-27 21:28:56,104 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0754, cls: 0.0379, iou: 0.0844), misc (ry: 0.15, z: 0.33), dt: 0.58, eta: 2.1h
[INFO]: 2023-10-27 21:31:11,440 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0762, cls: 0.0377, iou: 0.0836), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.0h
[INFO]: 2023-10-27 21:33:25,304 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0715, cls: 0.0362, iou: 0.0820), misc (ry: 0.16, z: 0.33), dt: 0.58, eta: 2.0h
[INFO]: 2023-10-27 21:35:37,009 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0704, cls: 0.0370, iou: 0.0847), misc (ry: 0.15, z: 0.32), dt: 0.58, eta: 1.9h
[INFO]: 2023-10-27 21:37:49,074 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0692, cls: 0.0344, iou: 0.0814), misc (ry: 0.14, z: 0.32), dt: 0.58, eta: 1.9h
[INFO]: 2023-10-27 21:40:02,133 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0690, cls: 0.0380, iou: 0.0820), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-27 21:42:16,543 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0656, cls: 0.0372, iou: 0.0790), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-27 21:44:31,808 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0641, cls: 0.0349, iou: 0.0782), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 1.8h
[INFO]: 2023-10-27 21:46:44,984 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0598, cls: 0.0357, iou: 0.0775), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 1.7h
[INFO]: 2023-10-27 21:48:58,174 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0622, cls: 0.0340, iou: 0.0786), misc (ry: 0.14, z: 0.33), dt: 0.58, eta: 1.7h
[INFO]: 2023-10-27 21:51:10,880 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0662, cls: 0.0367, iou: 0.0791), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 1.6h
[INFO]: 2023-10-27 21:53:24,627 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0625, cls: 0.0356, iou: 0.0763), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 1.6h
[INFO]: 2023-10-27 21:55:38,273 testing 1000/3769, dt: 0.133, eta: 6.1m
[INFO]: 2023-10-27 21:57:55,665 testing 2000/3769, dt: 0.135, eta: 4.0m
[INFO]: 2023-10-27 22:00:11,213 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-10-27 22:02:05,755 test_iter 40000 2d car --> easy: 0.9009, mod: 0.8316, hard: 0.6736
[INFO]: 2023-10-27 22:02:05,756 test_iter 40000 gr car --> easy: 0.2341, mod: 0.1815, hard: 0.1672
[INFO]: 2023-10-27 22:02:05,757 test_iter 40000 3d car --> easy: 0.1840, mod: 0.1564, hard: 0.1303
[INFO]: 2023-10-27 22:02:05,758 test_iter 40000 2d pedestrian --> easy: 0.7159, mod: 0.5776, hard: 0.4976
[INFO]: 2023-10-27 22:02:05,758 test_iter 40000 gr pedestrian --> easy: 0.0454, mod: 0.0446, hard: 0.0398
[INFO]: 2023-10-27 22:02:05,759 test_iter 40000 3d pedestrian --> easy: 0.0332, mod: 0.0331, hard: 0.0288
[INFO]: 2023-10-27 22:02:05,759 test_iter 40000 2d cyclist --> easy: 0.6259, mod: 0.4528, hard: 0.3913
[INFO]: 2023-10-27 22:02:05,760 test_iter 40000 gr cyclist --> easy: 0.0280, mod: 0.0262, hard: 0.0262
[INFO]: 2023-10-27 22:02:05,760 test_iter 40000 3d cyclist --> easy: 0.0268, mod: 0.0254, hard: 0.0182
[INFO]: 2023-10-27 22:04:20,218 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0552, cls: 0.0328, iou: 0.0743), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.6h
[INFO]: 2023-10-27 22:06:35,226 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0682, cls: 0.0367, iou: 0.0798), misc (ry: 0.15, z: 0.31), dt: 0.59, eta: 1.6h
[INFO]: 2023-10-27 22:08:46,661 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0588, cls: 0.0338, iou: 0.0735), misc (ry: 0.12, z: 0.30), dt: 0.59, eta: 1.5h
[INFO]: 2023-10-27 22:10:59,341 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0610, cls: 0.0347, iou: 0.0760), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.5h
[INFO]: 2023-10-27 22:13:14,418 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0633, cls: 0.0372, iou: 0.0775), misc (ry: 0.14, z: 0.31), dt: 0.59, eta: 1.4h
[INFO]: 2023-10-27 22:15:28,242 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0337, iou: 0.0731), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.4h
[INFO]: 2023-10-27 22:17:40,929 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0549, cls: 0.0334, iou: 0.0716), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-27 22:19:56,421 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0517, cls: 0.0316, iou: 0.0718), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-27 22:22:10,507 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0562, cls: 0.0320, iou: 0.0725), misc (ry: 0.12, z: 0.28), dt: 0.59, eta: 1.3h
[INFO]: 2023-10-27 22:24:22,430 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0551, cls: 0.0353, iou: 0.0715), misc (ry: 0.13, z: 0.30), dt: 0.59, eta: 1.2h
[INFO]: 2023-10-27 22:26:35,427 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0517, cls: 0.0333, iou: 0.0705), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.2h
[INFO]: 2023-10-27 22:28:46,946 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0521, cls: 0.0322, iou: 0.0700), misc (ry: 0.12, z: 0.30), dt: 0.58, eta: 1.1h
[INFO]: 2023-10-27 22:31:02,632 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0536, cls: 0.0329, iou: 0.0706), misc (ry: 0.12, z: 0.30), dt: 0.58, eta: 1.1h
[INFO]: 2023-10-27 22:33:16,812 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0513, cls: 0.0332, iou: 0.0691), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 1.1h
[INFO]: 2023-10-27 22:35:32,013 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0541, cls: 0.0329, iou: 0.0695), misc (ry: 0.13, z: 0.28), dt: 0.58, eta: 1.0h
[INFO]: 2023-10-27 22:37:43,029 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0546, cls: 0.0345, iou: 0.0697), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 58.4m
[INFO]: 2023-10-27 22:39:55,746 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0502, cls: 0.0312, iou: 0.0675), misc (ry: 0.12, z: 0.29), dt: 0.58, eta: 55.9m
[INFO]: 2023-10-27 22:42:12,248 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0477, cls: 0.0328, iou: 0.0647), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 53.5m
[INFO]: 2023-10-27 22:44:23,204 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0318, iou: 0.0663), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 51.0m
[INFO]: 2023-10-27 22:46:36,774 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0513, cls: 0.0328, iou: 0.0672), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 48.6m
[INFO]: 2023-10-27 22:48:49,679 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0473, cls: 0.0330, iou: 0.0649), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 46.1m
[INFO]: 2023-10-27 22:51:03,855 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0477, cls: 0.0340, iou: 0.0652), misc (ry: 0.11, z: 0.26), dt: 0.58, eta: 43.7m
[INFO]: 2023-10-27 22:53:15,081 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0443, cls: 0.0316, iou: 0.0626), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 41.2m
[INFO]: 2023-10-27 22:55:30,113 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0465, cls: 0.0315, iou: 0.0644), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 38.8m
[INFO]: 2023-10-27 22:57:42,336 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0312, iou: 0.0630), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 36.3m
[INFO]: 2023-10-27 22:59:58,704 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0464, cls: 0.0325, iou: 0.0643), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 33.9m
[INFO]: 2023-10-27 23:02:10,001 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0447, cls: 0.0307, iou: 0.0627), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 31.5m
[INFO]: 2023-10-27 23:04:20,279 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0466, cls: 0.0324, iou: 0.0640), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 29.0m
[INFO]: 2023-10-27 23:06:35,747 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0477, cls: 0.0324, iou: 0.0619), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 26.6m
[INFO]: 2023-10-27 23:08:47,549 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0438, cls: 0.0308, iou: 0.0624), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 24.2m
[INFO]: 2023-10-27 23:11:02,480 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0437, cls: 0.0311, iou: 0.0601), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 21.8m
[INFO]: 2023-10-27 23:13:13,631 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0444, cls: 0.0304, iou: 0.0602), misc (ry: 0.11, z: 0.24), dt: 0.58, eta: 19.3m
[INFO]: 2023-10-27 23:15:26,763 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0457, cls: 0.0304, iou: 0.0619), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 16.9m
[INFO]: 2023-10-27 23:17:42,156 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0437, cls: 0.0335, iou: 0.0608), misc (ry: 0.11, z: 0.24), dt: 0.58, eta: 14.5m
[INFO]: 2023-10-27 23:19:55,610 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0451, cls: 0.0329, iou: 0.0624), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 12.1m
[INFO]: 2023-10-27 23:22:08,668 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0401, cls: 0.0296, iou: 0.0597), misc (ry: 0.11, z: 0.24), dt: 0.58, eta: 9.7m
[INFO]: 2023-10-27 23:24:23,587 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0401, cls: 0.0304, iou: 0.0594), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 7.2m
[INFO]: 2023-10-27 23:26:38,111 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0402, cls: 0.0289, iou: 0.0589), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 4.8m
[INFO]: 2023-10-27 23:28:53,400 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0299, iou: 0.0606), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 2.4m
[INFO]: 2023-10-27 23:31:09,906 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0424, cls: 0.0316, iou: 0.0596), misc (ry: 0.11, z: 0.24), dt: 0.58, eta: 0.6s
[INFO]: 2023-10-27 23:33:23,552 testing 1000/3769, dt: 0.133, eta: 6.2m
[INFO]: 2023-10-27 23:35:35,792 testing 2000/3769, dt: 0.133, eta: 3.9m
[INFO]: 2023-10-27 23:37:47,472 testing 3000/3769, dt: 0.132, eta: 1.7m
[INFO]: 2023-10-27 23:39:37,903 test_iter 50000 2d car --> easy: 0.8882, mod: 0.8298, hard: 0.6714
[INFO]: 2023-10-27 23:39:37,905 test_iter 50000 gr car --> easy: 0.2540, mod: 0.2072, hard: 0.1767
[INFO]: 2023-10-27 23:39:37,906 test_iter 50000 3d car --> easy: 0.1936, mod: 0.1663, hard: 0.1488
[INFO]: 2023-10-27 23:39:37,906 test_iter 50000 2d pedestrian --> easy: 0.7249, mod: 0.5833, hard: 0.5004
[INFO]: 2023-10-27 23:39:37,907 test_iter 50000 gr pedestrian --> easy: 0.0412, mod: 0.0469, hard: 0.0426
[INFO]: 2023-10-27 23:39:37,907 test_iter 50000 3d pedestrian --> easy: 0.0359, mod: 0.0400, hard: 0.0343
[INFO]: 2023-10-27 23:39:37,908 test_iter 50000 2d cyclist --> easy: 0.6359, mod: 0.4060, hard: 0.3962
[INFO]: 2023-10-27 23:39:37,909 test_iter 50000 gr cyclist --> easy: 0.0256, mod: 0.0233, hard: 0.0240
[INFO]: 2023-10-27 23:39:37,909 test_iter 50000 3d cyclist --> easy: 0.0212, mod: 0.0130, hard: 0.0130
