[INFO]: 2024-04-11 15:19:52,840 ==开始处理数据集==
[INFO]: 2024-04-11 15:19:52,840 命中imdb缓存.
[INFO]: 2024-04-11 15:19:54,290 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-11 15:19:54,290 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-11 15:19:56,768 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-11 15:19:56,768 ==数据集处理完毕==
[INFO]: 2024-04-11 15:19:59,771 ==开始生成anchors==
[INFO]: 2024-04-11 15:19:59,772 ==anchors生成完毕==
[INFO]: 2024-04-11 15:20:02,775 ==开始计算bbox参数==
[INFO]: 2024-04-11 15:20:02,775 命中bbox的回归均值缓存
[INFO]: 2024-04-11 15:20:02,776 命中bbox的回归标准差缓存
[INFO]: 2024-04-11 15:20:02,776 ==bbox参数计算完毕==
[INFO]: 2024-04-11 15:20:10,813 设置保存完成
[INFO]: 2024-04-11 15:20:13,816 训练配置一览
[INFO]: 2024-04-11 15:20:15,824 训练配置: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2024-04-11 15:20:21,381 装载完成
[INFO]: 2024-04-11 15:20:24,384 神经网络结构一览
[INFO]: 2024-04-11 15:20:26,386 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (neck): Sequential(
      (0): ReLU()
      (1): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(3, 3))
      (2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): OREPA(
        (nonlinear): SiLU()
        (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-11 15:22:59,529 iter: 250, acc (bg: 0.95, fg: 0.33, iou: 0.61), loss (bbox_3d: 2.1123, cls: 0.8654, iou: 0.5043), misc (ry: 1.47, z: 2.50), dt: 0.61, eta: 8.5h
[INFO]: 2024-04-11 15:25:30,892 iter: 500, acc (bg: 1.00, fg: 0.63, iou: 0.66), loss (bbox_3d: 1.5068, cls: 0.3990, iou: 0.4223), misc (ry: 1.20, z: 2.03), dt: 0.61, eta: 8.4h
[INFO]: 2024-04-11 15:28:01,269 iter: 750, acc (bg: 0.99, fg: 0.71, iou: 0.69), loss (bbox_3d: 1.3258, cls: 0.3284, iou: 0.3851), misc (ry: 1.11, z: 1.81), dt: 0.61, eta: 8.3h
[INFO]: 2024-04-11 15:30:30,745 iter: 1000, acc (bg: 1.00, fg: 0.79, iou: 0.72), loss (bbox_3d: 1.1623, cls: 0.2610, iou: 0.3433), misc (ry: 1.06, z: 1.55), dt: 0.60, eta: 8.2h
[INFO]: 2024-04-11 15:33:00,157 iter: 1250, acc (bg: 1.00, fg: 0.82, iou: 0.73), loss (bbox_3d: 1.0669, cls: 0.2284, iou: 0.3270), misc (ry: 0.96, z: 1.44), dt: 0.60, eta: 8.2h
[INFO]: 2024-04-11 15:35:27,077 iter: 1500, acc (bg: 1.00, fg: 0.82, iou: 0.74), loss (bbox_3d: 0.9565, cls: 0.2192, iou: 0.3127), misc (ry: 0.92, z: 1.33), dt: 0.60, eta: 8.1h
[INFO]: 2024-04-11 15:37:54,453 iter: 1750, acc (bg: 1.00, fg: 0.85, iou: 0.76), loss (bbox_3d: 0.9095, cls: 0.1966, iou: 0.2900), misc (ry: 0.86, z: 1.23), dt: 0.60, eta: 8.0h
[INFO]: 2024-04-11 15:40:26,484 iter: 2000, acc (bg: 1.00, fg: 0.86, iou: 0.76), loss (bbox_3d: 0.9072, cls: 0.1788, iou: 0.2813), misc (ry: 0.87, z: 1.32), dt: 0.60, eta: 8.0h
[INFO]: 2024-04-11 15:42:59,104 iter: 2250, acc (bg: 1.00, fg: 0.86, iou: 0.77), loss (bbox_3d: 0.8541, cls: 0.1773, iou: 0.2725), misc (ry: 0.79, z: 1.21), dt: 0.60, eta: 8.0h
[INFO]: 2024-04-11 15:45:30,081 iter: 2500, acc (bg: 1.00, fg: 0.87, iou: 0.77), loss (bbox_3d: 0.8002, cls: 0.1700, iou: 0.2664), misc (ry: 0.72, z: 1.14), dt: 0.60, eta: 7.9h
[INFO]: 2024-04-11 15:47:59,184 iter: 2750, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.7510, cls: 0.1573, iou: 0.2493), misc (ry: 0.74, z: 1.07), dt: 0.60, eta: 7.9h
[INFO]: 2024-04-11 15:50:33,673 iter: 3000, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7182, cls: 0.1486, iou: 0.2453), misc (ry: 0.70, z: 1.07), dt: 0.60, eta: 7.9h
[INFO]: 2024-04-11 15:53:10,308 iter: 3250, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.6697, cls: 0.1419, iou: 0.2365), misc (ry: 0.62, z: 1.10), dt: 0.60, eta: 7.8h
[INFO]: 2024-04-11 15:55:41,772 iter: 3500, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.7156, cls: 0.1486, iou: 0.2334), misc (ry: 0.76, z: 1.06), dt: 0.60, eta: 7.8h
[INFO]: 2024-04-11 15:58:07,805 iter: 3750, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.6764, cls: 0.1415, iou: 0.2291), misc (ry: 0.71, z: 0.99), dt: 0.60, eta: 7.7h
[INFO]: 2024-04-11 16:00:41,501 iter: 4000, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6418, cls: 0.1312, iou: 0.2218), misc (ry: 0.65, z: 1.03), dt: 0.60, eta: 7.7h
[INFO]: 2024-04-11 16:03:10,876 iter: 4250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6425, cls: 0.1302, iou: 0.2209), misc (ry: 0.64, z: 0.99), dt: 0.60, eta: 7.7h
[INFO]: 2024-04-11 16:05:40,253 iter: 4500, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6150, cls: 0.1339, iou: 0.2220), misc (ry: 0.58, z: 1.00), dt: 0.60, eta: 7.6h
[INFO]: 2024-04-11 16:08:09,495 iter: 4750, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5914, cls: 0.1273, iou: 0.2107), misc (ry: 0.60, z: 0.95), dt: 0.60, eta: 7.6h
[INFO]: 2024-04-11 16:10:38,042 iter: 5000, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6122, cls: 0.1255, iou: 0.2143), misc (ry: 0.63, z: 1.06), dt: 0.60, eta: 7.5h
[INFO]: 2024-04-11 16:13:05,295 iter: 5250, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.5879, cls: 0.1379, iou: 0.2178), misc (ry: 0.52, z: 1.00), dt: 0.60, eta: 7.5h
[INFO]: 2024-04-11 16:15:30,853 iter: 5500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6144, cls: 0.1238, iou: 0.2113), misc (ry: 0.61, z: 1.02), dt: 0.60, eta: 7.4h
[INFO]: 2024-04-11 16:17:58,814 iter: 5750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5769, cls: 0.1179, iou: 0.2036), misc (ry: 0.63, z: 0.86), dt: 0.60, eta: 7.4h
[INFO]: 2024-04-11 16:20:25,325 iter: 6000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5458, cls: 0.1132, iou: 0.2035), misc (ry: 0.55, z: 0.90), dt: 0.60, eta: 7.3h
[INFO]: 2024-04-11 16:22:50,432 iter: 6250, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5066, cls: 0.1148, iou: 0.2001), misc (ry: 0.54, z: 0.88), dt: 0.60, eta: 7.3h
[INFO]: 2024-04-11 16:25:19,073 iter: 6500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5010, cls: 0.1234, iou: 0.2010), misc (ry: 0.55, z: 0.88), dt: 0.60, eta: 7.2h
[INFO]: 2024-04-11 16:27:46,391 iter: 6750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5607, cls: 0.1161, iou: 0.1983), misc (ry: 0.60, z: 0.90), dt: 0.60, eta: 7.2h
[INFO]: 2024-04-11 16:30:12,285 iter: 7000, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5236, cls: 0.1082, iou: 0.1994), misc (ry: 0.54, z: 0.94), dt: 0.60, eta: 7.1h
[INFO]: 2024-04-11 16:32:39,551 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4831, cls: 0.1040, iou: 0.1882), misc (ry: 0.46, z: 0.84), dt: 0.60, eta: 7.1h
[INFO]: 2024-04-11 16:35:08,043 iter: 7500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4306, cls: 0.1058, iou: 0.1871), misc (ry: 0.47, z: 0.80), dt: 0.60, eta: 7.1h
[INFO]: 2024-04-11 16:37:37,185 iter: 7750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4293, cls: 0.0991, iou: 0.1818), misc (ry: 0.47, z: 0.77), dt: 0.60, eta: 7.0h
[INFO]: 2024-04-11 16:40:03,539 iter: 8000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4441, cls: 0.0991, iou: 0.1843), misc (ry: 0.51, z: 0.81), dt: 0.60, eta: 7.0h
[INFO]: 2024-04-11 16:42:33,750 iter: 8250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4147, cls: 0.0963, iou: 0.1784), misc (ry: 0.49, z: 0.73), dt: 0.60, eta: 6.9h
[INFO]: 2024-04-11 16:45:01,962 iter: 8500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3909, cls: 0.0886, iou: 0.1680), misc (ry: 0.43, z: 0.75), dt: 0.60, eta: 6.9h
[INFO]: 2024-04-11 16:47:32,200 iter: 8750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4113, cls: 0.0966, iou: 0.1779), misc (ry: 0.43, z: 0.81), dt: 0.60, eta: 6.8h
[INFO]: 2024-04-11 16:50:00,334 iter: 9000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3709, cls: 0.0937, iou: 0.1692), misc (ry: 0.39, z: 0.73), dt: 0.60, eta: 6.8h
[INFO]: 2024-04-11 16:52:24,951 iter: 9250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3329, cls: 0.0850, iou: 0.1645), misc (ry: 0.39, z: 0.70), dt: 0.60, eta: 6.8h
[INFO]: 2024-04-11 16:54:55,149 iter: 9500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3726, cls: 0.0901, iou: 0.1677), misc (ry: 0.45, z: 0.76), dt: 0.60, eta: 6.7h
[INFO]: 2024-04-11 16:57:25,847 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3780, cls: 0.0886, iou: 0.1689), misc (ry: 0.46, z: 0.75), dt: 0.60, eta: 6.7h
[INFO]: 2024-04-11 17:00:03,320 iter: 10000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3452, cls: 0.0842, iou: 0.1651), misc (ry: 0.42, z: 0.71), dt: 0.60, eta: 6.6h
[INFO]: 2024-04-11 17:08:56,417 test_iter 10000 2d car --> easy: 0.7693, mod: 0.7245, hard: 0.6296
[INFO]: 2024-04-11 17:08:56,418 test_iter 10000 gr car --> easy: 0.0689, mod: 0.0576, hard: 0.0490
[INFO]: 2024-04-11 17:08:56,419 test_iter 10000 3d car --> easy: 0.0407, mod: 0.0353, hard: 0.0285
[INFO]: 2024-04-11 17:08:56,420 test_iter 10000 2d pedestrian --> easy: 0.5943, mod: 0.5100, hard: 0.4937
[INFO]: 2024-04-11 17:08:56,420 test_iter 10000 gr pedestrian --> easy: 0.0226, mod: 0.0253, hard: 0.0180
[INFO]: 2024-04-11 17:08:56,421 test_iter 10000 3d pedestrian --> easy: 0.0111, mod: 0.0152, hard: 0.0138
[INFO]: 2024-04-11 17:08:56,422 test_iter 10000 2d cyclist --> easy: 0.2238, mod: 0.2210, hard: 0.1617
[INFO]: 2024-04-11 17:08:56,422 test_iter 10000 gr cyclist --> easy: 0.0045, mod: 0.0045, hard: 0.0045
[INFO]: 2024-04-11 17:08:56,423 test_iter 10000 3d cyclist --> easy: 0.0045, mod: 0.0045, hard: 0.0045
[INFO]: 2024-04-11 17:11:28,643 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3534, cls: 0.0852, iou: 0.1605), misc (ry: 0.41, z: 0.73), dt: 0.65, eta: 7.2h
[INFO]: 2024-04-11 17:13:55,705 iter: 10500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3654, cls: 0.0868, iou: 0.1730), misc (ry: 0.38, z: 0.79), dt: 0.65, eta: 7.1h
[INFO]: 2024-04-11 17:16:27,904 iter: 10750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3605, cls: 0.0857, iou: 0.1663), misc (ry: 0.41, z: 0.79), dt: 0.65, eta: 7.1h
[INFO]: 2024-04-11 17:18:59,523 iter: 11000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3601, cls: 0.0817, iou: 0.1631), misc (ry: 0.43, z: 0.76), dt: 0.65, eta: 7.0h
[INFO]: 2024-04-11 17:21:37,452 iter: 11250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3352, cls: 0.0824, iou: 0.1579), misc (ry: 0.37, z: 0.74), dt: 0.65, eta: 7.0h
[INFO]: 2024-04-11 17:24:11,462 iter: 11500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3044, cls: 0.0801, iou: 0.1596), misc (ry: 0.38, z: 0.69), dt: 0.65, eta: 6.9h
[INFO]: 2024-04-11 17:27:16,073 iter: 11750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2982, cls: 0.0783, iou: 0.1580), misc (ry: 0.37, z: 0.72), dt: 0.65, eta: 6.9h
[INFO]: 2024-04-11 17:30:30,469 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3276, cls: 0.0776, iou: 0.1608), misc (ry: 0.39, z: 0.76), dt: 0.65, eta: 6.9h
[INFO]: 2024-04-11 17:32:59,525 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3462, cls: 0.0812, iou: 0.1666), misc (ry: 0.44, z: 0.76), dt: 0.65, eta: 6.8h
[INFO]: 2024-04-11 17:35:31,536 iter: 12500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3356, cls: 0.0796, iou: 0.1613), misc (ry: 0.40, z: 0.67), dt: 0.65, eta: 6.8h
[INFO]: 2024-04-11 17:38:03,511 iter: 12750, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3126, cls: 0.0850, iou: 0.1607), misc (ry: 0.36, z: 0.67), dt: 0.65, eta: 6.7h
[INFO]: 2024-04-11 17:40:32,335 iter: 13000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3052, cls: 0.0833, iou: 0.1605), misc (ry: 0.38, z: 0.62), dt: 0.65, eta: 6.6h
[INFO]: 2024-04-11 17:43:00,568 iter: 13250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3348, cls: 0.0825, iou: 0.1606), misc (ry: 0.43, z: 0.71), dt: 0.65, eta: 6.6h
[INFO]: 2024-04-11 17:45:29,027 iter: 13500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2863, cls: 0.0771, iou: 0.1509), misc (ry: 0.35, z: 0.68), dt: 0.64, eta: 6.5h
[INFO]: 2024-04-11 17:48:03,091 iter: 13750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2672, cls: 0.0755, iou: 0.1516), misc (ry: 0.32, z: 0.62), dt: 0.64, eta: 6.5h
[INFO]: 2024-04-11 17:50:34,405 iter: 14000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2817, cls: 0.0744, iou: 0.1516), misc (ry: 0.34, z: 0.67), dt: 0.64, eta: 6.4h
[INFO]: 2024-04-11 17:53:03,924 iter: 14250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2845, cls: 0.0746, iou: 0.1473), misc (ry: 0.35, z: 0.71), dt: 0.64, eta: 6.4h
[INFO]: 2024-04-11 17:55:35,736 iter: 14500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2618, cls: 0.0787, iou: 0.1514), misc (ry: 0.33, z: 0.59), dt: 0.64, eta: 6.3h
[INFO]: 2024-04-11 17:58:09,434 iter: 14750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2648, cls: 0.0701, iou: 0.1464), misc (ry: 0.34, z: 0.66), dt: 0.64, eta: 6.3h
[INFO]: 2024-04-11 18:00:41,328 iter: 15000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2376, cls: 0.0723, iou: 0.1438), misc (ry: 0.30, z: 0.57), dt: 0.64, eta: 6.2h
[INFO]: 2024-04-11 18:03:08,242 iter: 15250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2562, cls: 0.0710, iou: 0.1451), misc (ry: 0.32, z: 0.59), dt: 0.64, eta: 6.2h
[INFO]: 2024-04-11 18:05:36,349 iter: 15500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2393, cls: 0.0678, iou: 0.1408), misc (ry: 0.31, z: 0.59), dt: 0.64, eta: 6.1h
[INFO]: 2024-04-11 18:08:02,869 iter: 15750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2447, cls: 0.0691, iou: 0.1480), misc (ry: 0.30, z: 0.65), dt: 0.64, eta: 6.1h
[INFO]: 2024-04-11 18:10:29,438 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2528, cls: 0.0699, iou: 0.1410), misc (ry: 0.37, z: 0.56), dt: 0.64, eta: 6.0h
[INFO]: 2024-04-11 18:12:59,357 iter: 16250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2351, cls: 0.0733, iou: 0.1407), misc (ry: 0.33, z: 0.57), dt: 0.64, eta: 6.0h
[INFO]: 2024-04-11 18:15:26,657 iter: 16500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2172, cls: 0.0639, iou: 0.1323), misc (ry: 0.29, z: 0.58), dt: 0.64, eta: 5.9h
[INFO]: 2024-04-11 18:17:55,948 iter: 16750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2381, cls: 0.0686, iou: 0.1385), misc (ry: 0.35, z: 0.57), dt: 0.64, eta: 5.9h
[INFO]: 2024-04-11 18:20:24,409 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2400, cls: 0.0677, iou: 0.1420), misc (ry: 0.32, z: 0.64), dt: 0.64, eta: 5.8h
[INFO]: 2024-04-11 18:22:54,383 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2149, cls: 0.0678, iou: 0.1389), misc (ry: 0.28, z: 0.60), dt: 0.63, eta: 5.8h
[INFO]: 2024-04-11 18:25:26,349 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2125, cls: 0.0646, iou: 0.1335), misc (ry: 0.27, z: 0.59), dt: 0.63, eta: 5.7h
[INFO]: 2024-04-11 18:27:56,729 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2242, cls: 0.0692, iou: 0.1388), misc (ry: 0.30, z: 0.56), dt: 0.63, eta: 5.7h
[INFO]: 2024-04-11 18:30:26,315 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2208, cls: 0.0675, iou: 0.1373), misc (ry: 0.31, z: 0.54), dt: 0.63, eta: 5.6h
[INFO]: 2024-04-11 18:33:37,085 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1885, cls: 0.0646, iou: 0.1288), misc (ry: 0.24, z: 0.52), dt: 0.64, eta: 5.6h
[INFO]: 2024-04-11 18:36:46,523 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1888, cls: 0.0628, iou: 0.1280), misc (ry: 0.27, z: 0.52), dt: 0.64, eta: 5.6h
[INFO]: 2024-04-11 18:39:15,556 iter: 18750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2311, cls: 0.0645, iou: 0.1381), misc (ry: 0.33, z: 0.54), dt: 0.64, eta: 5.5h
[INFO]: 2024-04-11 18:41:44,419 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2205, cls: 0.0685, iou: 0.1382), misc (ry: 0.31, z: 0.55), dt: 0.64, eta: 5.5h
[INFO]: 2024-04-11 18:44:11,582 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2015, cls: 0.0653, iou: 0.1286), misc (ry: 0.30, z: 0.51), dt: 0.64, eta: 5.4h
[INFO]: 2024-04-11 18:46:38,763 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1843, cls: 0.0620, iou: 0.1265), misc (ry: 0.30, z: 0.52), dt: 0.63, eta: 5.4h
[INFO]: 2024-04-11 18:49:05,943 iter: 19750, acc (bg: 1.00, fg: 0.96, iou: 0.88), loss (bbox_3d: 0.2115, cls: 0.0652, iou: 0.1311), misc (ry: 0.31, z: 0.57), dt: 0.63, eta: 5.3h
[INFO]: 2024-04-11 18:51:33,978 iter: 20000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2037, cls: 0.0590, iou: 0.1271), misc (ry: 0.29, z: 0.54), dt: 0.63, eta: 5.3h
[INFO]: 2024-04-11 19:00:23,190 test_iter 20000 2d car --> easy: 0.7910, mod: 0.7995, hard: 0.6494
[INFO]: 2024-04-11 19:00:23,192 test_iter 20000 gr car --> easy: 0.0978, mod: 0.0804, hard: 0.0746
[INFO]: 2024-04-11 19:00:23,192 test_iter 20000 3d car --> easy: 0.0520, mod: 0.0428, hard: 0.0392
[INFO]: 2024-04-11 19:00:23,193 test_iter 20000 2d pedestrian --> easy: 0.6774, mod: 0.5912, hard: 0.5074
[INFO]: 2024-04-11 19:00:23,193 test_iter 20000 gr pedestrian --> easy: 0.0152, mod: 0.0152, hard: 0.0152
[INFO]: 2024-04-11 19:00:23,194 test_iter 20000 3d pedestrian --> easy: 0.0152, mod: 0.0152, hard: 0.0152
[INFO]: 2024-04-11 19:00:23,195 test_iter 20000 2d cyclist --> easy: 0.4682, mod: 0.3352, hard: 0.3381
[INFO]: 2024-04-11 19:00:23,195 test_iter 20000 gr cyclist --> easy: 0.0068, mod: 0.0053, hard: 0.0053
[INFO]: 2024-04-11 19:00:23,196 test_iter 20000 3d cyclist --> easy: 0.0059, mod: 0.0053, hard: 0.0053
[INFO]: 2024-04-11 19:02:53,219 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1999, cls: 0.0601, iou: 0.1267), misc (ry: 0.29, z: 0.58), dt: 0.66, eta: 5.4h
[INFO]: 2024-04-11 19:05:21,580 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2022, cls: 0.0636, iou: 0.1324), misc (ry: 0.29, z: 0.59), dt: 0.66, eta: 5.4h
[INFO]: 2024-04-11 19:07:51,255 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1694, cls: 0.0618, iou: 0.1255), misc (ry: 0.27, z: 0.53), dt: 0.66, eta: 5.3h
[INFO]: 2024-04-11 19:10:23,370 iter: 21000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1730, cls: 0.0615, iou: 0.1254), misc (ry: 0.28, z: 0.53), dt: 0.66, eta: 5.3h
[INFO]: 2024-04-11 19:12:50,127 iter: 21250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1851, cls: 0.0596, iou: 0.1294), misc (ry: 0.27, z: 0.52), dt: 0.66, eta: 5.2h
[INFO]: 2024-04-11 19:15:19,107 iter: 21500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1480, cls: 0.0584, iou: 0.1184), misc (ry: 0.23, z: 0.46), dt: 0.66, eta: 5.2h
[INFO]: 2024-04-11 19:17:55,324 iter: 21750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1911, cls: 0.0646, iou: 0.1275), misc (ry: 0.27, z: 0.54), dt: 0.66, eta: 5.1h
[INFO]: 2024-04-11 19:21:12,797 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1779, cls: 0.0553, iou: 0.1185), misc (ry: 0.26, z: 0.55), dt: 0.66, eta: 5.1h
[INFO]: 2024-04-11 19:24:27,994 iter: 22250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1650, cls: 0.0567, iou: 0.1223), misc (ry: 0.26, z: 0.52), dt: 0.66, eta: 5.1h
[INFO]: 2024-04-11 19:27:01,680 iter: 22500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1707, cls: 0.0616, iou: 0.1249), misc (ry: 0.23, z: 0.48), dt: 0.66, eta: 5.0h
[INFO]: 2024-04-11 19:29:34,732 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1485, cls: 0.0551, iou: 0.1176), misc (ry: 0.23, z: 0.47), dt: 0.66, eta: 5.0h
[INFO]: 2024-04-11 19:32:02,378 iter: 23000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1745, cls: 0.0569, iou: 0.1198), misc (ry: 0.26, z: 0.53), dt: 0.66, eta: 4.9h
[INFO]: 2024-04-11 19:34:30,686 iter: 23250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1723, cls: 0.0586, iou: 0.1216), misc (ry: 0.26, z: 0.51), dt: 0.66, eta: 4.9h
[INFO]: 2024-04-11 19:37:00,639 iter: 23500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1717, cls: 0.0550, iou: 0.1171), misc (ry: 0.28, z: 0.51), dt: 0.66, eta: 4.8h
[INFO]: 2024-04-11 19:39:29,468 iter: 23750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1447, cls: 0.0585, iou: 0.1166), misc (ry: 0.22, z: 0.47), dt: 0.65, eta: 4.8h
[INFO]: 2024-04-11 19:42:43,529 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1408, cls: 0.0567, iou: 0.1113), misc (ry: 0.21, z: 0.48), dt: 0.66, eta: 4.7h
[INFO]: 2024-04-11 19:46:00,370 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1362, cls: 0.0537, iou: 0.1153), misc (ry: 0.20, z: 0.45), dt: 0.66, eta: 4.7h
[INFO]: 2024-04-11 19:48:40,904 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1390, cls: 0.0539, iou: 0.1159), misc (ry: 0.22, z: 0.48), dt: 0.66, eta: 4.7h
[INFO]: 2024-04-11 19:51:12,066 iter: 24750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1645, cls: 0.0564, iou: 0.1156), misc (ry: 0.28, z: 0.45), dt: 0.66, eta: 4.6h
[INFO]: 2024-04-11 19:53:44,421 iter: 25000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1535, cls: 0.0574, iou: 0.1161), misc (ry: 0.26, z: 0.47), dt: 0.66, eta: 4.6h
[INFO]: 2024-04-11 19:56:16,630 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1480, cls: 0.0543, iou: 0.1136), misc (ry: 0.27, z: 0.45), dt: 0.66, eta: 4.5h
[INFO]: 2024-04-11 19:58:45,325 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1328, cls: 0.0504, iou: 0.1081), misc (ry: 0.23, z: 0.45), dt: 0.65, eta: 4.5h
[INFO]: 2024-04-11 20:01:32,038 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1336, cls: 0.0528, iou: 0.1129), misc (ry: 0.23, z: 0.46), dt: 0.66, eta: 4.4h
[INFO]: 2024-04-11 20:04:49,549 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1285, cls: 0.0544, iou: 0.1094), misc (ry: 0.22, z: 0.45), dt: 0.66, eta: 4.4h
[INFO]: 2024-04-11 20:07:56,554 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1347, cls: 0.0514, iou: 0.1082), misc (ry: 0.22, z: 0.47), dt: 0.66, eta: 4.3h
[INFO]: 2024-04-11 20:10:27,770 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1302, cls: 0.0491, iou: 0.1092), misc (ry: 0.23, z: 0.43), dt: 0.66, eta: 4.3h
[INFO]: 2024-04-11 20:12:59,186 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1323, cls: 0.0536, iou: 0.1061), misc (ry: 0.23, z: 0.43), dt: 0.66, eta: 4.2h
[INFO]: 2024-04-11 20:15:28,376 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1208, cls: 0.0508, iou: 0.1071), misc (ry: 0.21, z: 0.42), dt: 0.66, eta: 4.2h
[INFO]: 2024-04-11 20:17:58,801 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1406, cls: 0.0531, iou: 0.1109), misc (ry: 0.23, z: 0.45), dt: 0.66, eta: 4.1h
[INFO]: 2024-04-11 20:20:30,206 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1259, cls: 0.0511, iou: 0.1072), misc (ry: 0.22, z: 0.42), dt: 0.65, eta: 4.1h
[INFO]: 2024-04-11 20:23:00,581 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1219, cls: 0.0482, iou: 0.1031), misc (ry: 0.21, z: 0.44), dt: 0.65, eta: 4.0h
[INFO]: 2024-04-11 20:25:30,969 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1239, cls: 0.0541, iou: 0.1088), misc (ry: 0.22, z: 0.43), dt: 0.65, eta: 4.0h
[INFO]: 2024-04-11 20:28:04,950 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1056, cls: 0.0504, iou: 0.1003), misc (ry: 0.20, z: 0.40), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-11 20:30:34,936 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1164, cls: 0.0511, iou: 0.1026), misc (ry: 0.20, z: 0.42), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-11 20:33:10,548 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1246, cls: 0.0505, iou: 0.1069), misc (ry: 0.20, z: 0.45), dt: 0.65, eta: 3.9h
[INFO]: 2024-04-11 20:35:44,005 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1159, cls: 0.0505, iou: 0.1027), misc (ry: 0.20, z: 0.41), dt: 0.65, eta: 3.8h
[INFO]: 2024-04-11 20:38:14,256 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1083, cls: 0.0460, iou: 0.0995), misc (ry: 0.18, z: 0.44), dt: 0.65, eta: 3.8h
[INFO]: 2024-04-11 20:40:47,091 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1104, cls: 0.0476, iou: 0.1016), misc (ry: 0.20, z: 0.42), dt: 0.65, eta: 3.7h
[INFO]: 2024-04-11 20:43:20,091 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1091, cls: 0.0485, iou: 0.1017), misc (ry: 0.19, z: 0.43), dt: 0.65, eta: 3.7h
[INFO]: 2024-04-11 20:45:54,914 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0996, cls: 0.0484, iou: 0.0982), misc (ry: 0.18, z: 0.40), dt: 0.65, eta: 3.6h
[INFO]: 2024-04-11 20:55:12,599 test_iter 30000 2d car --> easy: 0.8557, mod: 0.8151, hard: 0.6608
[INFO]: 2024-04-11 20:55:12,600 test_iter 30000 gr car --> easy: 0.1432, mod: 0.1163, hard: 0.1481
[INFO]: 2024-04-11 20:55:12,601 test_iter 30000 3d car --> easy: 0.0895, mod: 0.0798, hard: 0.1207
[INFO]: 2024-04-11 20:55:12,601 test_iter 30000 2d pedestrian --> easy: 0.7493, mod: 0.6616, hard: 0.5775
[INFO]: 2024-04-11 20:55:12,602 test_iter 30000 gr pedestrian --> easy: 0.1033, mod: 0.0989, hard: 0.0990
[INFO]: 2024-04-11 20:55:12,602 test_iter 30000 3d pedestrian --> easy: 0.0294, mod: 0.0294, hard: 0.0227
[INFO]: 2024-04-11 20:55:12,603 test_iter 30000 2d cyclist --> easy: 0.5631, mod: 0.4295, hard: 0.4221
[INFO]: 2024-04-11 20:55:12,603 test_iter 30000 gr cyclist --> easy: 0.0167, mod: 0.0303, hard: 0.0303
[INFO]: 2024-04-11 20:55:12,604 test_iter 30000 3d cyclist --> easy: 0.0138, mod: 0.0303, hard: 0.0303
[INFO]: 2024-04-11 20:57:53,637 iter: 30250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0954, cls: 0.0478, iou: 0.0966), misc (ry: 0.19, z: 0.37), dt: 0.67, eta: 3.7h
[INFO]: 2024-04-11 21:00:28,552 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1040, cls: 0.0486, iou: 0.0996), misc (ry: 0.19, z: 0.42), dt: 0.67, eta: 3.6h
[INFO]: 2024-04-11 21:03:03,951 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0993, cls: 0.0470, iou: 0.0969), misc (ry: 0.19, z: 0.36), dt: 0.67, eta: 3.6h
[INFO]: 2024-04-11 21:05:37,873 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0998, cls: 0.0472, iou: 0.0995), misc (ry: 0.20, z: 0.42), dt: 0.67, eta: 3.5h
[INFO]: 2024-04-11 21:08:11,522 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1048, cls: 0.0479, iou: 0.0967), misc (ry: 0.21, z: 0.38), dt: 0.67, eta: 3.5h
[INFO]: 2024-04-11 21:10:44,516 iter: 31500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0958, cls: 0.0436, iou: 0.0939), misc (ry: 0.19, z: 0.40), dt: 0.67, eta: 3.4h
[INFO]: 2024-04-11 21:13:16,051 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0927, cls: 0.0445, iou: 0.0950), misc (ry: 0.18, z: 0.40), dt: 0.67, eta: 3.4h
[INFO]: 2024-04-11 21:15:51,180 iter: 32000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0995, cls: 0.0478, iou: 0.0963), misc (ry: 0.20, z: 0.39), dt: 0.67, eta: 3.3h
[INFO]: 2024-04-11 21:18:21,434 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1116, cls: 0.0492, iou: 0.1036), misc (ry: 0.23, z: 0.40), dt: 0.67, eta: 3.3h
[INFO]: 2024-04-11 21:20:55,406 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1019, cls: 0.0460, iou: 0.0970), misc (ry: 0.19, z: 0.40), dt: 0.67, eta: 3.2h
[INFO]: 2024-04-11 21:23:27,126 iter: 32750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0907, cls: 0.0454, iou: 0.0925), misc (ry: 0.18, z: 0.37), dt: 0.67, eta: 3.2h
[INFO]: 2024-04-11 21:25:58,537 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0859, cls: 0.0444, iou: 0.0920), misc (ry: 0.18, z: 0.36), dt: 0.66, eta: 3.1h
[INFO]: 2024-04-11 21:28:29,241 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0854, cls: 0.0442, iou: 0.0914), misc (ry: 0.18, z: 0.36), dt: 0.66, eta: 3.1h
[INFO]: 2024-04-11 21:31:02,756 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0886, cls: 0.0460, iou: 0.0921), misc (ry: 0.18, z: 0.36), dt: 0.66, eta: 3.0h
[INFO]: 2024-04-11 21:33:36,959 iter: 33750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0940, cls: 0.0467, iou: 0.0941), misc (ry: 0.18, z: 0.38), dt: 0.66, eta: 3.0h
[INFO]: 2024-04-11 21:36:10,086 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0925, cls: 0.0458, iou: 0.0938), misc (ry: 0.18, z: 0.37), dt: 0.66, eta: 2.9h
[INFO]: 2024-04-11 21:38:41,007 iter: 34250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0798, cls: 0.0451, iou: 0.0874), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 2.9h
[INFO]: 2024-04-11 21:41:10,257 iter: 34500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0826, cls: 0.0447, iou: 0.0882), misc (ry: 0.15, z: 0.36), dt: 0.66, eta: 2.9h
[INFO]: 2024-04-11 21:43:39,912 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0418, iou: 0.0862), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.8h
[INFO]: 2024-04-11 21:46:05,043 iter: 35000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0822, cls: 0.0431, iou: 0.0865), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.8h
[INFO]: 2024-04-11 21:48:29,145 iter: 35250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0786, cls: 0.0463, iou: 0.0873), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.7h
[INFO]: 2024-04-11 21:50:55,509 iter: 35500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0852, cls: 0.0459, iou: 0.0895), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 2.7h
[INFO]: 2024-04-11 21:53:22,862 iter: 35750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0833, cls: 0.0460, iou: 0.0867), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 2.6h
[INFO]: 2024-04-11 21:55:49,041 iter: 36000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0767, cls: 0.0456, iou: 0.0868), misc (ry: 0.16, z: 0.35), dt: 0.66, eta: 2.6h
[INFO]: 2024-04-11 21:58:13,582 iter: 36250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0840, cls: 0.0443, iou: 0.0894), misc (ry: 0.17, z: 0.35), dt: 0.66, eta: 2.5h
[INFO]: 2024-04-11 22:00:44,145 iter: 36500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0800, cls: 0.0442, iou: 0.0874), misc (ry: 0.16, z: 0.35), dt: 0.66, eta: 2.5h
[INFO]: 2024-04-11 22:03:09,807 iter: 36750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0776, cls: 0.0430, iou: 0.0849), misc (ry: 0.16, z: 0.35), dt: 0.66, eta: 2.4h
[INFO]: 2024-04-11 22:05:36,786 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0733, cls: 0.0421, iou: 0.0822), misc (ry: 0.16, z: 0.31), dt: 0.66, eta: 2.4h
[INFO]: 2024-04-11 22:08:01,767 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0681, cls: 0.0417, iou: 0.0828), misc (ry: 0.16, z: 0.34), dt: 0.66, eta: 2.3h
[INFO]: 2024-04-11 22:10:27,703 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0705, cls: 0.0438, iou: 0.0833), misc (ry: 0.16, z: 0.33), dt: 0.66, eta: 2.3h
[INFO]: 2024-04-11 22:12:51,917 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0656, cls: 0.0395, iou: 0.0799), misc (ry: 0.15, z: 0.33), dt: 0.66, eta: 2.2h
[INFO]: 2024-04-11 22:15:23,054 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0706, cls: 0.0405, iou: 0.0799), misc (ry: 0.15, z: 0.35), dt: 0.66, eta: 2.2h
[INFO]: 2024-04-11 22:17:49,393 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0671, cls: 0.0405, iou: 0.0817), misc (ry: 0.15, z: 0.33), dt: 0.65, eta: 2.1h
[INFO]: 2024-04-11 22:20:17,199 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0690, cls: 0.0425, iou: 0.0800), misc (ry: 0.16, z: 0.32), dt: 0.65, eta: 2.1h
[INFO]: 2024-04-11 22:22:42,934 iter: 38750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0740, cls: 0.0452, iou: 0.0847), misc (ry: 0.16, z: 0.32), dt: 0.65, eta: 2.0h
[INFO]: 2024-04-11 22:25:07,208 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0677, cls: 0.0400, iou: 0.0774), misc (ry: 0.15, z: 0.35), dt: 0.65, eta: 2.0h
[INFO]: 2024-04-11 22:27:34,421 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0661, cls: 0.0415, iou: 0.0780), misc (ry: 0.15, z: 0.31), dt: 0.65, eta: 1.9h
[INFO]: 2024-04-11 22:30:03,973 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0601, cls: 0.0401, iou: 0.0770), misc (ry: 0.14, z: 0.32), dt: 0.65, eta: 1.9h
[INFO]: 2024-04-11 22:32:37,145 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0606, cls: 0.0380, iou: 0.0759), misc (ry: 0.14, z: 0.32), dt: 0.65, eta: 1.9h
[INFO]: 2024-04-11 22:35:05,634 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0683, cls: 0.0423, iou: 0.0803), misc (ry: 0.15, z: 0.32), dt: 0.65, eta: 1.8h
[INFO]: 2024-04-11 22:43:51,846 test_iter 40000 2d car --> easy: 0.8487, mod: 0.8105, hard: 0.6590
[INFO]: 2024-04-11 22:43:51,847 test_iter 40000 gr car --> easy: 0.1798, mod: 0.1435, hard: 0.1629
[INFO]: 2024-04-11 22:43:51,848 test_iter 40000 3d car --> easy: 0.1285, mod: 0.1109, hard: 0.0870
[INFO]: 2024-04-11 22:43:51,848 test_iter 40000 2d pedestrian --> easy: 0.7397, mod: 0.5890, hard: 0.5062
[INFO]: 2024-04-11 22:43:51,849 test_iter 40000 gr pedestrian --> easy: 0.1086, mod: 0.1098, hard: 0.1038
[INFO]: 2024-04-11 22:43:51,849 test_iter 40000 3d pedestrian --> easy: 0.1058, mod: 0.1033, hard: 0.1016
[INFO]: 2024-04-11 22:43:51,850 test_iter 40000 2d cyclist --> easy: 0.5381, mod: 0.4112, hard: 0.3608
[INFO]: 2024-04-11 22:43:51,850 test_iter 40000 gr cyclist --> easy: 0.0173, mod: 0.0105, hard: 0.0111
[INFO]: 2024-04-11 22:43:51,851 test_iter 40000 3d cyclist --> easy: 0.0131, mod: 0.0088, hard: 0.0090
[INFO]: 2024-04-11 22:46:18,991 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0598, cls: 0.0404, iou: 0.0738), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.8h
[INFO]: 2024-04-11 22:48:46,116 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0620, cls: 0.0418, iou: 0.0746), misc (ry: 0.14, z: 0.30), dt: 0.66, eta: 1.8h
[INFO]: 2024-04-11 22:51:14,006 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0600, cls: 0.0395, iou: 0.0755), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.7h
[INFO]: 2024-04-11 22:53:40,159 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0648, cls: 0.0402, iou: 0.0748), misc (ry: 0.15, z: 0.31), dt: 0.66, eta: 1.7h
[INFO]: 2024-04-11 22:56:11,243 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0557, cls: 0.0410, iou: 0.0725), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.6h
[INFO]: 2024-04-11 22:58:38,279 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0552, cls: 0.0391, iou: 0.0726), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.6h
[INFO]: 2024-04-11 23:01:05,135 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0538, cls: 0.0384, iou: 0.0715), misc (ry: 0.13, z: 0.29), dt: 0.66, eta: 1.5h
[INFO]: 2024-04-11 23:03:33,865 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0536, cls: 0.0375, iou: 0.0705), misc (ry: 0.13, z: 0.29), dt: 0.66, eta: 1.5h
[INFO]: 2024-04-11 23:06:05,674 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0401, iou: 0.0706), misc (ry: 0.13, z: 0.29), dt: 0.66, eta: 1.4h
[INFO]: 2024-04-11 23:08:36,075 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0573, cls: 0.0394, iou: 0.0734), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.4h
[INFO]: 2024-04-11 23:11:06,880 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0559, cls: 0.0399, iou: 0.0729), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.3h
[INFO]: 2024-04-11 23:13:34,223 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0573, cls: 0.0415, iou: 0.0710), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 1.3h
[INFO]: 2024-04-11 23:16:03,006 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0569, cls: 0.0387, iou: 0.0699), misc (ry: 0.13, z: 0.29), dt: 0.66, eta: 1.2h
[INFO]: 2024-04-11 23:18:34,236 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0574, cls: 0.0386, iou: 0.0711), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 1.2h
[INFO]: 2024-04-11 23:21:04,369 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0538, cls: 0.0402, iou: 0.0700), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 1.1h
[INFO]: 2024-04-11 23:23:34,989 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0373, iou: 0.0662), misc (ry: 0.13, z: 0.26), dt: 0.66, eta: 1.1h
[INFO]: 2024-04-11 23:26:02,114 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0556, cls: 0.0397, iou: 0.0681), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 1.1h
[INFO]: 2024-04-11 23:28:33,954 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0403, iou: 0.0690), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 1.0h
[INFO]: 2024-04-11 23:31:30,910 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0587, cls: 0.0415, iou: 0.0715), misc (ry: 0.14, z: 0.29), dt: 0.66, eta: 57.6m
[INFO]: 2024-04-11 23:34:47,527 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0492, cls: 0.0389, iou: 0.0664), misc (ry: 0.12, z: 0.28), dt: 0.66, eta: 54.9m
[INFO]: 2024-04-11 23:38:04,106 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0514, cls: 0.0397, iou: 0.0663), misc (ry: 0.14, z: 0.26), dt: 0.66, eta: 52.2m
[INFO]: 2024-04-11 23:41:20,548 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0565, cls: 0.0388, iou: 0.0674), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 49.6m
[INFO]: 2024-04-11 23:44:35,917 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0468, cls: 0.0365, iou: 0.0633), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 46.8m
[INFO]: 2024-04-11 23:47:16,693 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0526, cls: 0.0386, iou: 0.0670), misc (ry: 0.14, z: 0.28), dt: 0.66, eta: 44.1m
[INFO]: 2024-04-11 23:50:31,848 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0489, cls: 0.0392, iou: 0.0657), misc (ry: 0.13, z: 0.27), dt: 0.66, eta: 41.4m
[INFO]: 2024-04-11 23:53:49,231 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0368, iou: 0.0630), misc (ry: 0.13, z: 0.27), dt: 0.66, eta: 38.7m
[INFO]: 2024-04-11 23:57:05,289 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0496, cls: 0.0377, iou: 0.0646), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 35.9m
[INFO]: 2024-04-12 00:00:22,238 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0512, cls: 0.0395, iou: 0.0652), misc (ry: 0.13, z: 0.28), dt: 0.66, eta: 33.2m
[INFO]: 2024-04-12 00:03:37,795 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0461, cls: 0.0368, iou: 0.0647), misc (ry: 0.12, z: 0.26), dt: 0.66, eta: 30.5m
[INFO]: 2024-04-12 00:06:55,762 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0483, cls: 0.0395, iou: 0.0649), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 27.7m
[INFO]: 2024-04-12 00:10:10,751 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0410, cls: 0.0368, iou: 0.0594), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 25.0m
[INFO]: 2024-04-12 00:13:26,374 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0481, cls: 0.0392, iou: 0.0629), misc (ry: 0.13, z: 0.25), dt: 0.67, eta: 22.2m
[INFO]: 2024-04-12 00:16:42,386 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0476, cls: 0.0380, iou: 0.0624), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 19.5m
[INFO]: 2024-04-12 00:19:58,998 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0369, iou: 0.0597), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 16.7m
[INFO]: 2024-04-12 00:23:15,935 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0464, cls: 0.0385, iou: 0.0614), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 13.9m
[INFO]: 2024-04-12 00:26:32,545 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0474, cls: 0.0386, iou: 0.0631), misc (ry: 0.13, z: 0.26), dt: 0.67, eta: 11.2m
[INFO]: 2024-04-12 00:29:09,145 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0454, cls: 0.0367, iou: 0.0590), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 8.4m
[INFO]: 2024-04-12 00:31:40,746 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0413, cls: 0.0356, iou: 0.0586), misc (ry: 0.12, z: 0.24), dt: 0.67, eta: 5.6m
[INFO]: 2024-04-12 00:34:11,451 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0433, cls: 0.0375, iou: 0.0605), misc (ry: 0.12, z: 0.25), dt: 0.67, eta: 2.8m
[INFO]: 2024-04-12 00:36:40,430 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0486, cls: 0.0385, iou: 0.0635), misc (ry: 0.12, z: 0.26), dt: 0.67, eta: 0.7s
[INFO]: 2024-04-12 00:45:24,984 test_iter 50000 2d car --> easy: 0.8446, mod: 0.8155, hard: 0.6600
[INFO]: 2024-04-12 00:45:24,985 test_iter 50000 gr car --> easy: 0.1770, mod: 0.1434, hard: 0.1629
[INFO]: 2024-04-12 00:45:24,986 test_iter 50000 3d car --> easy: 0.1246, mod: 0.1085, hard: 0.1315
[INFO]: 2024-04-12 00:45:24,986 test_iter 50000 2d pedestrian --> easy: 0.7326, mod: 0.5879, hard: 0.5050
[INFO]: 2024-04-12 00:45:24,987 test_iter 50000 gr pedestrian --> easy: 0.0382, mod: 0.0414, hard: 0.0315
[INFO]: 2024-04-12 00:45:24,987 test_iter 50000 3d pedestrian --> easy: 0.0329, mod: 0.0319, hard: 0.0279
[INFO]: 2024-04-12 00:45:24,988 test_iter 50000 2d cyclist --> easy: 0.5852, mod: 0.4365, hard: 0.3800
[INFO]: 2024-04-12 00:45:24,989 test_iter 50000 gr cyclist --> easy: 0.0231, mod: 0.0130, hard: 0.0130
[INFO]: 2024-04-12 00:45:24,989 test_iter 50000 3d cyclist --> easy: 0.0210, mod: 0.0130, hard: 0.0130
