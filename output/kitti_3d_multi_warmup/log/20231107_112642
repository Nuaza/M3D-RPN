[INFO]: 2023-11-07 11:26:42,727 Preloading imdb.
[INFO]: 2023-11-07 11:26:44,151 weighted respectively as 1.05 and 0.00
[INFO]: 2023-11-07 11:26:44,151 Found 3534 foreground and 178 empty images
[INFO]: 2023-11-07 11:26:46,825 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-11-07 11:26:46,832 conf: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2023-11-07 11:26:47,146 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): PConv(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-11-07 11:29:04,696 iter: 250, acc (bg: 0.97, fg: 0.36, iou: 0.60), loss (bbox_3d: 2.4270, cls: 0.6764, iou: 0.5190), misc (ry: 1.58, z: 2.93), dt: 0.55, eta: 7.6h
[INFO]: 2023-11-07 11:31:20,949 iter: 500, acc (bg: 0.99, fg: 0.72, iou: 0.66), loss (bbox_3d: 1.6519, cls: 0.3298, iou: 0.4255), misc (ry: 1.34, z: 2.01), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-07 11:33:39,136 iter: 750, acc (bg: 0.99, fg: 0.79, iou: 0.70), loss (bbox_3d: 1.2827, cls: 0.2569, iou: 0.3606), misc (ry: 1.13, z: 1.77), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-07 11:35:57,498 iter: 1000, acc (bg: 0.99, fg: 0.81, iou: 0.71), loss (bbox_3d: 1.2602, cls: 0.2574, iou: 0.3516), misc (ry: 1.07, z: 1.67), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-07 11:38:12,687 iter: 1250, acc (bg: 0.99, fg: 0.84, iou: 0.74), loss (bbox_3d: 1.1636, cls: 0.2068, iou: 0.3154), misc (ry: 1.00, z: 1.54), dt: 0.55, eta: 7.4h
[INFO]: 2023-11-07 11:40:28,088 iter: 1500, acc (bg: 0.99, fg: 0.84, iou: 0.74), loss (bbox_3d: 1.1306, cls: 0.2246, iou: 0.3113), misc (ry: 1.03, z: 1.59), dt: 0.55, eta: 7.4h
[INFO]: 2023-11-07 11:42:45,024 iter: 1750, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0297, cls: 0.2028, iou: 0.2994), misc (ry: 0.94, z: 1.47), dt: 0.55, eta: 7.3h
[INFO]: 2023-11-07 11:45:01,559 iter: 2000, acc (bg: 1.00, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.9106, cls: 0.1704, iou: 0.2717), misc (ry: 0.87, z: 1.27), dt: 0.55, eta: 7.3h
[INFO]: 2023-11-07 11:47:18,061 iter: 2250, acc (bg: 1.00, fg: 0.88, iou: 0.78), loss (bbox_3d: 0.8570, cls: 0.1697, iou: 0.2585), misc (ry: 0.85, z: 1.17), dt: 0.55, eta: 7.3h
[INFO]: 2023-11-07 11:49:36,908 iter: 2500, acc (bg: 1.00, fg: 0.87, iou: 0.78), loss (bbox_3d: 0.9000, cls: 0.1678, iou: 0.2624), misc (ry: 0.81, z: 1.29), dt: 0.55, eta: 7.2h
[INFO]: 2023-11-07 11:51:51,113 iter: 2750, acc (bg: 1.00, fg: 0.91, iou: 0.79), loss (bbox_3d: 0.8150, cls: 0.1409, iou: 0.2471), misc (ry: 0.74, z: 1.17), dt: 0.55, eta: 7.2h
[INFO]: 2023-11-07 11:54:08,704 iter: 3000, acc (bg: 1.00, fg: 0.87, iou: 0.79), loss (bbox_3d: 0.8062, cls: 0.1749, iou: 0.2487), misc (ry: 0.78, z: 1.20), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-07 11:56:25,945 iter: 3250, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7620, cls: 0.1499, iou: 0.2348), misc (ry: 0.76, z: 1.11), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-07 11:58:39,730 iter: 3500, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7116, cls: 0.1486, iou: 0.2348), misc (ry: 0.70, z: 1.06), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-07 12:00:53,564 iter: 3750, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.7232, cls: 0.1312, iou: 0.2235), misc (ry: 0.72, z: 1.02), dt: 0.55, eta: 7.0h
[INFO]: 2023-11-07 12:03:10,378 iter: 4000, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7334, cls: 0.1406, iou: 0.2244), misc (ry: 0.74, z: 1.02), dt: 0.55, eta: 7.0h
[INFO]: 2023-11-07 12:05:24,143 iter: 4250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6910, cls: 0.1251, iou: 0.2153), misc (ry: 0.72, z: 1.02), dt: 0.55, eta: 6.9h
[INFO]: 2023-11-07 12:07:38,664 iter: 4500, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.6041, cls: 0.1162, iou: 0.2011), misc (ry: 0.68, z: 0.95), dt: 0.54, eta: 6.9h
[INFO]: 2023-11-07 12:09:55,806 iter: 4750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6027, cls: 0.1219, iou: 0.2081), misc (ry: 0.62, z: 0.94), dt: 0.55, eta: 6.9h
[INFO]: 2023-11-07 12:12:09,809 iter: 5000, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5930, cls: 0.1156, iou: 0.2003), misc (ry: 0.61, z: 0.99), dt: 0.54, eta: 6.8h
[INFO]: 2023-11-07 12:14:23,586 iter: 5250, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6790, cls: 0.1284, iou: 0.2118), misc (ry: 0.73, z: 1.02), dt: 0.54, eta: 6.8h
[INFO]: 2023-11-07 12:16:38,207 iter: 5500, acc (bg: 1.00, fg: 0.94, iou: 0.82), loss (bbox_3d: 0.5545, cls: 0.1075, iou: 0.1998), misc (ry: 0.56, z: 1.01), dt: 0.54, eta: 6.7h
[INFO]: 2023-11-07 12:18:54,827 iter: 5750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5534, cls: 0.1120, iou: 0.1974), misc (ry: 0.59, z: 0.85), dt: 0.54, eta: 6.7h
[INFO]: 2023-11-07 12:21:08,074 iter: 6000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5580, cls: 0.1019, iou: 0.1926), misc (ry: 0.55, z: 0.97), dt: 0.54, eta: 6.6h
[INFO]: 2023-11-07 12:23:25,042 iter: 6250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5519, cls: 0.1159, iou: 0.1982), misc (ry: 0.59, z: 0.89), dt: 0.54, eta: 6.6h
[INFO]: 2023-11-07 12:25:41,523 iter: 6500, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5566, cls: 0.1070, iou: 0.1933), misc (ry: 0.54, z: 0.99), dt: 0.54, eta: 6.6h
[INFO]: 2023-11-07 12:27:55,783 iter: 6750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5294, cls: 0.1051, iou: 0.1911), misc (ry: 0.62, z: 0.92), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-07 12:30:10,360 iter: 7000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5442, cls: 0.1088, iou: 0.1942), misc (ry: 0.54, z: 0.92), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-07 12:32:25,467 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4265, cls: 0.0952, iou: 0.1805), misc (ry: 0.45, z: 0.79), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-07 12:34:41,782 iter: 7500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4499, cls: 0.0996, iou: 0.1829), misc (ry: 0.50, z: 0.79), dt: 0.54, eta: 6.4h
[INFO]: 2023-11-07 12:36:56,378 iter: 7750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4873, cls: 0.1014, iou: 0.1828), misc (ry: 0.56, z: 0.82), dt: 0.54, eta: 6.4h
[INFO]: 2023-11-07 12:39:11,032 iter: 8000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4848, cls: 0.1003, iou: 0.1850), misc (ry: 0.53, z: 0.79), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-07 12:41:27,178 iter: 8250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4360, cls: 0.0942, iou: 0.1789), misc (ry: 0.48, z: 0.84), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-07 12:43:42,545 iter: 8500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4854, cls: 0.1029, iou: 0.1889), misc (ry: 0.53, z: 0.83), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-07 12:45:59,340 iter: 8750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4221, cls: 0.0890, iou: 0.1744), misc (ry: 0.49, z: 0.79), dt: 0.54, eta: 6.2h
[INFO]: 2023-11-07 12:48:16,679 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4160, cls: 0.0909, iou: 0.1743), misc (ry: 0.48, z: 0.75), dt: 0.54, eta: 6.2h
[INFO]: 2023-11-07 12:50:32,796 iter: 9250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4465, cls: 0.0932, iou: 0.1797), misc (ry: 0.49, z: 0.85), dt: 0.54, eta: 6.2h
[INFO]: 2023-11-07 12:52:47,235 iter: 9500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4356, cls: 0.0918, iou: 0.1765), misc (ry: 0.45, z: 0.85), dt: 0.54, eta: 6.1h
[INFO]: 2023-11-07 12:55:02,791 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4106, cls: 0.0895, iou: 0.1764), misc (ry: 0.42, z: 0.83), dt: 0.54, eta: 6.1h
[INFO]: 2023-11-07 12:57:15,846 iter: 10000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3910, cls: 0.0855, iou: 0.1680), misc (ry: 0.43, z: 0.73), dt: 0.54, eta: 6.0h
[INFO]: 2023-11-07 12:59:29,540 testing 1000/3769, dt: 0.133, eta: 6.2m
[INFO]: 2023-11-07 13:01:45,063 testing 2000/3769, dt: 0.134, eta: 4.0m
[INFO]: 2023-11-07 13:04:01,139 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-11-07 13:05:52,822 test_iter 10000 2d car --> easy: 0.8074, mod: 0.7360, hard: 0.6322
[INFO]: 2023-11-07 13:05:52,823 test_iter 10000 gr car --> easy: 0.0820, mod: 0.0670, hard: 0.0655
[INFO]: 2023-11-07 13:05:52,824 test_iter 10000 3d car --> easy: 0.0670, mod: 0.0579, hard: 0.0519
[INFO]: 2023-11-07 13:05:52,824 test_iter 10000 2d pedestrian --> easy: 0.5751, mod: 0.4974, hard: 0.4185
[INFO]: 2023-11-07 13:05:52,825 test_iter 10000 gr pedestrian --> easy: 0.0109, mod: 0.0137, hard: 0.0138
[INFO]: 2023-11-07 13:05:52,825 test_iter 10000 3d pedestrian --> easy: 0.0103, mod: 0.0115, hard: 0.0106
[INFO]: 2023-11-07 13:05:52,826 test_iter 10000 2d cyclist --> easy: 0.3544, mod: 0.2425, hard: 0.2380
[INFO]: 2023-11-07 13:05:52,827 test_iter 10000 gr cyclist --> easy: 0.0022, mod: 0.0015, hard: 0.0015
[INFO]: 2023-11-07 13:05:52,827 test_iter 10000 3d cyclist --> easy: 0.0015, mod: 0.0015, hard: 0.0015
[INFO]: 2023-11-07 13:08:08,148 iter: 10250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3453, cls: 0.0796, iou: 0.1676), misc (ry: 0.39, z: 0.74), dt: 0.59, eta: 6.6h
[INFO]: 2023-11-07 13:10:23,536 iter: 10500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3940, cls: 0.0829, iou: 0.1657), misc (ry: 0.42, z: 0.79), dt: 0.59, eta: 6.5h
[INFO]: 2023-11-07 13:12:40,048 iter: 10750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4069, cls: 0.0861, iou: 0.1665), misc (ry: 0.50, z: 0.73), dt: 0.59, eta: 6.4h
[INFO]: 2023-11-07 13:14:55,270 iter: 11000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3867, cls: 0.0829, iou: 0.1636), misc (ry: 0.49, z: 0.74), dt: 0.59, eta: 6.4h
[INFO]: 2023-11-07 13:17:10,712 iter: 11250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3630, cls: 0.0802, iou: 0.1603), misc (ry: 0.44, z: 0.69), dt: 0.59, eta: 6.3h
[INFO]: 2023-11-07 13:19:28,767 iter: 11500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3718, cls: 0.0907, iou: 0.1673), misc (ry: 0.40, z: 0.73), dt: 0.59, eta: 6.3h
[INFO]: 2023-11-07 13:21:42,312 iter: 11750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3266, cls: 0.0782, iou: 0.1593), misc (ry: 0.36, z: 0.65), dt: 0.59, eta: 6.2h
[INFO]: 2023-11-07 13:23:55,332 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3466, cls: 0.0727, iou: 0.1554), misc (ry: 0.41, z: 0.73), dt: 0.59, eta: 6.2h
[INFO]: 2023-11-07 13:26:13,168 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3063, cls: 0.0743, iou: 0.1549), misc (ry: 0.36, z: 0.72), dt: 0.59, eta: 6.1h
[INFO]: 2023-11-07 13:28:26,527 iter: 12500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3008, cls: 0.0761, iou: 0.1517), misc (ry: 0.34, z: 0.65), dt: 0.58, eta: 6.1h
[INFO]: 2023-11-07 13:30:42,012 iter: 12750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3190, cls: 0.0803, iou: 0.1574), misc (ry: 0.40, z: 0.66), dt: 0.58, eta: 6.0h
[INFO]: 2023-11-07 13:32:57,697 iter: 13000, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3200, cls: 0.0825, iou: 0.1582), misc (ry: 0.38, z: 0.66), dt: 0.58, eta: 6.0h
[INFO]: 2023-11-07 13:35:12,053 iter: 13250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3467, cls: 0.0815, iou: 0.1620), misc (ry: 0.44, z: 0.73), dt: 0.58, eta: 5.9h
[INFO]: 2023-11-07 13:37:27,442 iter: 13500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.3083, cls: 0.0720, iou: 0.1572), misc (ry: 0.36, z: 0.65), dt: 0.58, eta: 5.9h
[INFO]: 2023-11-07 13:39:44,065 iter: 13750, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2913, cls: 0.0712, iou: 0.1522), misc (ry: 0.36, z: 0.68), dt: 0.58, eta: 5.8h
[INFO]: 2023-11-07 13:41:58,798 iter: 14000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2824, cls: 0.0726, iou: 0.1517), misc (ry: 0.34, z: 0.64), dt: 0.58, eta: 5.8h
[INFO]: 2023-11-07 13:44:12,141 iter: 14250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3007, cls: 0.0727, iou: 0.1480), misc (ry: 0.36, z: 0.69), dt: 0.58, eta: 5.7h
[INFO]: 2023-11-07 13:46:26,786 iter: 14500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2920, cls: 0.0692, iou: 0.1479), misc (ry: 0.32, z: 0.72), dt: 0.58, eta: 5.7h
[INFO]: 2023-11-07 13:48:39,701 iter: 14750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3173, cls: 0.0753, iou: 0.1541), misc (ry: 0.37, z: 0.68), dt: 0.58, eta: 5.7h
[INFO]: 2023-11-07 13:50:53,337 iter: 15000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3142, cls: 0.0757, iou: 0.1556), misc (ry: 0.35, z: 0.69), dt: 0.58, eta: 5.6h
[INFO]: 2023-11-07 13:53:06,706 iter: 15250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2591, cls: 0.0714, iou: 0.1488), misc (ry: 0.28, z: 0.64), dt: 0.58, eta: 5.6h
[INFO]: 2023-11-07 13:55:18,376 iter: 15500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2387, cls: 0.0687, iou: 0.1448), misc (ry: 0.31, z: 0.61), dt: 0.57, eta: 5.5h
[INFO]: 2023-11-07 13:57:31,884 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2661, cls: 0.0683, iou: 0.1438), misc (ry: 0.34, z: 0.60), dt: 0.57, eta: 5.5h
[INFO]: 2023-11-07 13:59:43,432 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2605, cls: 0.0665, iou: 0.1445), misc (ry: 0.35, z: 0.60), dt: 0.57, eta: 5.4h
[INFO]: 2023-11-07 14:01:57,173 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2685, cls: 0.0667, iou: 0.1401), misc (ry: 0.34, z: 0.63), dt: 0.57, eta: 5.4h
[INFO]: 2023-11-07 14:04:10,922 iter: 16500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2369, cls: 0.0676, iou: 0.1374), misc (ry: 0.28, z: 0.59), dt: 0.57, eta: 5.3h
[INFO]: 2023-11-07 14:06:23,755 iter: 16750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2549, cls: 0.0640, iou: 0.1432), misc (ry: 0.34, z: 0.58), dt: 0.57, eta: 5.3h
[INFO]: 2023-11-07 14:08:38,914 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2396, cls: 0.0669, iou: 0.1402), misc (ry: 0.31, z: 0.53), dt: 0.57, eta: 5.2h
[INFO]: 2023-11-07 14:10:54,830 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2483, cls: 0.0668, iou: 0.1386), misc (ry: 0.32, z: 0.56), dt: 0.57, eta: 5.2h
[INFO]: 2023-11-07 14:13:07,635 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2630, cls: 0.0666, iou: 0.1416), misc (ry: 0.36, z: 0.60), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-07 14:15:20,261 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2318, cls: 0.0628, iou: 0.1378), misc (ry: 0.31, z: 0.61), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-07 14:17:37,108 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2317, cls: 0.0667, iou: 0.1391), misc (ry: 0.30, z: 0.59), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-07 14:19:51,224 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2386, cls: 0.0661, iou: 0.1429), misc (ry: 0.30, z: 0.64), dt: 0.57, eta: 5.0h
[INFO]: 2023-11-07 14:22:03,439 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2709, cls: 0.0637, iou: 0.1430), misc (ry: 0.34, z: 0.70), dt: 0.57, eta: 5.0h
[INFO]: 2023-11-07 14:24:17,975 iter: 18750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2508, cls: 0.0641, iou: 0.1379), misc (ry: 0.36, z: 0.63), dt: 0.57, eta: 4.9h
[INFO]: 2023-11-07 14:26:33,978 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2327, cls: 0.0631, iou: 0.1353), misc (ry: 0.32, z: 0.63), dt: 0.57, eta: 4.9h
[INFO]: 2023-11-07 14:28:49,264 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2588, cls: 0.0647, iou: 0.1412), misc (ry: 0.34, z: 0.60), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-07 14:31:03,053 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2220, cls: 0.0615, iou: 0.1355), misc (ry: 0.33, z: 0.55), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-07 14:33:16,741 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2169, cls: 0.0623, iou: 0.1333), misc (ry: 0.29, z: 0.60), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-07 14:35:28,980 iter: 20000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1927, cls: 0.0533, iou: 0.1290), misc (ry: 0.28, z: 0.59), dt: 0.57, eta: 4.7h
[INFO]: 2023-11-07 14:37:44,380 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-11-07 14:40:02,449 testing 2000/3769, dt: 0.137, eta: 4.0m
[INFO]: 2023-11-07 14:42:18,904 testing 3000/3769, dt: 0.137, eta: 1.7m
[INFO]: 2023-11-07 14:44:12,814 test_iter 20000 2d car --> easy: 0.9500, mod: 0.8498, hard: 0.6904
[INFO]: 2023-11-07 14:44:12,815 test_iter 20000 gr car --> easy: 0.1328, mod: 0.1075, hard: 0.0931
[INFO]: 2023-11-07 14:44:12,815 test_iter 20000 3d car --> easy: 0.1039, mod: 0.0722, hard: 0.0681
[INFO]: 2023-11-07 14:44:12,816 test_iter 20000 2d pedestrian --> easy: 0.6802, mod: 0.5926, hard: 0.5089
[INFO]: 2023-11-07 14:44:12,817 test_iter 20000 gr pedestrian --> easy: 0.0186, mod: 0.0208, hard: 0.0145
[INFO]: 2023-11-07 14:44:12,817 test_iter 20000 3d pedestrian --> easy: 0.0168, mod: 0.0120, hard: 0.0126
[INFO]: 2023-11-07 14:44:12,818 test_iter 20000 2d cyclist --> easy: 0.5180, mod: 0.3416, hard: 0.3385
[INFO]: 2023-11-07 14:44:12,819 test_iter 20000 gr cyclist --> easy: 0.0100, mod: 0.0054, hard: 0.0056
[INFO]: 2023-11-07 14:44:12,819 test_iter 20000 3d cyclist --> easy: 0.0078, mod: 0.0041, hard: 0.0041
[INFO]: 2023-11-07 14:46:26,833 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2079, cls: 0.0610, iou: 0.1307), misc (ry: 0.30, z: 0.54), dt: 0.59, eta: 4.9h
[INFO]: 2023-11-07 14:48:40,131 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1921, cls: 0.0578, iou: 0.1259), misc (ry: 0.27, z: 0.51), dt: 0.59, eta: 4.8h
[INFO]: 2023-11-07 14:50:51,309 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1811, cls: 0.0592, iou: 0.1249), misc (ry: 0.26, z: 0.49), dt: 0.59, eta: 4.8h
[INFO]: 2023-11-07 14:53:07,139 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1842, cls: 0.0565, iou: 0.1275), misc (ry: 0.27, z: 0.51), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-07 14:55:22,376 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1871, cls: 0.0564, iou: 0.1294), misc (ry: 0.28, z: 0.51), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-07 14:57:37,764 iter: 21500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1661, cls: 0.0539, iou: 0.1217), misc (ry: 0.26, z: 0.47), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-07 14:59:53,486 iter: 21750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1495, cls: 0.0558, iou: 0.1207), misc (ry: 0.24, z: 0.44), dt: 0.59, eta: 4.6h
[INFO]: 2023-11-07 15:02:05,476 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1656, cls: 0.0537, iou: 0.1216), misc (ry: 0.25, z: 0.52), dt: 0.59, eta: 4.6h
[INFO]: 2023-11-07 15:04:19,320 iter: 22250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1773, cls: 0.0542, iou: 0.1260), misc (ry: 0.25, z: 0.52), dt: 0.59, eta: 4.5h
[INFO]: 2023-11-07 15:06:32,795 iter: 22500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1726, cls: 0.0557, iou: 0.1231), misc (ry: 0.24, z: 0.50), dt: 0.59, eta: 4.5h
[INFO]: 2023-11-07 15:08:48,347 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1622, cls: 0.0543, iou: 0.1203), misc (ry: 0.24, z: 0.50), dt: 0.59, eta: 4.4h
[INFO]: 2023-11-07 15:11:03,506 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1680, cls: 0.0525, iou: 0.1220), misc (ry: 0.25, z: 0.47), dt: 0.59, eta: 4.4h
[INFO]: 2023-11-07 15:13:15,875 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1820, cls: 0.0504, iou: 0.1205), misc (ry: 0.27, z: 0.51), dt: 0.58, eta: 4.3h
[INFO]: 2023-11-07 15:15:28,343 iter: 23500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1537, cls: 0.0496, iou: 0.1134), misc (ry: 0.22, z: 0.48), dt: 0.58, eta: 4.3h
[INFO]: 2023-11-07 15:17:44,151 iter: 23750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1550, cls: 0.0530, iou: 0.1200), misc (ry: 0.23, z: 0.48), dt: 0.58, eta: 4.3h
[INFO]: 2023-11-07 15:19:59,266 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1603, cls: 0.0516, iou: 0.1181), misc (ry: 0.24, z: 0.48), dt: 0.58, eta: 4.2h
[INFO]: 2023-11-07 15:22:13,390 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1624, cls: 0.0520, iou: 0.1172), misc (ry: 0.27, z: 0.45), dt: 0.58, eta: 4.2h
[INFO]: 2023-11-07 15:24:25,560 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1574, cls: 0.0526, iou: 0.1147), misc (ry: 0.27, z: 0.48), dt: 0.58, eta: 4.1h
[INFO]: 2023-11-07 15:26:38,550 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1589, cls: 0.0506, iou: 0.1124), misc (ry: 0.27, z: 0.46), dt: 0.58, eta: 4.1h
[INFO]: 2023-11-07 15:28:54,178 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1898, cls: 0.0541, iou: 0.1232), misc (ry: 0.31, z: 0.52), dt: 0.58, eta: 4.0h
[INFO]: 2023-11-07 15:31:09,182 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1831, cls: 0.0556, iou: 0.1224), misc (ry: 0.27, z: 0.54), dt: 0.58, eta: 4.0h
[INFO]: 2023-11-07 15:33:20,837 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1513, cls: 0.0516, iou: 0.1122), misc (ry: 0.23, z: 0.47), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-07 15:35:35,643 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1652, cls: 0.0529, iou: 0.1188), misc (ry: 0.26, z: 0.48), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-07 15:37:50,959 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1601, cls: 0.0492, iou: 0.1158), misc (ry: 0.24, z: 0.55), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-07 15:40:04,531 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1390, cls: 0.0484, iou: 0.1097), misc (ry: 0.22, z: 0.50), dt: 0.58, eta: 3.8h
[INFO]: 2023-11-07 15:42:16,032 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1513, cls: 0.0494, iou: 0.1142), misc (ry: 0.25, z: 0.49), dt: 0.58, eta: 3.8h
[INFO]: 2023-11-07 15:44:28,350 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1458, cls: 0.0474, iou: 0.1138), misc (ry: 0.24, z: 0.45), dt: 0.58, eta: 3.7h
[INFO]: 2023-11-07 15:46:44,883 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1491, cls: 0.0515, iou: 0.1147), misc (ry: 0.24, z: 0.45), dt: 0.58, eta: 3.7h
[INFO]: 2023-11-07 15:49:01,895 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1444, cls: 0.0491, iou: 0.1101), misc (ry: 0.22, z: 0.45), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-07 15:51:21,743 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1252, cls: 0.0448, iou: 0.1087), misc (ry: 0.19, z: 0.44), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-07 15:53:35,717 iter: 27750, acc (bg: 1.00, fg: 0.99, iou: 0.90), loss (bbox_3d: 0.1292, cls: 0.0430, iou: 0.1043), misc (ry: 0.20, z: 0.43), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-07 15:55:49,053 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1362, cls: 0.0444, iou: 0.1068), misc (ry: 0.23, z: 0.47), dt: 0.58, eta: 3.5h
[INFO]: 2023-11-07 15:58:00,009 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1609, cls: 0.0481, iou: 0.1113), misc (ry: 0.28, z: 0.47), dt: 0.58, eta: 3.5h
[INFO]: 2023-11-07 16:00:14,950 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1576, cls: 0.0486, iou: 0.1134), misc (ry: 0.27, z: 0.49), dt: 0.58, eta: 3.4h
[INFO]: 2023-11-07 16:02:29,243 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1118, cls: 0.0447, iou: 0.1056), misc (ry: 0.19, z: 0.41), dt: 0.58, eta: 3.4h
[INFO]: 2023-11-07 16:04:41,221 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1392, cls: 0.0438, iou: 0.1086), misc (ry: 0.23, z: 0.48), dt: 0.57, eta: 3.4h
[INFO]: 2023-11-07 16:06:52,239 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1163, cls: 0.0439, iou: 0.1046), misc (ry: 0.20, z: 0.41), dt: 0.57, eta: 3.3h
[INFO]: 2023-11-07 16:09:04,145 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1136, cls: 0.0454, iou: 0.1015), misc (ry: 0.19, z: 0.41), dt: 0.57, eta: 3.3h
[INFO]: 2023-11-07 16:11:18,093 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1309, cls: 0.0489, iou: 0.1068), misc (ry: 0.23, z: 0.40), dt: 0.57, eta: 3.2h
[INFO]: 2023-11-07 16:13:31,026 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1074, cls: 0.0438, iou: 0.1005), misc (ry: 0.18, z: 0.38), dt: 0.57, eta: 3.2h
[INFO]: 2023-11-07 16:15:44,509 testing 1000/3769, dt: 0.133, eta: 6.1m
[INFO]: 2023-11-07 16:17:57,188 testing 2000/3769, dt: 0.133, eta: 3.9m
[INFO]: 2023-11-07 16:20:10,247 testing 3000/3769, dt: 0.133, eta: 1.7m
[INFO]: 2023-11-07 16:22:01,084 test_iter 30000 2d car --> easy: 0.9311, mod: 0.8502, hard: 0.6878
[INFO]: 2023-11-07 16:22:01,085 test_iter 30000 gr car --> easy: 0.2010, mod: 0.1603, hard: 0.1436
[INFO]: 2023-11-07 16:22:01,086 test_iter 30000 3d car --> easy: 0.1192, mod: 0.1358, hard: 0.1192
[INFO]: 2023-11-07 16:22:01,086 test_iter 30000 2d pedestrian --> easy: 0.6485, mod: 0.5684, hard: 0.4897
[INFO]: 2023-11-07 16:22:01,087 test_iter 30000 gr pedestrian --> easy: 0.0644, mod: 0.0621, hard: 0.0560
[INFO]: 2023-11-07 16:22:01,088 test_iter 30000 3d pedestrian --> easy: 0.0615, mod: 0.0545, hard: 0.0546
[INFO]: 2023-11-07 16:22:01,088 test_iter 30000 2d cyclist --> easy: 0.6231, mod: 0.4046, hard: 0.4003
[INFO]: 2023-11-07 16:22:01,089 test_iter 30000 gr cyclist --> easy: 0.0175, mod: 0.0130, hard: 0.0130
[INFO]: 2023-11-07 16:22:01,089 test_iter 30000 3d cyclist --> easy: 0.0162, mod: 0.0130, hard: 0.0130
[INFO]: 2023-11-07 16:24:14,958 iter: 30250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1093, cls: 0.0443, iou: 0.1031), misc (ry: 0.19, z: 0.41), dt: 0.59, eta: 3.2h
[INFO]: 2023-11-07 16:26:31,943 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1246, cls: 0.0429, iou: 0.1015), misc (ry: 0.23, z: 0.41), dt: 0.59, eta: 3.2h
[INFO]: 2023-11-07 16:28:46,387 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1203, cls: 0.0446, iou: 0.1047), misc (ry: 0.23, z: 0.41), dt: 0.59, eta: 3.2h
[INFO]: 2023-11-07 16:31:00,485 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1166, cls: 0.0422, iou: 0.1019), misc (ry: 0.21, z: 0.42), dt: 0.59, eta: 3.1h
[INFO]: 2023-11-07 16:33:15,501 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1147, cls: 0.0461, iou: 0.1030), misc (ry: 0.21, z: 0.41), dt: 0.59, eta: 3.1h
[INFO]: 2023-11-07 16:35:31,074 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1355, cls: 0.0466, iou: 0.1058), misc (ry: 0.25, z: 0.40), dt: 0.59, eta: 3.0h
[INFO]: 2023-11-07 16:37:47,102 iter: 31750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1105, cls: 0.0421, iou: 0.1000), misc (ry: 0.21, z: 0.40), dt: 0.59, eta: 3.0h
[INFO]: 2023-11-07 16:40:01,373 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0972, cls: 0.0405, iou: 0.0972), misc (ry: 0.18, z: 0.39), dt: 0.59, eta: 2.9h
[INFO]: 2023-11-07 16:42:18,306 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1237, cls: 0.0500, iou: 0.1032), misc (ry: 0.22, z: 0.39), dt: 0.59, eta: 2.9h
[INFO]: 2023-11-07 16:44:29,708 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1042, cls: 0.0435, iou: 0.0996), misc (ry: 0.19, z: 0.37), dt: 0.59, eta: 2.9h
[INFO]: 2023-11-07 16:46:44,170 iter: 32750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0998, cls: 0.0436, iou: 0.0989), misc (ry: 0.18, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-11-07 16:49:01,735 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0994, cls: 0.0452, iou: 0.0973), misc (ry: 0.18, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-11-07 16:51:12,866 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0874, cls: 0.0390, iou: 0.0929), misc (ry: 0.17, z: 0.38), dt: 0.59, eta: 2.7h
[INFO]: 2023-11-07 16:53:25,987 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0937, cls: 0.0427, iou: 0.0947), misc (ry: 0.18, z: 0.38), dt: 0.59, eta: 2.7h
[INFO]: 2023-11-07 16:55:41,316 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0959, cls: 0.0402, iou: 0.0958), misc (ry: 0.18, z: 0.37), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-07 16:57:55,932 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0947, cls: 0.0432, iou: 0.0954), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-07 17:00:10,981 iter: 34250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0931, cls: 0.0416, iou: 0.0947), misc (ry: 0.18, z: 0.39), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-07 17:02:26,339 iter: 34500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0877, cls: 0.0425, iou: 0.0945), misc (ry: 0.18, z: 0.37), dt: 0.58, eta: 2.5h
[INFO]: 2023-11-07 17:04:42,731 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0799, cls: 0.0396, iou: 0.0894), misc (ry: 0.16, z: 0.35), dt: 0.58, eta: 2.5h
[INFO]: 2023-11-07 17:06:55,547 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0842, cls: 0.0395, iou: 0.0911), misc (ry: 0.18, z: 0.35), dt: 0.58, eta: 2.4h
[INFO]: 2023-11-07 17:09:11,515 iter: 35250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0888, cls: 0.0427, iou: 0.0911), misc (ry: 0.17, z: 0.36), dt: 0.58, eta: 2.4h
[INFO]: 2023-11-07 17:11:25,730 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0850, cls: 0.0385, iou: 0.0909), misc (ry: 0.18, z: 0.36), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-07 17:13:37,429 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0380, iou: 0.0878), misc (ry: 0.16, z: 0.34), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-07 17:15:51,281 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0814, cls: 0.0400, iou: 0.0879), misc (ry: 0.18, z: 0.34), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-07 17:18:08,017 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0806, cls: 0.0381, iou: 0.0871), misc (ry: 0.16, z: 0.33), dt: 0.58, eta: 2.2h
[INFO]: 2023-11-07 17:20:20,016 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0795, cls: 0.0390, iou: 0.0880), misc (ry: 0.16, z: 0.33), dt: 0.58, eta: 2.2h
[INFO]: 2023-11-07 17:22:32,194 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0693, cls: 0.0364, iou: 0.0842), misc (ry: 0.15, z: 0.32), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-07 17:24:47,990 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0789, cls: 0.0386, iou: 0.0861), misc (ry: 0.16, z: 0.34), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-07 17:27:03,489 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0759, cls: 0.0375, iou: 0.0847), misc (ry: 0.17, z: 0.34), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-07 17:29:18,118 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0698, cls: 0.0363, iou: 0.0832), misc (ry: 0.16, z: 0.31), dt: 0.58, eta: 2.0h
[INFO]: 2023-11-07 17:31:33,305 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0785, cls: 0.0404, iou: 0.0859), misc (ry: 0.15, z: 0.34), dt: 0.58, eta: 2.0h
[INFO]: 2023-11-07 17:33:51,536 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0693, cls: 0.0387, iou: 0.0822), misc (ry: 0.14, z: 0.32), dt: 0.58, eta: 1.9h
[INFO]: 2023-11-07 17:36:07,605 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0724, cls: 0.0373, iou: 0.0838), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.9h
[INFO]: 2023-11-07 17:38:24,393 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0663, cls: 0.0369, iou: 0.0806), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 1.9h
[INFO]: 2023-11-07 17:40:36,481 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0636, cls: 0.0344, iou: 0.0786), misc (ry: 0.13, z: 0.30), dt: 0.58, eta: 1.8h
[INFO]: 2023-11-07 17:42:49,053 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0684, cls: 0.0349, iou: 0.0809), misc (ry: 0.16, z: 0.31), dt: 0.58, eta: 1.8h
[INFO]: 2023-11-07 17:45:04,679 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0665, cls: 0.0364, iou: 0.0819), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.7h
[INFO]: 2023-11-07 17:47:19,930 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0665, cls: 0.0365, iou: 0.0800), misc (ry: 0.15, z: 0.30), dt: 0.58, eta: 1.7h
[INFO]: 2023-11-07 17:49:32,629 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0673, cls: 0.0362, iou: 0.0825), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.6h
[INFO]: 2023-11-07 17:51:48,723 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0626, cls: 0.0355, iou: 0.0782), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 1.6h
[INFO]: 2023-11-07 17:54:05,310 testing 1000/3769, dt: 0.136, eta: 6.3m
[INFO]: 2023-11-07 17:56:20,293 testing 2000/3769, dt: 0.136, eta: 4.0m
[INFO]: 2023-11-07 17:58:34,093 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-11-07 18:00:26,587 test_iter 40000 2d car --> easy: 0.8850, mod: 0.8291, hard: 0.6718
[INFO]: 2023-11-07 18:00:26,588 test_iter 40000 gr car --> easy: 0.2065, mod: 0.2003, hard: 0.1695
[INFO]: 2023-11-07 18:00:26,589 test_iter 40000 3d car --> easy: 0.1475, mod: 0.1613, hard: 0.1328
[INFO]: 2023-11-07 18:00:26,590 test_iter 40000 2d pedestrian --> easy: 0.6670, mod: 0.5869, hard: 0.5044
[INFO]: 2023-11-07 18:00:26,590 test_iter 40000 gr pedestrian --> easy: 0.1012, mod: 0.0999, hard: 0.1002
[INFO]: 2023-11-07 18:00:26,591 test_iter 40000 3d pedestrian --> easy: 0.0979, mod: 0.0984, hard: 0.0909
[INFO]: 2023-11-07 18:00:26,591 test_iter 40000 2d cyclist --> easy: 0.7228, mod: 0.4778, hard: 0.4122
[INFO]: 2023-11-07 18:00:26,592 test_iter 40000 gr cyclist --> easy: 0.1020, mod: 0.0987, hard: 0.0991
[INFO]: 2023-11-07 18:00:26,593 test_iter 40000 3d cyclist --> easy: 0.0213, mod: 0.0131, hard: 0.0139
[INFO]: 2023-11-07 18:02:39,129 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0630, cls: 0.0340, iou: 0.0782), misc (ry: 0.14, z: 0.30), dt: 0.59, eta: 1.6h
[INFO]: 2023-11-07 18:04:51,912 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0653, cls: 0.0357, iou: 0.0812), misc (ry: 0.15, z: 0.31), dt: 0.59, eta: 1.6h
[INFO]: 2023-11-07 18:07:05,045 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0645, cls: 0.0366, iou: 0.0793), misc (ry: 0.14, z: 0.30), dt: 0.59, eta: 1.5h
[INFO]: 2023-11-07 18:09:19,089 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0597, cls: 0.0339, iou: 0.0747), misc (ry: 0.15, z: 0.29), dt: 0.59, eta: 1.5h
[INFO]: 2023-11-07 18:11:33,059 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0596, cls: 0.0347, iou: 0.0752), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.4h
[INFO]: 2023-11-07 18:13:46,773 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0571, cls: 0.0350, iou: 0.0730), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.4h
[INFO]: 2023-11-07 18:16:02,621 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0639, cls: 0.0367, iou: 0.0772), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-07 18:18:17,394 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0594, cls: 0.0344, iou: 0.0742), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-07 18:20:32,356 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0586, cls: 0.0365, iou: 0.0756), misc (ry: 0.14, z: 0.28), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-07 18:22:45,509 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0538, cls: 0.0353, iou: 0.0730), misc (ry: 0.13, z: 0.27), dt: 0.59, eta: 1.2h
[INFO]: 2023-11-07 18:24:59,740 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0339, iou: 0.0735), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.2h
[INFO]: 2023-11-07 18:27:16,605 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0324, iou: 0.0730), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.1h
[INFO]: 2023-11-07 18:29:30,320 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0546, cls: 0.0342, iou: 0.0719), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.1h
[INFO]: 2023-11-07 18:31:44,238 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0564, cls: 0.0336, iou: 0.0735), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.1h
[INFO]: 2023-11-07 18:33:57,768 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0539, cls: 0.0347, iou: 0.0717), misc (ry: 0.13, z: 0.27), dt: 0.59, eta: 1.0h
[INFO]: 2023-11-07 18:36:10,157 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0550, cls: 0.0337, iou: 0.0719), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 58.6m
[INFO]: 2023-11-07 18:38:26,089 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0519, cls: 0.0335, iou: 0.0682), misc (ry: 0.13, z: 0.26), dt: 0.59, eta: 56.1m
[INFO]: 2023-11-07 18:40:40,247 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0507, cls: 0.0331, iou: 0.0692), misc (ry: 0.12, z: 0.27), dt: 0.59, eta: 53.6m
[INFO]: 2023-11-07 18:42:53,095 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0540, cls: 0.0332, iou: 0.0693), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 51.2m
[INFO]: 2023-11-07 18:45:05,975 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0509, cls: 0.0331, iou: 0.0691), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 48.7m
[INFO]: 2023-11-07 18:47:18,118 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0529, cls: 0.0335, iou: 0.0708), misc (ry: 0.13, z: 0.28), dt: 0.58, eta: 46.3m
[INFO]: 2023-11-07 18:49:31,810 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0521, cls: 0.0335, iou: 0.0677), misc (ry: 0.13, z: 0.25), dt: 0.58, eta: 43.8m
[INFO]: 2023-11-07 18:51:44,626 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0487, cls: 0.0314, iou: 0.0682), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 41.3m
[INFO]: 2023-11-07 18:53:58,711 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0541, cls: 0.0345, iou: 0.0686), misc (ry: 0.13, z: 0.26), dt: 0.58, eta: 38.9m
[INFO]: 2023-11-07 18:56:12,643 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0465, cls: 0.0320, iou: 0.0657), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 36.5m
[INFO]: 2023-11-07 18:58:23,922 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0513, cls: 0.0319, iou: 0.0670), misc (ry: 0.13, z: 0.26), dt: 0.58, eta: 34.0m
[INFO]: 2023-11-07 19:00:35,385 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0433, cls: 0.0308, iou: 0.0631), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 31.6m
[INFO]: 2023-11-07 19:02:51,999 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0315, iou: 0.0625), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 29.1m
[INFO]: 2023-11-07 19:05:06,039 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0464, cls: 0.0329, iou: 0.0637), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 26.7m
[INFO]: 2023-11-07 19:07:18,900 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0506, cls: 0.0336, iou: 0.0659), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 24.2m
[INFO]: 2023-11-07 19:09:31,292 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0426, cls: 0.0317, iou: 0.0632), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 21.8m
[INFO]: 2023-11-07 19:11:43,810 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0430, cls: 0.0309, iou: 0.0628), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 19.4m
[INFO]: 2023-11-07 19:13:56,041 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0427, cls: 0.0309, iou: 0.0617), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 17.0m
[INFO]: 2023-11-07 19:16:08,427 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0462, cls: 0.0315, iou: 0.0623), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 14.5m
[INFO]: 2023-11-07 19:18:22,162 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0449, cls: 0.0319, iou: 0.0619), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 12.1m
[INFO]: 2023-11-07 19:20:35,157 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0456, cls: 0.0326, iou: 0.0622), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 9.7m
[INFO]: 2023-11-07 19:22:49,086 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0448, cls: 0.0330, iou: 0.0633), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 7.3m
[INFO]: 2023-11-07 19:25:01,198 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0436, cls: 0.0327, iou: 0.0626), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 4.8m
[INFO]: 2023-11-07 19:27:15,756 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0468, cls: 0.0313, iou: 0.0608), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 2.4m
[INFO]: 2023-11-07 19:29:34,289 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0310, iou: 0.0598), misc (ry: 0.11, z: 0.24), dt: 0.58, eta: 0.6s
[INFO]: 2023-11-07 19:31:46,905 testing 1000/3769, dt: 0.132, eta: 6.1m
[INFO]: 2023-11-07 19:33:58,976 testing 2000/3769, dt: 0.132, eta: 3.9m
[INFO]: 2023-11-07 19:36:13,719 testing 3000/3769, dt: 0.133, eta: 1.7m
[INFO]: 2023-11-07 19:38:05,684 test_iter 50000 2d car --> easy: 0.8846, mod: 0.8312, hard: 0.6733
[INFO]: 2023-11-07 19:38:05,685 test_iter 50000 gr car --> easy: 0.2563, mod: 0.2058, hard: 0.1751
[INFO]: 2023-11-07 19:38:05,686 test_iter 50000 3d car --> easy: 0.1941, mod: 0.1627, hard: 0.1327
[INFO]: 2023-11-07 19:38:05,686 test_iter 50000 2d pedestrian --> easy: 0.7325, mod: 0.5847, hard: 0.5024
[INFO]: 2023-11-07 19:38:05,687 test_iter 50000 gr pedestrian --> easy: 0.0614, mod: 0.0581, hard: 0.0564
[INFO]: 2023-11-07 19:38:05,687 test_iter 50000 3d pedestrian --> easy: 0.0573, mod: 0.0561, hard: 0.0455
[INFO]: 2023-11-07 19:38:05,688 test_iter 50000 2d cyclist --> easy: 0.6490, mod: 0.4715, hard: 0.4069
[INFO]: 2023-11-07 19:38:05,688 test_iter 50000 gr cyclist --> easy: 0.0207, mod: 0.0205, hard: 0.0216
[INFO]: 2023-11-07 19:38:05,689 test_iter 50000 3d cyclist --> easy: 0.0175, mod: 0.0121, hard: 0.0129
