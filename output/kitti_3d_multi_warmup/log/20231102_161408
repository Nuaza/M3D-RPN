[INFO]: 2023-11-02 16:14:08,993 Preloading imdb.
[INFO]: 2023-11-02 16:14:10,362 weighted respectively as 1.05 and 0.00
[INFO]: 2023-11-02 16:14:10,362 Found 3534 foreground and 178 empty images
[INFO]: 2023-11-02 16:14:12,721 Labels not used in training.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2023-11-02 16:14:12,724 conf: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               2                                       
    cuda_seed:              2                                       
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2023-11-02 16:14:13,025 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2023-11-02 16:16:34,948 iter: 250, acc (bg: 0.97, fg: 0.37, iou: 0.60), loss (bbox_3d: 2.3305, cls: 0.6601, iou: 0.5162), misc (ry: 1.51, z: 2.73), dt: 0.57, eta: 7.9h
[INFO]: 2023-11-02 16:18:51,509 iter: 500, acc (bg: 0.99, fg: 0.74, iou: 0.66), loss (bbox_3d: 1.5665, cls: 0.3165, iou: 0.4217), misc (ry: 1.33, z: 1.98), dt: 0.56, eta: 7.7h
[INFO]: 2023-11-02 16:21:07,136 iter: 750, acc (bg: 0.99, fg: 0.81, iou: 0.70), loss (bbox_3d: 1.2761, cls: 0.2530, iou: 0.3654), misc (ry: 1.10, z: 1.72), dt: 0.55, eta: 7.6h
[INFO]: 2023-11-02 16:23:25,340 iter: 1000, acc (bg: 0.99, fg: 0.82, iou: 0.72), loss (bbox_3d: 1.2439, cls: 0.2493, iou: 0.3438), misc (ry: 1.07, z: 1.66), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-02 16:25:44,489 iter: 1250, acc (bg: 0.99, fg: 0.84, iou: 0.73), loss (bbox_3d: 1.1316, cls: 0.2165, iou: 0.3276), misc (ry: 1.00, z: 1.62), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-02 16:28:02,687 iter: 1500, acc (bg: 0.99, fg: 0.84, iou: 0.74), loss (bbox_3d: 1.0237, cls: 0.2026, iou: 0.3064), misc (ry: 0.97, z: 1.49), dt: 0.55, eta: 7.5h
[INFO]: 2023-11-02 16:30:15,177 iter: 1750, acc (bg: 0.99, fg: 0.86, iou: 0.75), loss (bbox_3d: 1.0530, cls: 0.1938, iou: 0.2970), misc (ry: 0.93, z: 1.47), dt: 0.55, eta: 7.4h
[INFO]: 2023-11-02 16:32:32,539 iter: 2000, acc (bg: 0.99, fg: 0.87, iou: 0.76), loss (bbox_3d: 0.9356, cls: 0.1797, iou: 0.2811), misc (ry: 0.87, z: 1.36), dt: 0.55, eta: 7.3h
[INFO]: 2023-11-02 16:34:47,971 iter: 2250, acc (bg: 1.00, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.9249, cls: 0.1658, iou: 0.2677), misc (ry: 0.85, z: 1.31), dt: 0.55, eta: 7.3h
[INFO]: 2023-11-02 16:37:02,571 iter: 2500, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7922, cls: 0.1587, iou: 0.2496), misc (ry: 0.79, z: 1.16), dt: 0.55, eta: 7.2h
[INFO]: 2023-11-02 16:39:19,039 iter: 2750, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.8004, cls: 0.1485, iou: 0.2444), misc (ry: 0.77, z: 1.25), dt: 0.55, eta: 7.2h
[INFO]: 2023-11-02 16:41:34,407 iter: 3000, acc (bg: 1.00, fg: 0.90, iou: 0.79), loss (bbox_3d: 0.7873, cls: 0.1464, iou: 0.2370), misc (ry: 0.78, z: 1.08), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-02 16:43:50,772 iter: 3250, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.8183, cls: 0.1439, iou: 0.2371), misc (ry: 0.76, z: 1.29), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-02 16:46:05,415 iter: 3500, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7360, cls: 0.1447, iou: 0.2351), misc (ry: 0.71, z: 1.09), dt: 0.55, eta: 7.1h
[INFO]: 2023-11-02 16:48:20,643 iter: 3750, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7297, cls: 0.1409, iou: 0.2292), misc (ry: 0.67, z: 1.18), dt: 0.55, eta: 7.0h
[INFO]: 2023-11-02 16:50:35,319 iter: 4000, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6821, cls: 0.1386, iou: 0.2229), misc (ry: 0.68, z: 1.00), dt: 0.55, eta: 7.0h
[INFO]: 2023-11-02 16:52:51,249 iter: 4250, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6476, cls: 0.1243, iou: 0.2072), misc (ry: 0.67, z: 0.99), dt: 0.55, eta: 6.9h
[INFO]: 2023-11-02 16:55:08,485 iter: 4500, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.6117, cls: 0.1133, iou: 0.2069), misc (ry: 0.66, z: 0.93), dt: 0.55, eta: 6.9h
[INFO]: 2023-11-02 16:57:26,526 iter: 4750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5841, cls: 0.1236, iou: 0.2045), misc (ry: 0.58, z: 0.95), dt: 0.55, eta: 6.9h
[INFO]: 2023-11-02 16:59:41,901 iter: 5000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5961, cls: 0.1199, iou: 0.2018), misc (ry: 0.59, z: 0.95), dt: 0.55, eta: 6.8h
[INFO]: 2023-11-02 17:01:56,791 iter: 5250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5439, cls: 0.1121, iou: 0.1938), misc (ry: 0.60, z: 0.86), dt: 0.55, eta: 6.8h
[INFO]: 2023-11-02 17:04:12,569 iter: 5500, acc (bg: 1.00, fg: 0.93, iou: 0.82), loss (bbox_3d: 0.5750, cls: 0.1087, iou: 0.2004), misc (ry: 0.61, z: 0.90), dt: 0.55, eta: 6.7h
[INFO]: 2023-11-02 17:06:29,435 iter: 5750, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5953, cls: 0.1189, iou: 0.2002), misc (ry: 0.64, z: 0.94), dt: 0.55, eta: 6.7h
[INFO]: 2023-11-02 17:08:44,721 iter: 6000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5520, cls: 0.1072, iou: 0.1932), misc (ry: 0.62, z: 0.88), dt: 0.55, eta: 6.7h
[INFO]: 2023-11-02 17:10:59,556 iter: 6250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4778, cls: 0.0988, iou: 0.1867), misc (ry: 0.54, z: 0.89), dt: 0.55, eta: 6.6h
[INFO]: 2023-11-02 17:13:12,370 iter: 6500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4917, cls: 0.1022, iou: 0.1827), misc (ry: 0.58, z: 0.75), dt: 0.54, eta: 6.6h
[INFO]: 2023-11-02 17:15:25,161 iter: 6750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4645, cls: 0.0993, iou: 0.1835), misc (ry: 0.50, z: 0.85), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-02 17:17:41,987 iter: 7000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5250, cls: 0.1098, iou: 0.1893), misc (ry: 0.61, z: 0.84), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-02 17:19:53,924 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4999, cls: 0.0987, iou: 0.1879), misc (ry: 0.54, z: 0.90), dt: 0.54, eta: 6.5h
[INFO]: 2023-11-02 17:22:08,252 iter: 7500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4887, cls: 0.1017, iou: 0.1892), misc (ry: 0.51, z: 0.88), dt: 0.54, eta: 6.4h
[INFO]: 2023-11-02 17:24:22,097 iter: 7750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4374, cls: 0.0908, iou: 0.1771), misc (ry: 0.46, z: 0.77), dt: 0.54, eta: 6.4h
[INFO]: 2023-11-02 17:26:33,985 iter: 8000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4657, cls: 0.0969, iou: 0.1806), misc (ry: 0.54, z: 0.82), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-02 17:28:50,185 iter: 8250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4129, cls: 0.0941, iou: 0.1752), misc (ry: 0.43, z: 0.76), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-02 17:31:04,925 iter: 8500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4676, cls: 0.0955, iou: 0.1779), misc (ry: 0.53, z: 0.87), dt: 0.54, eta: 6.3h
[INFO]: 2023-11-02 17:33:20,695 iter: 8750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4512, cls: 0.0920, iou: 0.1806), misc (ry: 0.52, z: 0.88), dt: 0.54, eta: 6.2h
[INFO]: 2023-11-02 17:35:36,390 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3876, cls: 0.0897, iou: 0.1705), misc (ry: 0.43, z: 0.78), dt: 0.54, eta: 6.2h
[INFO]: 2023-11-02 17:37:52,888 iter: 9250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4017, cls: 0.0863, iou: 0.1734), misc (ry: 0.50, z: 0.74), dt: 0.54, eta: 6.1h
[INFO]: 2023-11-02 17:40:08,440 iter: 9500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3904, cls: 0.0879, iou: 0.1683), misc (ry: 0.45, z: 0.78), dt: 0.54, eta: 6.1h
[INFO]: 2023-11-02 17:42:22,554 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4282, cls: 0.0870, iou: 0.1757), misc (ry: 0.52, z: 0.71), dt: 0.54, eta: 6.1h
[INFO]: 2023-11-02 17:44:38,739 iter: 10000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3849, cls: 0.0857, iou: 0.1678), misc (ry: 0.44, z: 0.75), dt: 0.54, eta: 6.0h
[INFO]: 2023-11-02 17:46:52,820 testing 1000/3769, dt: 0.134, eta: 6.2m
[INFO]: 2023-11-02 17:49:08,260 testing 2000/3769, dt: 0.135, eta: 4.0m
[INFO]: 2023-11-02 17:51:23,068 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-11-02 17:53:15,198 test_iter 10000 2d car --> easy: 0.7775, mod: 0.7291, hard: 0.6328
[INFO]: 2023-11-02 17:53:15,199 test_iter 10000 gr car --> easy: 0.0355, mod: 0.0309, hard: 0.0266
[INFO]: 2023-11-02 17:53:15,200 test_iter 10000 3d car --> easy: 0.0251, mod: 0.0232, hard: 0.0182
[INFO]: 2023-11-02 17:53:15,200 test_iter 10000 2d pedestrian --> easy: 0.5243, mod: 0.4628, hard: 0.4463
[INFO]: 2023-11-02 17:53:15,201 test_iter 10000 gr pedestrian --> easy: 0.0231, mod: 0.0182, hard: 0.0182
[INFO]: 2023-11-02 17:53:15,202 test_iter 10000 3d pedestrian --> easy: 0.0182, mod: 0.0182, hard: 0.0182
[INFO]: 2023-11-02 17:53:15,202 test_iter 10000 2d cyclist --> easy: 0.3308, mod: 0.2686, hard: 0.2162
[INFO]: 2023-11-02 17:53:15,203 test_iter 10000 gr cyclist --> easy: 0.0026, mod: 0.0029, hard: 0.0029
[INFO]: 2023-11-02 17:53:15,203 test_iter 10000 3d cyclist --> easy: 0.0026, mod: 0.0029, hard: 0.0029
[INFO]: 2023-11-02 17:55:29,317 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.3871, cls: 0.0924, iou: 0.1747), misc (ry: 0.42, z: 0.76), dt: 0.59, eta: 6.5h
[INFO]: 2023-11-02 17:57:43,622 iter: 10500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3596, cls: 0.0823, iou: 0.1669), misc (ry: 0.42, z: 0.71), dt: 0.59, eta: 6.5h
[INFO]: 2023-11-02 17:59:57,050 iter: 10750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3740, cls: 0.0908, iou: 0.1701), misc (ry: 0.43, z: 0.72), dt: 0.59, eta: 6.4h
[INFO]: 2023-11-02 18:02:10,714 iter: 11000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3622, cls: 0.0790, iou: 0.1646), misc (ry: 0.40, z: 0.81), dt: 0.59, eta: 6.4h
[INFO]: 2023-11-02 18:04:25,403 iter: 11250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3845, cls: 0.0848, iou: 0.1688), misc (ry: 0.41, z: 0.82), dt: 0.59, eta: 6.3h
[INFO]: 2023-11-02 18:06:40,898 iter: 11500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3772, cls: 0.0880, iou: 0.1684), misc (ry: 0.46, z: 0.73), dt: 0.59, eta: 6.3h
[INFO]: 2023-11-02 18:08:53,405 iter: 11750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3553, cls: 0.0779, iou: 0.1661), misc (ry: 0.42, z: 0.71), dt: 0.59, eta: 6.2h
[INFO]: 2023-11-02 18:11:09,092 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3246, cls: 0.0755, iou: 0.1584), misc (ry: 0.35, z: 0.73), dt: 0.58, eta: 6.2h
[INFO]: 2023-11-02 18:13:22,466 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3312, cls: 0.0787, iou: 0.1576), misc (ry: 0.39, z: 0.67), dt: 0.58, eta: 6.1h
[INFO]: 2023-11-02 18:15:34,327 iter: 12500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3842, cls: 0.0826, iou: 0.1637), misc (ry: 0.51, z: 0.73), dt: 0.58, eta: 6.1h
[INFO]: 2023-11-02 18:17:49,185 iter: 12750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3330, cls: 0.0753, iou: 0.1578), misc (ry: 0.40, z: 0.70), dt: 0.58, eta: 6.0h
[INFO]: 2023-11-02 18:20:02,469 iter: 13000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3121, cls: 0.0723, iou: 0.1517), misc (ry: 0.38, z: 0.67), dt: 0.58, eta: 6.0h
[INFO]: 2023-11-02 18:22:17,079 iter: 13250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3303, cls: 0.0832, iou: 0.1518), misc (ry: 0.41, z: 0.66), dt: 0.58, eta: 5.9h
[INFO]: 2023-11-02 18:24:31,789 iter: 13500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3263, cls: 0.0779, iou: 0.1568), misc (ry: 0.39, z: 0.66), dt: 0.58, eta: 5.9h
[INFO]: 2023-11-02 18:26:45,167 iter: 13750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2896, cls: 0.0699, iou: 0.1493), misc (ry: 0.36, z: 0.64), dt: 0.58, eta: 5.8h
[INFO]: 2023-11-02 18:29:01,558 iter: 14000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2943, cls: 0.0707, iou: 0.1487), misc (ry: 0.37, z: 0.67), dt: 0.58, eta: 5.8h
[INFO]: 2023-11-02 18:31:16,465 iter: 14250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2670, cls: 0.0684, iou: 0.1475), misc (ry: 0.33, z: 0.65), dt: 0.58, eta: 5.7h
[INFO]: 2023-11-02 18:33:32,448 iter: 14500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2730, cls: 0.0745, iou: 0.1466), misc (ry: 0.35, z: 0.60), dt: 0.58, eta: 5.7h
[INFO]: 2023-11-02 18:35:46,152 iter: 14750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2663, cls: 0.0717, iou: 0.1490), misc (ry: 0.35, z: 0.61), dt: 0.58, eta: 5.6h
[INFO]: 2023-11-02 18:38:00,826 iter: 15000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2755, cls: 0.0764, iou: 0.1496), misc (ry: 0.33, z: 0.63), dt: 0.58, eta: 5.6h
[INFO]: 2023-11-02 18:40:16,181 iter: 15250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2966, cls: 0.0665, iou: 0.1469), misc (ry: 0.43, z: 0.62), dt: 0.57, eta: 5.5h
[INFO]: 2023-11-02 18:42:31,152 iter: 15500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2745, cls: 0.0662, iou: 0.1500), misc (ry: 0.34, z: 0.61), dt: 0.57, eta: 5.5h
[INFO]: 2023-11-02 18:44:43,522 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2496, cls: 0.0661, iou: 0.1426), misc (ry: 0.36, z: 0.58), dt: 0.57, eta: 5.5h
[INFO]: 2023-11-02 18:47:00,392 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2313, cls: 0.0654, iou: 0.1361), misc (ry: 0.29, z: 0.57), dt: 0.57, eta: 5.4h
[INFO]: 2023-11-02 18:49:13,822 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2426, cls: 0.0630, iou: 0.1370), misc (ry: 0.27, z: 0.67), dt: 0.57, eta: 5.4h
[INFO]: 2023-11-02 18:51:25,262 iter: 16500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2374, cls: 0.0630, iou: 0.1388), misc (ry: 0.29, z: 0.59), dt: 0.57, eta: 5.3h
[INFO]: 2023-11-02 18:53:40,482 iter: 16750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2631, cls: 0.0645, iou: 0.1401), misc (ry: 0.38, z: 0.62), dt: 0.57, eta: 5.3h
[INFO]: 2023-11-02 18:55:54,101 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2498, cls: 0.0707, iou: 0.1439), misc (ry: 0.31, z: 0.58), dt: 0.57, eta: 5.2h
[INFO]: 2023-11-02 18:58:09,630 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2499, cls: 0.0682, iou: 0.1424), misc (ry: 0.33, z: 0.62), dt: 0.57, eta: 5.2h
[INFO]: 2023-11-02 19:00:24,156 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2522, cls: 0.0674, iou: 0.1397), misc (ry: 0.37, z: 0.58), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-02 19:02:40,685 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2500, cls: 0.0654, iou: 0.1391), misc (ry: 0.32, z: 0.59), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-02 19:04:52,852 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2343, cls: 0.0601, iou: 0.1372), misc (ry: 0.32, z: 0.58), dt: 0.57, eta: 5.1h
[INFO]: 2023-11-02 19:07:08,709 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2181, cls: 0.0607, iou: 0.1326), misc (ry: 0.31, z: 0.56), dt: 0.57, eta: 5.0h
[INFO]: 2023-11-02 19:09:22,764 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2022, cls: 0.0605, iou: 0.1329), misc (ry: 0.28, z: 0.53), dt: 0.57, eta: 5.0h
[INFO]: 2023-11-02 19:11:35,158 iter: 18750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2228, cls: 0.0625, iou: 0.1356), misc (ry: 0.30, z: 0.54), dt: 0.57, eta: 4.9h
[INFO]: 2023-11-02 19:13:50,944 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2028, cls: 0.0597, iou: 0.1301), misc (ry: 0.27, z: 0.51), dt: 0.57, eta: 4.9h
[INFO]: 2023-11-02 19:16:06,034 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2175, cls: 0.0614, iou: 0.1334), misc (ry: 0.32, z: 0.52), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-02 19:18:19,254 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2482, cls: 0.0620, iou: 0.1341), misc (ry: 0.37, z: 0.59), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-02 19:20:34,173 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2158, cls: 0.0605, iou: 0.1307), misc (ry: 0.31, z: 0.56), dt: 0.57, eta: 4.8h
[INFO]: 2023-11-02 19:22:52,041 iter: 20000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2026, cls: 0.0617, iou: 0.1322), misc (ry: 0.29, z: 0.53), dt: 0.57, eta: 4.7h
[INFO]: 2023-11-02 19:25:04,886 testing 1000/3769, dt: 0.133, eta: 6.1m
[INFO]: 2023-11-02 19:27:16,246 testing 2000/3769, dt: 0.132, eta: 3.9m
[INFO]: 2023-11-02 19:29:27,912 testing 3000/3769, dt: 0.132, eta: 1.7m
[INFO]: 2023-11-02 19:31:17,848 test_iter 20000 2d car --> easy: 0.9092, mod: 0.8329, hard: 0.6778
[INFO]: 2023-11-02 19:31:17,849 test_iter 20000 gr car --> easy: 0.1237, mod: 0.1014, hard: 0.0756
[INFO]: 2023-11-02 19:31:17,850 test_iter 20000 3d car --> easy: 0.0757, mod: 0.0599, hard: 0.0520
[INFO]: 2023-11-02 19:31:17,850 test_iter 20000 2d pedestrian --> easy: 0.6593, mod: 0.5741, hard: 0.4938
[INFO]: 2023-11-02 19:31:17,851 test_iter 20000 gr pedestrian --> easy: 0.1047, mod: 0.1000, hard: 0.1003
[INFO]: 2023-11-02 19:31:17,852 test_iter 20000 3d pedestrian --> easy: 0.0972, mod: 0.0986, hard: 0.0909
[INFO]: 2023-11-02 19:31:17,852 test_iter 20000 2d cyclist --> easy: 0.5361, mod: 0.3198, hard: 0.3136
[INFO]: 2023-11-02 19:31:17,853 test_iter 20000 gr cyclist --> easy: 0.0145, mod: 0.0152, hard: 0.0152
[INFO]: 2023-11-02 19:31:17,853 test_iter 20000 3d cyclist --> easy: 0.0080, mod: 0.0130, hard: 0.0130
[INFO]: 2023-11-02 19:33:27,487 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2019, cls: 0.0552, iou: 0.1309), misc (ry: 0.26, z: 0.57), dt: 0.59, eta: 4.9h
[INFO]: 2023-11-02 19:35:43,695 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2260, cls: 0.0614, iou: 0.1362), misc (ry: 0.35, z: 0.56), dt: 0.59, eta: 4.8h
[INFO]: 2023-11-02 19:37:57,830 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2757, cls: 0.0657, iou: 0.1381), misc (ry: 0.41, z: 0.65), dt: 0.59, eta: 4.8h
[INFO]: 2023-11-02 19:40:12,914 iter: 21000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2583, cls: 0.0635, iou: 0.1369), misc (ry: 0.38, z: 0.58), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-02 19:42:27,594 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2136, cls: 0.0560, iou: 0.1319), misc (ry: 0.32, z: 0.55), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-02 19:44:43,352 iter: 21500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2059, cls: 0.0608, iou: 0.1293), misc (ry: 0.30, z: 0.53), dt: 0.59, eta: 4.7h
[INFO]: 2023-11-02 19:46:56,028 iter: 21750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2195, cls: 0.0544, iou: 0.1301), misc (ry: 0.33, z: 0.63), dt: 0.59, eta: 4.6h
[INFO]: 2023-11-02 19:49:08,457 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1945, cls: 0.0542, iou: 0.1261), misc (ry: 0.29, z: 0.57), dt: 0.59, eta: 4.6h
[INFO]: 2023-11-02 19:51:22,163 iter: 22250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2314, cls: 0.0612, iou: 0.1307), misc (ry: 0.39, z: 0.52), dt: 0.59, eta: 4.5h
[INFO]: 2023-11-02 19:53:33,901 iter: 22500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1991, cls: 0.0544, iou: 0.1239), misc (ry: 0.30, z: 0.54), dt: 0.58, eta: 4.5h
[INFO]: 2023-11-02 19:55:47,043 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1898, cls: 0.0559, iou: 0.1224), misc (ry: 0.29, z: 0.53), dt: 0.58, eta: 4.4h
[INFO]: 2023-11-02 19:58:01,460 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1866, cls: 0.0541, iou: 0.1262), misc (ry: 0.28, z: 0.54), dt: 0.58, eta: 4.4h
[INFO]: 2023-11-02 20:00:17,002 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1754, cls: 0.0583, iou: 0.1258), misc (ry: 0.27, z: 0.48), dt: 0.58, eta: 4.3h
[INFO]: 2023-11-02 20:02:29,574 iter: 23500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1462, cls: 0.0526, iou: 0.1164), misc (ry: 0.24, z: 0.44), dt: 0.58, eta: 4.3h
[INFO]: 2023-11-02 20:04:44,059 iter: 23750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1687, cls: 0.0533, iou: 0.1192), misc (ry: 0.26, z: 0.48), dt: 0.58, eta: 4.2h
[INFO]: 2023-11-02 20:06:56,682 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1612, cls: 0.0522, iou: 0.1202), misc (ry: 0.25, z: 0.51), dt: 0.58, eta: 4.2h
[INFO]: 2023-11-02 20:09:11,172 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1557, cls: 0.0515, iou: 0.1190), misc (ry: 0.24, z: 0.48), dt: 0.58, eta: 4.2h
[INFO]: 2023-11-02 20:11:26,468 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1543, cls: 0.0499, iou: 0.1157), misc (ry: 0.25, z: 0.45), dt: 0.58, eta: 4.1h
[INFO]: 2023-11-02 20:13:40,495 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1509, cls: 0.0531, iou: 0.1183), misc (ry: 0.25, z: 0.46), dt: 0.58, eta: 4.1h
[INFO]: 2023-11-02 20:15:53,182 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1538, cls: 0.0467, iou: 0.1123), misc (ry: 0.25, z: 0.45), dt: 0.58, eta: 4.0h
[INFO]: 2023-11-02 20:18:05,500 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1518, cls: 0.0498, iou: 0.1132), misc (ry: 0.23, z: 0.45), dt: 0.58, eta: 4.0h
[INFO]: 2023-11-02 20:20:16,007 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1424, cls: 0.0479, iou: 0.1150), misc (ry: 0.22, z: 0.45), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-02 20:22:29,619 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1417, cls: 0.0493, iou: 0.1128), misc (ry: 0.23, z: 0.44), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-02 20:24:44,530 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1431, cls: 0.0484, iou: 0.1113), misc (ry: 0.22, z: 0.44), dt: 0.58, eta: 3.9h
[INFO]: 2023-11-02 20:26:58,747 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1482, cls: 0.0522, iou: 0.1136), misc (ry: 0.25, z: 0.46), dt: 0.58, eta: 3.8h
[INFO]: 2023-11-02 20:29:14,004 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1275, cls: 0.0498, iou: 0.1102), misc (ry: 0.23, z: 0.43), dt: 0.58, eta: 3.8h
[INFO]: 2023-11-02 20:31:27,532 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1225, cls: 0.0442, iou: 0.1048), misc (ry: 0.20, z: 0.43), dt: 0.58, eta: 3.7h
[INFO]: 2023-11-02 20:33:42,066 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1420, cls: 0.0507, iou: 0.1114), misc (ry: 0.25, z: 0.44), dt: 0.58, eta: 3.7h
[INFO]: 2023-11-02 20:35:54,701 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1468, cls: 0.0498, iou: 0.1123), misc (ry: 0.25, z: 0.46), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-02 20:38:07,111 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1208, cls: 0.0466, iou: 0.1086), misc (ry: 0.22, z: 0.45), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-02 20:40:21,242 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1270, cls: 0.0466, iou: 0.1084), misc (ry: 0.20, z: 0.48), dt: 0.58, eta: 3.6h
[INFO]: 2023-11-02 20:42:35,177 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1114, cls: 0.0452, iou: 0.1037), misc (ry: 0.19, z: 0.44), dt: 0.58, eta: 3.5h
[INFO]: 2023-11-02 20:44:48,043 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1184, cls: 0.0446, iou: 0.1051), misc (ry: 0.19, z: 0.45), dt: 0.57, eta: 3.5h
[INFO]: 2023-11-02 20:47:02,015 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1368, cls: 0.0463, iou: 0.1091), misc (ry: 0.22, z: 0.44), dt: 0.57, eta: 3.4h
[INFO]: 2023-11-02 20:49:17,315 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1287, cls: 0.0466, iou: 0.1100), misc (ry: 0.22, z: 0.42), dt: 0.57, eta: 3.4h
[INFO]: 2023-11-02 20:51:33,280 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1225, cls: 0.0458, iou: 0.1067), misc (ry: 0.21, z: 0.43), dt: 0.57, eta: 3.3h
[INFO]: 2023-11-02 20:53:46,686 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1344, cls: 0.0458, iou: 0.1035), misc (ry: 0.20, z: 0.43), dt: 0.57, eta: 3.3h
[INFO]: 2023-11-02 20:55:58,743 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1127, cls: 0.0416, iou: 0.1004), misc (ry: 0.19, z: 0.42), dt: 0.57, eta: 3.3h
[INFO]: 2023-11-02 20:58:10,532 iter: 29750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1197, cls: 0.0414, iou: 0.1016), misc (ry: 0.19, z: 0.46), dt: 0.57, eta: 3.2h
[INFO]: 2023-11-02 21:00:23,234 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1266, cls: 0.0442, iou: 0.1072), misc (ry: 0.21, z: 0.49), dt: 0.57, eta: 3.2h
[INFO]: 2023-11-02 21:02:39,011 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-11-02 21:04:54,625 testing 2000/3769, dt: 0.136, eta: 4.0m
[INFO]: 2023-11-02 21:07:08,695 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-11-02 21:09:01,952 test_iter 30000 2d car --> easy: 0.9069, mod: 0.8276, hard: 0.6719
[INFO]: 2023-11-02 21:09:01,954 test_iter 30000 gr car --> easy: 0.1672, mod: 0.1355, hard: 0.1147
[INFO]: 2023-11-02 21:09:01,954 test_iter 30000 3d car --> easy: 0.1115, mod: 0.0896, hard: 0.0709
[INFO]: 2023-11-02 21:09:01,955 test_iter 30000 2d pedestrian --> easy: 0.6492, mod: 0.5693, hard: 0.4897
[INFO]: 2023-11-02 21:09:01,955 test_iter 30000 gr pedestrian --> easy: 0.0608, mod: 0.0580, hard: 0.0552
[INFO]: 2023-11-02 21:09:01,956 test_iter 30000 3d pedestrian --> easy: 0.0567, mod: 0.0537, hard: 0.0455
[INFO]: 2023-11-02 21:09:01,957 test_iter 30000 2d cyclist --> easy: 0.6059, mod: 0.3883, hard: 0.3800
[INFO]: 2023-11-02 21:09:01,957 test_iter 30000 gr cyclist --> easy: 0.0307, mod: 0.0233, hard: 0.0249
[INFO]: 2023-11-02 21:09:01,958 test_iter 30000 3d cyclist --> easy: 0.0305, mod: 0.0224, hard: 0.0236
[INFO]: 2023-11-02 21:11:14,977 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1076, cls: 0.0423, iou: 0.0995), misc (ry: 0.20, z: 0.39), dt: 0.59, eta: 3.2h
[INFO]: 2023-11-02 21:13:32,548 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1041, cls: 0.0421, iou: 0.0974), misc (ry: 0.18, z: 0.42), dt: 0.59, eta: 3.2h
[INFO]: 2023-11-02 21:15:47,366 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1099, cls: 0.0410, iou: 0.1011), misc (ry: 0.20, z: 0.41), dt: 0.59, eta: 3.1h
[INFO]: 2023-11-02 21:18:01,452 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1147, cls: 0.0437, iou: 0.1011), misc (ry: 0.19, z: 0.43), dt: 0.59, eta: 3.1h
[INFO]: 2023-11-02 21:20:14,348 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0977, cls: 0.0385, iou: 0.0931), misc (ry: 0.18, z: 0.42), dt: 0.59, eta: 3.1h
[INFO]: 2023-11-02 21:22:30,283 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0451, iou: 0.1000), misc (ry: 0.19, z: 0.37), dt: 0.59, eta: 3.0h
[INFO]: 2023-11-02 21:24:43,328 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0969, cls: 0.0427, iou: 0.0947), misc (ry: 0.17, z: 0.37), dt: 0.59, eta: 3.0h
[INFO]: 2023-11-02 21:26:59,438 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0908, cls: 0.0417, iou: 0.0939), misc (ry: 0.16, z: 0.37), dt: 0.59, eta: 2.9h
[INFO]: 2023-11-02 21:29:14,931 iter: 32250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1059, cls: 0.0403, iou: 0.0953), misc (ry: 0.19, z: 0.39), dt: 0.59, eta: 2.9h
[INFO]: 2023-11-02 21:31:30,255 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0983, cls: 0.0412, iou: 0.0974), misc (ry: 0.19, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-11-02 21:33:43,164 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0833, cls: 0.0376, iou: 0.0898), misc (ry: 0.17, z: 0.38), dt: 0.59, eta: 2.8h
[INFO]: 2023-11-02 21:35:55,839 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0905, cls: 0.0416, iou: 0.0958), misc (ry: 0.17, z: 0.37), dt: 0.58, eta: 2.8h
[INFO]: 2023-11-02 21:38:13,663 iter: 33250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0992, cls: 0.0444, iou: 0.0950), misc (ry: 0.19, z: 0.36), dt: 0.58, eta: 2.7h
[INFO]: 2023-11-02 21:40:27,298 iter: 33500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1003, cls: 0.0407, iou: 0.0951), misc (ry: 0.20, z: 0.37), dt: 0.58, eta: 2.7h
[INFO]: 2023-11-02 21:42:40,731 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0924, cls: 0.0396, iou: 0.0944), misc (ry: 0.17, z: 0.39), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-02 21:44:58,420 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0937, cls: 0.0427, iou: 0.0941), misc (ry: 0.18, z: 0.38), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-02 21:47:14,472 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0947, cls: 0.0415, iou: 0.0939), misc (ry: 0.17, z: 0.35), dt: 0.58, eta: 2.6h
[INFO]: 2023-11-02 21:49:29,507 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0984, cls: 0.0423, iou: 0.0961), misc (ry: 0.18, z: 0.39), dt: 0.58, eta: 2.5h
[INFO]: 2023-11-02 21:51:44,598 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0877, cls: 0.0419, iou: 0.0933), misc (ry: 0.17, z: 0.37), dt: 0.58, eta: 2.5h
[INFO]: 2023-11-02 21:54:00,524 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0756, cls: 0.0381, iou: 0.0856), misc (ry: 0.15, z: 0.32), dt: 0.58, eta: 2.4h
[INFO]: 2023-11-02 21:56:11,954 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0813, cls: 0.0391, iou: 0.0868), misc (ry: 0.16, z: 0.37), dt: 0.58, eta: 2.4h
[INFO]: 2023-11-02 21:58:24,832 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0827, cls: 0.0383, iou: 0.0883), misc (ry: 0.15, z: 0.35), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-02 22:00:38,401 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0975, cls: 0.0385, iou: 0.0882), misc (ry: 0.20, z: 0.37), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-02 22:02:53,748 iter: 36000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0995, cls: 0.0408, iou: 0.0948), misc (ry: 0.21, z: 0.36), dt: 0.58, eta: 2.3h
[INFO]: 2023-11-02 22:05:05,472 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0821, cls: 0.0411, iou: 0.0907), misc (ry: 0.17, z: 0.32), dt: 0.58, eta: 2.2h
[INFO]: 2023-11-02 22:07:19,238 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0801, cls: 0.0392, iou: 0.0889), misc (ry: 0.16, z: 0.36), dt: 0.58, eta: 2.2h
[INFO]: 2023-11-02 22:09:32,640 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0718, cls: 0.0380, iou: 0.0837), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-02 22:11:44,608 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0781, cls: 0.0373, iou: 0.0855), misc (ry: 0.16, z: 0.36), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-02 22:13:59,740 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0401, iou: 0.0850), misc (ry: 0.15, z: 0.33), dt: 0.58, eta: 2.1h
[INFO]: 2023-11-02 22:16:08,565 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0742, cls: 0.0346, iou: 0.0860), misc (ry: 0.16, z: 0.37), dt: 0.58, eta: 2.0h
[INFO]: 2023-11-02 22:18:23,379 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0713, cls: 0.0370, iou: 0.0819), misc (ry: 0.15, z: 0.33), dt: 0.58, eta: 2.0h
[INFO]: 2023-11-02 22:20:36,216 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0730, cls: 0.0368, iou: 0.0842), misc (ry: 0.15, z: 0.34), dt: 0.58, eta: 1.9h
[INFO]: 2023-11-02 22:22:51,677 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0675, cls: 0.0369, iou: 0.0807), misc (ry: 0.15, z: 0.31), dt: 0.58, eta: 1.9h
[INFO]: 2023-11-02 22:25:09,324 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0651, cls: 0.0363, iou: 0.0791), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 1.8h
[INFO]: 2023-11-02 22:27:23,047 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0657, cls: 0.0359, iou: 0.0795), misc (ry: 0.14, z: 0.31), dt: 0.58, eta: 1.8h
[INFO]: 2023-11-02 22:29:36,596 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0708, cls: 0.0379, iou: 0.0823), misc (ry: 0.14, z: 0.33), dt: 0.58, eta: 1.8h
[INFO]: 2023-11-02 22:31:49,461 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0614, cls: 0.0336, iou: 0.0752), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 1.7h
[INFO]: 2023-11-02 22:34:04,889 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0674, cls: 0.0376, iou: 0.0830), misc (ry: 0.15, z: 0.32), dt: 0.58, eta: 1.7h
[INFO]: 2023-11-02 22:36:21,335 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0587, cls: 0.0379, iou: 0.0782), misc (ry: 0.13, z: 0.29), dt: 0.58, eta: 1.6h
[INFO]: 2023-11-02 22:38:39,056 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0632, cls: 0.0351, iou: 0.0793), misc (ry: 0.14, z: 0.30), dt: 0.58, eta: 1.6h
[INFO]: 2023-11-02 22:40:53,531 testing 1000/3769, dt: 0.134, eta: 6.2m
[INFO]: 2023-11-02 22:43:04,404 testing 2000/3769, dt: 0.132, eta: 3.9m
[INFO]: 2023-11-02 22:45:16,592 testing 3000/3769, dt: 0.132, eta: 1.7m
[INFO]: 2023-11-02 22:47:06,898 test_iter 40000 2d car --> easy: 0.8642, mod: 0.8191, hard: 0.6648
[INFO]: 2023-11-02 22:47:06,899 test_iter 40000 gr car --> easy: 0.2352, mod: 0.1827, hard: 0.1652
[INFO]: 2023-11-02 22:47:06,900 test_iter 40000 3d car --> easy: 0.1872, mod: 0.1545, hard: 0.1297
[INFO]: 2023-11-02 22:47:06,901 test_iter 40000 2d pedestrian --> easy: 0.6563, mod: 0.5798, hard: 0.4972
[INFO]: 2023-11-02 22:47:06,901 test_iter 40000 gr pedestrian --> easy: 0.1093, mod: 0.1102, hard: 0.1038
[INFO]: 2023-11-02 22:47:06,902 test_iter 40000 3d pedestrian --> easy: 0.1048, mod: 0.1004, hard: 0.1001
[INFO]: 2023-11-02 22:47:06,903 test_iter 40000 2d cyclist --> easy: 0.6552, mod: 0.4788, hard: 0.4118
[INFO]: 2023-11-02 22:47:06,903 test_iter 40000 gr cyclist --> easy: 0.0349, mod: 0.0280, hard: 0.0291
[INFO]: 2023-11-02 22:47:06,904 test_iter 40000 3d cyclist --> easy: 0.0341, mod: 0.0269, hard: 0.0187
[INFO]: 2023-11-02 22:49:22,842 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0617, cls: 0.0361, iou: 0.0764), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.6h
[INFO]: 2023-11-02 22:51:35,599 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0553, cls: 0.0329, iou: 0.0737), misc (ry: 0.13, z: 0.29), dt: 0.59, eta: 1.6h
[INFO]: 2023-11-02 22:53:48,829 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0574, cls: 0.0328, iou: 0.0744), misc (ry: 0.13, z: 0.30), dt: 0.59, eta: 1.5h
[INFO]: 2023-11-02 22:56:02,728 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0324, iou: 0.0746), misc (ry: 0.13, z: 0.30), dt: 0.59, eta: 1.5h
[INFO]: 2023-11-02 22:58:15,847 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0605, cls: 0.0348, iou: 0.0747), misc (ry: 0.14, z: 0.28), dt: 0.59, eta: 1.4h
[INFO]: 2023-11-02 23:00:28,125 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0584, cls: 0.0343, iou: 0.0750), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.4h
[INFO]: 2023-11-02 23:02:44,072 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0596, cls: 0.0346, iou: 0.0763), misc (ry: 0.14, z: 0.29), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-02 23:04:57,798 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0529, cls: 0.0327, iou: 0.0720), misc (ry: 0.13, z: 0.28), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-02 23:07:09,270 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0578, cls: 0.0332, iou: 0.0725), misc (ry: 0.14, z: 0.28), dt: 0.59, eta: 1.3h
[INFO]: 2023-11-02 23:09:22,470 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0590, cls: 0.0335, iou: 0.0738), misc (ry: 0.14, z: 0.30), dt: 0.59, eta: 1.2h
[INFO]: 2023-11-02 23:11:40,117 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0575, cls: 0.0344, iou: 0.0718), misc (ry: 0.14, z: 0.30), dt: 0.59, eta: 1.2h
[INFO]: 2023-11-02 23:13:53,389 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0570, cls: 0.0339, iou: 0.0717), misc (ry: 0.14, z: 0.28), dt: 0.59, eta: 1.1h
[INFO]: 2023-11-02 23:16:04,889 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0541, cls: 0.0336, iou: 0.0706), misc (ry: 0.13, z: 0.27), dt: 0.59, eta: 1.1h
[INFO]: 2023-11-02 23:18:19,368 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0537, cls: 0.0342, iou: 0.0707), misc (ry: 0.13, z: 0.28), dt: 0.58, eta: 1.1h
[INFO]: 2023-11-02 23:20:33,161 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0534, cls: 0.0320, iou: 0.0683), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 1.0h
[INFO]: 2023-11-02 23:22:45,560 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0525, cls: 0.0347, iou: 0.0708), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 58.4m
[INFO]: 2023-11-02 23:25:01,671 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0538, cls: 0.0346, iou: 0.0711), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 56.0m
[INFO]: 2023-11-02 23:27:15,282 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0517, cls: 0.0337, iou: 0.0679), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 53.5m
[INFO]: 2023-11-02 23:29:28,177 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0519, cls: 0.0303, iou: 0.0690), misc (ry: 0.13, z: 0.29), dt: 0.58, eta: 51.1m
[INFO]: 2023-11-02 23:31:42,673 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0578, cls: 0.0333, iou: 0.0683), misc (ry: 0.14, z: 0.27), dt: 0.58, eta: 48.6m
[INFO]: 2023-11-02 23:33:55,259 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0499, cls: 0.0322, iou: 0.0689), misc (ry: 0.13, z: 0.27), dt: 0.58, eta: 46.2m
[INFO]: 2023-11-02 23:36:09,027 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0506, cls: 0.0323, iou: 0.0655), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 43.7m
[INFO]: 2023-11-02 23:38:24,049 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0500, cls: 0.0330, iou: 0.0681), misc (ry: 0.12, z: 0.27), dt: 0.58, eta: 41.3m
[INFO]: 2023-11-02 23:40:37,664 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0510, cls: 0.0323, iou: 0.0668), misc (ry: 0.13, z: 0.26), dt: 0.58, eta: 38.8m
[INFO]: 2023-11-02 23:42:49,245 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0452, cls: 0.0313, iou: 0.0635), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 36.4m
[INFO]: 2023-11-02 23:45:05,542 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0478, cls: 0.0333, iou: 0.0652), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 33.9m
[INFO]: 2023-11-02 23:47:18,540 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0492, cls: 0.0319, iou: 0.0656), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 31.5m
[INFO]: 2023-11-02 23:49:31,249 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0478, cls: 0.0321, iou: 0.0650), misc (ry: 0.13, z: 0.25), dt: 0.58, eta: 29.1m
[INFO]: 2023-11-02 23:51:46,748 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0497, cls: 0.0325, iou: 0.0641), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 26.6m
[INFO]: 2023-11-02 23:54:00,187 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0439, cls: 0.0305, iou: 0.0620), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 24.2m
[INFO]: 2023-11-02 23:56:12,893 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0483, cls: 0.0329, iou: 0.0650), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 21.8m
[INFO]: 2023-11-02 23:58:26,468 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0455, cls: 0.0319, iou: 0.0629), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 19.4m
[INFO]: 2023-11-03 00:00:41,641 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0314, iou: 0.0635), misc (ry: 0.12, z: 0.26), dt: 0.58, eta: 16.9m
[INFO]: 2023-11-03 00:02:54,463 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0384, cls: 0.0294, iou: 0.0579), misc (ry: 0.11, z: 0.23), dt: 0.58, eta: 14.5m
[INFO]: 2023-11-03 00:05:10,183 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0442, cls: 0.0319, iou: 0.0616), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 12.1m
[INFO]: 2023-11-03 00:07:24,933 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0410, cls: 0.0309, iou: 0.0576), misc (ry: 0.11, z: 0.23), dt: 0.58, eta: 9.7m
[INFO]: 2023-11-03 00:09:39,759 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0471, cls: 0.0316, iou: 0.0616), misc (ry: 0.12, z: 0.25), dt: 0.58, eta: 7.3m
[INFO]: 2023-11-03 00:11:54,035 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0451, cls: 0.0325, iou: 0.0632), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 4.8m
[INFO]: 2023-11-03 00:14:07,618 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0428, cls: 0.0315, iou: 0.0604), misc (ry: 0.12, z: 0.24), dt: 0.58, eta: 2.4m
[INFO]: 2023-11-03 00:16:20,630 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0399, cls: 0.0288, iou: 0.0588), misc (ry: 0.11, z: 0.25), dt: 0.58, eta: 0.6s
[INFO]: 2023-11-03 00:18:36,118 testing 1000/3769, dt: 0.135, eta: 6.2m
[INFO]: 2023-11-03 00:20:51,151 testing 2000/3769, dt: 0.135, eta: 4.0m
[INFO]: 2023-11-03 00:23:05,934 testing 3000/3769, dt: 0.135, eta: 1.7m
[INFO]: 2023-11-03 00:24:59,365 test_iter 50000 2d car --> easy: 0.8770, mod: 0.8237, hard: 0.6670
[INFO]: 2023-11-03 00:24:59,366 test_iter 50000 gr car --> easy: 0.2578, mod: 0.2098, hard: 0.1762
[INFO]: 2023-11-03 00:24:59,367 test_iter 50000 3d car --> easy: 0.1974, mod: 0.1640, hard: 0.1355
[INFO]: 2023-11-03 00:24:59,368 test_iter 50000 2d pedestrian --> easy: 0.7247, mod: 0.5828, hard: 0.5016
[INFO]: 2023-11-03 00:24:59,368 test_iter 50000 gr pedestrian --> easy: 0.1067, mod: 0.1089, hard: 0.1028
[INFO]: 2023-11-03 00:24:59,369 test_iter 50000 3d pedestrian --> easy: 0.1045, mod: 0.1034, hard: 0.1013
[INFO]: 2023-11-03 00:24:59,369 test_iter 50000 2d cyclist --> easy: 0.7289, mod: 0.4853, hard: 0.4168
[INFO]: 2023-11-03 00:24:59,370 test_iter 50000 gr cyclist --> easy: 0.0531, mod: 0.0360, hard: 0.0347
[INFO]: 2023-11-03 00:24:59,370 test_iter 50000 3d cyclist --> easy: 0.0489, mod: 0.0318, hard: 0.0331
