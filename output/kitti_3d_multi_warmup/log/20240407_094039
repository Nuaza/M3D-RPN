[INFO]: 2024-04-07 09:40:39,157 ==开始处理数据集==
[INFO]: 2024-04-07 09:40:39,157 命中imdb缓存.
[INFO]: 2024-04-07 09:40:40,388 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-07 09:40:40,389 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-07 09:40:42,730 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-07 09:40:42,730 ==数据集处理完毕==
[INFO]: 2024-04-07 09:40:45,733 ==开始生成anchors==
[INFO]: 2024-04-07 09:40:45,734 ==anchors生成完毕==
[INFO]: 2024-04-07 09:40:48,737 ==开始计算bbox参数==
[INFO]: 2024-04-07 09:40:48,737 命中bbox的回归均值缓存
[INFO]: 2024-04-07 09:40:48,738 命中bbox的回归标准差缓存
[INFO]: 2024-04-07 09:40:48,738 ==bbox参数计算完毕==
[INFO]: 2024-04-07 09:40:56,774 设置保存完成
[INFO]: 2024-04-07 09:40:59,778 训练配置一览
[INFO]: 2024-04-07 09:41:01,786 训练配置: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2024-04-07 09:41:07,302 装载完成
[INFO]: 2024-04-07 09:41:10,305 神经网络结构一览
[INFO]: 2024-04-07 09:41:12,307 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-07 09:43:40,045 iter: 250, acc (bg: 0.97, fg: 0.34, iou: 0.60), loss (bbox_3d: 2.4231, cls: 0.6608, iou: 0.5165), misc (ry: 1.58, z: 2.83), dt: 0.59, eta: 8.2h
[INFO]: 2024-04-07 09:46:07,063 iter: 500, acc (bg: 0.99, fg: 0.68, iou: 0.65), loss (bbox_3d: 1.6903, cls: 0.3567, iou: 0.4351), misc (ry: 1.25, z: 2.20), dt: 0.59, eta: 8.1h
[INFO]: 2024-04-07 09:48:33,037 iter: 750, acc (bg: 0.99, fg: 0.75, iou: 0.68), loss (bbox_3d: 1.4882, cls: 0.3184, iou: 0.3973), misc (ry: 1.27, z: 1.78), dt: 0.59, eta: 8.0h
[INFO]: 2024-04-07 09:50:59,397 iter: 1000, acc (bg: 0.99, fg: 0.80, iou: 0.70), loss (bbox_3d: 1.3084, cls: 0.2557, iou: 0.3605), misc (ry: 1.15, z: 1.73), dt: 0.59, eta: 8.0h
[INFO]: 2024-04-07 09:53:24,757 iter: 1250, acc (bg: 0.99, fg: 0.84, iou: 0.72), loss (bbox_3d: 1.2059, cls: 0.2185, iou: 0.3319), misc (ry: 1.06, z: 1.76), dt: 0.59, eta: 7.9h
[INFO]: 2024-04-07 09:55:54,550 iter: 1500, acc (bg: 0.99, fg: 0.87, iou: 0.75), loss (bbox_3d: 0.9675, cls: 0.1856, iou: 0.2993), misc (ry: 0.93, z: 1.35), dt: 0.59, eta: 7.9h
[INFO]: 2024-04-07 09:58:21,270 iter: 1750, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0547, cls: 0.1999, iou: 0.2962), misc (ry: 0.95, z: 1.44), dt: 0.59, eta: 7.9h
[INFO]: 2024-04-07 10:00:45,471 iter: 2000, acc (bg: 0.99, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.9169, cls: 0.1730, iou: 0.2763), misc (ry: 0.80, z: 1.40), dt: 0.59, eta: 7.8h
[INFO]: 2024-04-07 10:03:10,725 iter: 2250, acc (bg: 0.99, fg: 0.88, iou: 0.76), loss (bbox_3d: 0.9951, cls: 0.1734, iou: 0.2820), misc (ry: 0.96, z: 1.35), dt: 0.59, eta: 7.8h
[INFO]: 2024-04-07 10:05:36,691 iter: 2500, acc (bg: 1.00, fg: 0.90, iou: 0.78), loss (bbox_3d: 0.8880, cls: 0.1532, iou: 0.2594), misc (ry: 0.84, z: 1.28), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-07 10:08:04,581 iter: 2750, acc (bg: 1.00, fg: 0.88, iou: 0.78), loss (bbox_3d: 0.9190, cls: 0.1615, iou: 0.2595), misc (ry: 0.85, z: 1.29), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-07 10:10:30,115 iter: 3000, acc (bg: 1.00, fg: 0.89, iou: 0.78), loss (bbox_3d: 0.8216, cls: 0.1513, iou: 0.2508), misc (ry: 0.84, z: 1.18), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-07 10:12:57,844 iter: 3250, acc (bg: 1.00, fg: 0.89, iou: 0.78), loss (bbox_3d: 0.8608, cls: 0.1589, iou: 0.2530), misc (ry: 0.82, z: 1.19), dt: 0.59, eta: 7.6h
[INFO]: 2024-04-07 10:15:22,060 iter: 3500, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7943, cls: 0.1510, iou: 0.2405), misc (ry: 0.72, z: 1.20), dt: 0.59, eta: 7.6h
[INFO]: 2024-04-07 10:17:50,549 iter: 3750, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7103, cls: 0.1475, iou: 0.2308), misc (ry: 0.75, z: 1.07), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-07 10:20:15,768 iter: 4000, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.8387, cls: 0.1542, iou: 0.2463), misc (ry: 0.82, z: 1.14), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-07 10:22:46,363 iter: 4250, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.8216, cls: 0.1639, iou: 0.2462), misc (ry: 0.77, z: 1.14), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-07 10:25:09,778 iter: 4500, acc (bg: 1.00, fg: 0.89, iou: 0.81), loss (bbox_3d: 0.7288, cls: 0.1447, iou: 0.2238), misc (ry: 0.72, z: 1.11), dt: 0.59, eta: 7.4h
[INFO]: 2024-04-07 10:27:32,364 iter: 4750, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.7610, cls: 0.1401, iou: 0.2257), misc (ry: 0.74, z: 1.08), dt: 0.59, eta: 7.4h
[INFO]: 2024-04-07 10:29:55,127 iter: 5000, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6287, cls: 0.1241, iou: 0.2145), misc (ry: 0.65, z: 1.02), dt: 0.58, eta: 7.3h
[INFO]: 2024-04-07 10:32:17,398 iter: 5250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6780, cls: 0.1304, iou: 0.2196), misc (ry: 0.72, z: 1.05), dt: 0.58, eta: 7.3h
[INFO]: 2024-04-07 10:34:41,273 iter: 5500, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6314, cls: 0.1327, iou: 0.2147), misc (ry: 0.64, z: 1.00), dt: 0.58, eta: 7.2h
[INFO]: 2024-04-07 10:37:08,235 iter: 5750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.6364, cls: 0.1207, iou: 0.2042), misc (ry: 0.68, z: 1.00), dt: 0.58, eta: 7.2h
[INFO]: 2024-04-07 10:39:39,641 iter: 6000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5873, cls: 0.1187, iou: 0.2082), misc (ry: 0.64, z: 0.91), dt: 0.58, eta: 7.1h
[INFO]: 2024-04-07 10:42:09,479 iter: 6250, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6515, cls: 0.1255, iou: 0.2098), misc (ry: 0.73, z: 0.96), dt: 0.59, eta: 7.1h
[INFO]: 2024-04-07 10:44:39,416 iter: 6500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.5882, cls: 0.1239, iou: 0.2026), misc (ry: 0.62, z: 0.92), dt: 0.59, eta: 7.1h
[INFO]: 2024-04-07 10:47:06,427 iter: 6750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5688, cls: 0.1143, iou: 0.1956), misc (ry: 0.57, z: 0.87), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-07 10:49:33,148 iter: 7000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5630, cls: 0.1043, iou: 0.1966), misc (ry: 0.62, z: 0.89), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-07 10:51:59,116 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5192, cls: 0.1050, iou: 0.1953), misc (ry: 0.60, z: 0.84), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-07 10:54:31,773 iter: 7500, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5270, cls: 0.1104, iou: 0.1920), misc (ry: 0.53, z: 0.90), dt: 0.59, eta: 6.9h
[INFO]: 2024-04-07 10:56:57,848 iter: 7750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5251, cls: 0.1026, iou: 0.1914), misc (ry: 0.57, z: 0.89), dt: 0.59, eta: 6.9h
[INFO]: 2024-04-07 10:59:21,953 iter: 8000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5009, cls: 0.1095, iou: 0.1884), misc (ry: 0.54, z: 0.81), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-07 11:01:48,479 iter: 8250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.4941, cls: 0.1011, iou: 0.1882), misc (ry: 0.50, z: 0.85), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-07 11:04:11,186 iter: 8500, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5733, cls: 0.1163, iou: 0.1985), misc (ry: 0.62, z: 0.89), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-07 11:06:36,962 iter: 8750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.4840, cls: 0.1089, iou: 0.1888), misc (ry: 0.57, z: 0.84), dt: 0.59, eta: 6.7h
[INFO]: 2024-04-07 11:09:02,960 iter: 9000, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5464, cls: 0.1223, iou: 0.1950), misc (ry: 0.55, z: 0.89), dt: 0.59, eta: 6.7h
[INFO]: 2024-04-07 11:11:28,965 iter: 9250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5021, cls: 0.0991, iou: 0.1883), misc (ry: 0.55, z: 0.85), dt: 0.59, eta: 6.6h
[INFO]: 2024-04-07 11:13:51,530 iter: 9500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4737, cls: 0.0957, iou: 0.1835), misc (ry: 0.52, z: 0.90), dt: 0.59, eta: 6.6h
[INFO]: 2024-04-07 11:16:14,834 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4836, cls: 0.0925, iou: 0.1853), misc (ry: 0.51, z: 0.88), dt: 0.58, eta: 6.5h
[INFO]: 2024-04-07 11:18:38,900 iter: 10000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4491, cls: 0.0943, iou: 0.1788), misc (ry: 0.47, z: 0.85), dt: 0.58, eta: 6.5h
[INFO]: 2024-04-07 11:27:19,157 test_iter 10000 2d car --> easy: 0.7754, mod: 0.7275, hard: 0.6305
[INFO]: 2024-04-07 11:27:19,158 test_iter 10000 gr car --> easy: 0.0468, mod: 0.0368, hard: 0.0353
[INFO]: 2024-04-07 11:27:19,159 test_iter 10000 3d car --> easy: 0.0225, mod: 0.0231, hard: 0.0200
[INFO]: 2024-04-07 11:27:19,159 test_iter 10000 2d pedestrian --> easy: 0.5649, mod: 0.4876, hard: 0.4111
[INFO]: 2024-04-07 11:27:19,160 test_iter 10000 gr pedestrian --> easy: 0.0247, mod: 0.0253, hard: 0.0173
[INFO]: 2024-04-07 11:27:19,160 test_iter 10000 3d pedestrian --> easy: 0.0186, mod: 0.0145, hard: 0.0119
[INFO]: 2024-04-07 11:27:19,161 test_iter 10000 2d cyclist --> easy: 0.1234, mod: 0.0835, hard: 0.0839
[INFO]: 2024-04-07 11:27:19,162 test_iter 10000 gr cyclist --> easy: 0.0013, mod: 0.0013, hard: 0.0013
[INFO]: 2024-04-07 11:27:19,162 test_iter 10000 3d cyclist --> easy: 0.0013, mod: 0.0013, hard: 0.0013
[INFO]: 2024-04-07 11:29:41,860 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4152, cls: 0.0836, iou: 0.1735), misc (ry: 0.48, z: 0.75), dt: 0.64, eta: 7.0h
[INFO]: 2024-04-07 11:32:08,452 iter: 10500, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4219, cls: 0.0929, iou: 0.1725), misc (ry: 0.47, z: 0.75), dt: 0.63, eta: 7.0h
[INFO]: 2024-04-07 11:34:35,357 iter: 10750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4554, cls: 0.0949, iou: 0.1763), misc (ry: 0.56, z: 0.77), dt: 0.63, eta: 6.9h
[INFO]: 2024-04-07 11:36:59,136 iter: 11000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4108, cls: 0.0905, iou: 0.1775), misc (ry: 0.46, z: 0.76), dt: 0.63, eta: 6.8h
[INFO]: 2024-04-07 11:39:33,944 iter: 11250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4088, cls: 0.0871, iou: 0.1707), misc (ry: 0.52, z: 0.72), dt: 0.63, eta: 6.8h
[INFO]: 2024-04-07 11:42:05,568 iter: 11500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4523, cls: 0.0935, iou: 0.1781), misc (ry: 0.49, z: 0.84), dt: 0.63, eta: 6.7h
[INFO]: 2024-04-07 11:44:34,622 iter: 11750, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3936, cls: 0.0862, iou: 0.1662), misc (ry: 0.49, z: 0.73), dt: 0.63, eta: 6.7h
[INFO]: 2024-04-07 11:47:02,427 iter: 12000, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5599, cls: 0.1270, iou: 0.1973), misc (ry: 0.58, z: 0.87), dt: 0.63, eta: 6.6h
[INFO]: 2024-04-07 11:49:33,636 iter: 12250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4905, cls: 0.0994, iou: 0.1834), misc (ry: 0.51, z: 0.83), dt: 0.63, eta: 6.6h
[INFO]: 2024-04-07 11:52:02,125 iter: 12500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4237, cls: 0.0872, iou: 0.1738), misc (ry: 0.48, z: 0.80), dt: 0.63, eta: 6.5h
[INFO]: 2024-04-07 11:54:32,764 iter: 12750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4037, cls: 0.0861, iou: 0.1722), misc (ry: 0.45, z: 0.83), dt: 0.63, eta: 6.5h
[INFO]: 2024-04-07 11:57:02,000 iter: 13000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3846, cls: 0.0855, iou: 0.1653), misc (ry: 0.46, z: 0.72), dt: 0.63, eta: 6.4h
[INFO]: 2024-04-07 11:59:29,256 iter: 13250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3585, cls: 0.0824, iou: 0.1669), misc (ry: 0.40, z: 0.71), dt: 0.63, eta: 6.4h
[INFO]: 2024-04-07 12:01:53,907 iter: 13500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3705, cls: 0.0806, iou: 0.1676), misc (ry: 0.46, z: 0.69), dt: 0.63, eta: 6.3h
[INFO]: 2024-04-07 12:04:17,702 iter: 13750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3195, cls: 0.0775, iou: 0.1623), misc (ry: 0.38, z: 0.69), dt: 0.62, eta: 6.3h
[INFO]: 2024-04-07 12:06:46,292 iter: 14000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3527, cls: 0.0851, iou: 0.1670), misc (ry: 0.38, z: 0.71), dt: 0.62, eta: 6.2h
[INFO]: 2024-04-07 12:09:15,561 iter: 14250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3344, cls: 0.0797, iou: 0.1590), misc (ry: 0.38, z: 0.72), dt: 0.62, eta: 6.2h
[INFO]: 2024-04-07 12:11:43,210 iter: 14500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3221, cls: 0.0802, iou: 0.1594), misc (ry: 0.42, z: 0.63), dt: 0.62, eta: 6.1h
[INFO]: 2024-04-07 12:14:13,689 iter: 14750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3764, cls: 0.0874, iou: 0.1697), misc (ry: 0.42, z: 0.75), dt: 0.62, eta: 6.1h
[INFO]: 2024-04-07 12:16:43,579 iter: 15000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3644, cls: 0.0850, iou: 0.1632), misc (ry: 0.38, z: 0.71), dt: 0.62, eta: 6.0h
[INFO]: 2024-04-07 12:19:08,867 iter: 15250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3233, cls: 0.0756, iou: 0.1518), misc (ry: 0.36, z: 0.69), dt: 0.62, eta: 6.0h
[INFO]: 2024-04-07 12:21:34,251 iter: 15500, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3228, cls: 0.0774, iou: 0.1629), misc (ry: 0.39, z: 0.72), dt: 0.62, eta: 5.9h
[INFO]: 2024-04-07 12:24:00,134 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2802, cls: 0.0692, iou: 0.1464), misc (ry: 0.37, z: 0.58), dt: 0.62, eta: 5.9h
[INFO]: 2024-04-07 12:26:24,908 iter: 16000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3025, cls: 0.0738, iou: 0.1569), misc (ry: 0.41, z: 0.64), dt: 0.62, eta: 5.9h
[INFO]: 2024-04-07 12:28:46,131 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2739, cls: 0.0691, iou: 0.1508), misc (ry: 0.35, z: 0.61), dt: 0.62, eta: 5.8h
[INFO]: 2024-04-07 12:31:10,490 iter: 16500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2905, cls: 0.0743, iou: 0.1541), misc (ry: 0.37, z: 0.63), dt: 0.62, eta: 5.8h
[INFO]: 2024-04-07 12:33:35,960 iter: 16750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2881, cls: 0.0717, iou: 0.1467), misc (ry: 0.39, z: 0.61), dt: 0.62, eta: 5.7h
[INFO]: 2024-04-07 12:36:04,423 iter: 17000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2797, cls: 0.0731, iou: 0.1493), misc (ry: 0.37, z: 0.63), dt: 0.62, eta: 5.7h
[INFO]: 2024-04-07 12:38:32,067 iter: 17250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3272, cls: 0.0724, iou: 0.1500), misc (ry: 0.46, z: 0.63), dt: 0.62, eta: 5.6h
[INFO]: 2024-04-07 12:41:00,532 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2808, cls: 0.0699, iou: 0.1500), misc (ry: 0.38, z: 0.59), dt: 0.62, eta: 5.6h
[INFO]: 2024-04-07 12:43:26,300 iter: 17750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2963, cls: 0.0724, iou: 0.1542), misc (ry: 0.37, z: 0.70), dt: 0.62, eta: 5.5h
[INFO]: 2024-04-07 12:45:57,989 iter: 18000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2721, cls: 0.0708, iou: 0.1458), misc (ry: 0.36, z: 0.58), dt: 0.62, eta: 5.5h
[INFO]: 2024-04-07 12:48:26,159 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2728, cls: 0.0675, iou: 0.1455), misc (ry: 0.36, z: 0.59), dt: 0.62, eta: 5.4h
[INFO]: 2024-04-07 12:50:55,036 iter: 18500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2686, cls: 0.0720, iou: 0.1509), misc (ry: 0.37, z: 0.59), dt: 0.62, eta: 5.4h
[INFO]: 2024-04-07 12:53:22,225 iter: 18750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2558, cls: 0.0712, iou: 0.1439), misc (ry: 0.34, z: 0.61), dt: 0.61, eta: 5.3h
[INFO]: 2024-04-07 12:55:52,615 iter: 19000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2484, cls: 0.0718, iou: 0.1460), misc (ry: 0.31, z: 0.60), dt: 0.61, eta: 5.3h
[INFO]: 2024-04-07 12:58:21,885 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2319, cls: 0.0640, iou: 0.1375), misc (ry: 0.31, z: 0.57), dt: 0.61, eta: 5.2h
[INFO]: 2024-04-07 13:00:47,636 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2740, cls: 0.0640, iou: 0.1420), misc (ry: 0.38, z: 0.67), dt: 0.61, eta: 5.2h
[INFO]: 2024-04-07 13:03:10,318 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2358, cls: 0.0627, iou: 0.1368), misc (ry: 0.34, z: 0.59), dt: 0.61, eta: 5.2h
[INFO]: 2024-04-07 13:05:37,551 iter: 20000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2620, cls: 0.0663, iou: 0.1416), misc (ry: 0.32, z: 0.62), dt: 0.61, eta: 5.1h
[INFO]: 2024-04-07 13:14:21,468 test_iter 20000 2d car --> easy: 0.8721, mod: 0.8367, hard: 0.6786
[INFO]: 2024-04-07 13:14:21,469 test_iter 20000 gr car --> easy: 0.1156, mod: 0.0933, hard: 0.0720
[INFO]: 2024-04-07 13:14:21,469 test_iter 20000 3d car --> easy: 0.0724, mod: 0.0591, hard: 0.0522
[INFO]: 2024-04-07 13:14:21,470 test_iter 20000 2d pedestrian --> easy: 0.6497, mod: 0.5710, hard: 0.4944
[INFO]: 2024-04-07 13:14:21,471 test_iter 20000 gr pedestrian --> easy: 0.0187, mod: 0.0167, hard: 0.0163
[INFO]: 2024-04-07 13:14:21,471 test_iter 20000 3d pedestrian --> easy: 0.0130, mod: 0.0132, hard: 0.0131
[INFO]: 2024-04-07 13:14:21,472 test_iter 20000 2d cyclist --> easy: 0.3385, mod: 0.2789, hard: 0.2255
[INFO]: 2024-04-07 13:14:21,472 test_iter 20000 gr cyclist --> easy: 0.0026, mod: 0.0025, hard: 0.0025
[INFO]: 2024-04-07 13:14:21,473 test_iter 20000 3d cyclist --> easy: 0.0023, mod: 0.0023, hard: 0.0023
[INFO]: 2024-04-07 13:16:50,777 iter: 20250, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2527, cls: 0.0677, iou: 0.1432), misc (ry: 0.36, z: 0.54), dt: 0.64, eta: 5.3h
[INFO]: 2024-04-07 13:19:20,884 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2356, cls: 0.0626, iou: 0.1401), misc (ry: 0.38, z: 0.55), dt: 0.64, eta: 5.2h
[INFO]: 2024-04-07 13:21:50,315 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2371, cls: 0.0653, iou: 0.1394), misc (ry: 0.31, z: 0.58), dt: 0.64, eta: 5.2h
[INFO]: 2024-04-07 13:24:19,960 iter: 21000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2269, cls: 0.0646, iou: 0.1352), misc (ry: 0.27, z: 0.54), dt: 0.64, eta: 5.1h
[INFO]: 2024-04-07 13:26:46,915 iter: 21250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2262, cls: 0.0641, iou: 0.1380), misc (ry: 0.34, z: 0.54), dt: 0.64, eta: 5.1h
[INFO]: 2024-04-07 13:29:12,560 iter: 21500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2387, cls: 0.0645, iou: 0.1365), misc (ry: 0.33, z: 0.54), dt: 0.64, eta: 5.0h
[INFO]: 2024-04-07 13:31:38,319 iter: 21750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2136, cls: 0.0613, iou: 0.1340), misc (ry: 0.30, z: 0.54), dt: 0.64, eta: 5.0h
[INFO]: 2024-04-07 13:34:07,578 iter: 22000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2286, cls: 0.0629, iou: 0.1349), misc (ry: 0.31, z: 0.54), dt: 0.64, eta: 4.9h
[INFO]: 2024-04-07 13:36:35,710 iter: 22250, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2202, cls: 0.0583, iou: 0.1338), misc (ry: 0.31, z: 0.48), dt: 0.63, eta: 4.9h
[INFO]: 2024-04-07 13:39:05,876 iter: 22500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2169, cls: 0.0591, iou: 0.1322), misc (ry: 0.32, z: 0.53), dt: 0.63, eta: 4.8h
[INFO]: 2024-04-07 13:41:29,479 iter: 22750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2652, cls: 0.0631, iou: 0.1399), misc (ry: 0.38, z: 0.67), dt: 0.63, eta: 4.8h
[INFO]: 2024-04-07 13:43:59,051 iter: 23000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2397, cls: 0.0640, iou: 0.1412), misc (ry: 0.34, z: 0.62), dt: 0.63, eta: 4.8h
[INFO]: 2024-04-07 13:46:24,710 iter: 23250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1990, cls: 0.0611, iou: 0.1302), misc (ry: 0.26, z: 0.54), dt: 0.63, eta: 4.7h
[INFO]: 2024-04-07 13:48:54,868 iter: 23500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2059, cls: 0.0598, iou: 0.1288), misc (ry: 0.27, z: 0.60), dt: 0.63, eta: 4.7h
[INFO]: 2024-04-07 13:51:30,569 iter: 23750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1957, cls: 0.0612, iou: 0.1327), misc (ry: 0.25, z: 0.52), dt: 0.63, eta: 4.6h
[INFO]: 2024-04-07 13:54:00,566 iter: 24000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1940, cls: 0.0592, iou: 0.1316), misc (ry: 0.27, z: 0.54), dt: 0.63, eta: 4.6h
[INFO]: 2024-04-07 13:56:24,106 iter: 24250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1861, cls: 0.0569, iou: 0.1247), misc (ry: 0.24, z: 0.54), dt: 0.63, eta: 4.5h
[INFO]: 2024-04-07 13:58:50,167 iter: 24500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1931, cls: 0.0558, iou: 0.1263), misc (ry: 0.28, z: 0.55), dt: 0.63, eta: 4.5h
[INFO]: 2024-04-07 14:01:20,687 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1967, cls: 0.0557, iou: 0.1281), misc (ry: 0.27, z: 0.54), dt: 0.63, eta: 4.4h
[INFO]: 2024-04-07 14:03:50,580 iter: 25000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1739, cls: 0.0593, iou: 0.1265), misc (ry: 0.26, z: 0.52), dt: 0.63, eta: 4.4h
[INFO]: 2024-04-07 14:06:15,766 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1702, cls: 0.0538, iou: 0.1207), misc (ry: 0.24, z: 0.49), dt: 0.63, eta: 4.3h
[INFO]: 2024-04-07 14:08:43,371 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1695, cls: 0.0532, iou: 0.1228), misc (ry: 0.24, z: 0.51), dt: 0.63, eta: 4.3h
[INFO]: 2024-04-07 14:11:10,891 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1794, cls: 0.0531, iou: 0.1211), misc (ry: 0.26, z: 0.49), dt: 0.63, eta: 4.2h
[INFO]: 2024-04-07 14:13:39,684 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1658, cls: 0.0553, iou: 0.1211), misc (ry: 0.24, z: 0.47), dt: 0.63, eta: 4.2h
[INFO]: 2024-04-07 14:16:08,966 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1568, cls: 0.0523, iou: 0.1187), misc (ry: 0.23, z: 0.49), dt: 0.63, eta: 4.1h
[INFO]: 2024-04-07 14:18:36,938 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1663, cls: 0.0511, iou: 0.1225), misc (ry: 0.24, z: 0.51), dt: 0.63, eta: 4.1h
[INFO]: 2024-04-07 14:21:04,393 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1680, cls: 0.0576, iou: 0.1217), misc (ry: 0.26, z: 0.45), dt: 0.63, eta: 4.1h
[INFO]: 2024-04-07 14:23:30,548 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1490, cls: 0.0506, iou: 0.1131), misc (ry: 0.23, z: 0.46), dt: 0.63, eta: 4.0h
[INFO]: 2024-04-07 14:26:00,678 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1617, cls: 0.0530, iou: 0.1176), misc (ry: 0.24, z: 0.47), dt: 0.63, eta: 4.0h
[INFO]: 2024-04-07 14:28:26,343 iter: 27500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1532, cls: 0.0511, iou: 0.1157), misc (ry: 0.22, z: 0.47), dt: 0.63, eta: 3.9h
[INFO]: 2024-04-07 14:30:51,072 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1412, cls: 0.0498, iou: 0.1131), misc (ry: 0.22, z: 0.46), dt: 0.63, eta: 3.9h
[INFO]: 2024-04-07 14:33:15,122 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1416, cls: 0.0484, iou: 0.1130), misc (ry: 0.21, z: 0.47), dt: 0.63, eta: 3.8h
[INFO]: 2024-04-07 14:35:40,779 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1397, cls: 0.0484, iou: 0.1090), misc (ry: 0.23, z: 0.45), dt: 0.63, eta: 3.8h
[INFO]: 2024-04-07 14:38:07,839 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1386, cls: 0.0480, iou: 0.1104), misc (ry: 0.22, z: 0.44), dt: 0.63, eta: 3.7h
[INFO]: 2024-04-07 14:40:36,255 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1423, cls: 0.0506, iou: 0.1101), misc (ry: 0.22, z: 0.44), dt: 0.62, eta: 3.7h
[INFO]: 2024-04-07 14:43:01,553 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1377, cls: 0.0468, iou: 0.1111), misc (ry: 0.22, z: 0.43), dt: 0.62, eta: 3.6h
[INFO]: 2024-04-07 14:45:29,685 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1387, cls: 0.0482, iou: 0.1083), misc (ry: 0.22, z: 0.44), dt: 0.62, eta: 3.6h
[INFO]: 2024-04-07 14:47:59,673 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1463, cls: 0.0494, iou: 0.1130), misc (ry: 0.23, z: 0.47), dt: 0.62, eta: 3.6h
[INFO]: 2024-04-07 14:50:30,821 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1270, cls: 0.0466, iou: 0.1066), misc (ry: 0.20, z: 0.42), dt: 0.62, eta: 3.5h
[INFO]: 2024-04-07 14:52:59,999 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1234, cls: 0.0470, iou: 0.1065), misc (ry: 0.21, z: 0.40), dt: 0.62, eta: 3.5h
[INFO]: 2024-04-07 15:01:37,331 test_iter 30000 2d car --> easy: 0.8924, mod: 0.8191, hard: 0.6676
[INFO]: 2024-04-07 15:01:37,331 test_iter 30000 gr car --> easy: 0.1697, mod: 0.1257, hard: 0.1060
[INFO]: 2024-04-07 15:01:37,331 test_iter 30000 3d car --> easy: 0.1233, mod: 0.0916, hard: 0.0770
[INFO]: 2024-04-07 15:01:37,332 test_iter 30000 2d pedestrian --> easy: 0.6413, mod: 0.5683, hard: 0.4907
[INFO]: 2024-04-07 15:01:37,332 test_iter 30000 gr pedestrian --> easy: 0.0326, mod: 0.0568, hard: 0.0567
[INFO]: 2024-04-07 15:01:37,332 test_iter 30000 3d pedestrian --> easy: 0.0258, mod: 0.0552, hard: 0.0455
[INFO]: 2024-04-07 15:01:37,333 test_iter 30000 2d cyclist --> easy: 0.4436, mod: 0.3336, hard: 0.3263
[INFO]: 2024-04-07 15:01:37,333 test_iter 30000 gr cyclist --> easy: 0.0152, mod: 0.0091, hard: 0.0097
[INFO]: 2024-04-07 15:01:37,333 test_iter 30000 3d cyclist --> easy: 0.0126, mod: 0.0080, hard: 0.0085
[INFO]: 2024-04-07 15:04:03,160 iter: 30250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1241, cls: 0.0451, iou: 0.1060), misc (ry: 0.23, z: 0.46), dt: 0.64, eta: 3.5h
[INFO]: 2024-04-07 15:06:32,067 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1299, cls: 0.0458, iou: 0.1094), misc (ry: 0.20, z: 0.46), dt: 0.64, eta: 3.5h
[INFO]: 2024-04-07 15:09:01,381 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1478, cls: 0.0469, iou: 0.1120), misc (ry: 0.20, z: 0.53), dt: 0.64, eta: 3.4h
[INFO]: 2024-04-07 15:11:30,137 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1336, cls: 0.0457, iou: 0.1077), misc (ry: 0.21, z: 0.44), dt: 0.64, eta: 3.4h
[INFO]: 2024-04-07 15:13:57,877 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1282, cls: 0.0462, iou: 0.1066), misc (ry: 0.21, z: 0.44), dt: 0.64, eta: 3.3h
[INFO]: 2024-04-07 15:16:24,616 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1286, cls: 0.0491, iou: 0.1111), misc (ry: 0.21, z: 0.41), dt: 0.64, eta: 3.3h
[INFO]: 2024-04-07 15:18:49,302 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1111, cls: 0.0427, iou: 0.1008), misc (ry: 0.19, z: 0.41), dt: 0.64, eta: 3.2h
[INFO]: 2024-04-07 15:21:17,124 iter: 32000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1182, cls: 0.0473, iou: 0.1029), misc (ry: 0.19, z: 0.42), dt: 0.64, eta: 3.2h
[INFO]: 2024-04-07 15:23:43,580 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1012, cls: 0.0435, iou: 0.1019), misc (ry: 0.17, z: 0.39), dt: 0.64, eta: 3.1h
[INFO]: 2024-04-07 15:26:09,917 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1183, cls: 0.0473, iou: 0.1057), misc (ry: 0.20, z: 0.40), dt: 0.64, eta: 3.1h
[INFO]: 2024-04-07 15:28:35,984 iter: 32750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1134, cls: 0.0450, iou: 0.1034), misc (ry: 0.19, z: 0.40), dt: 0.64, eta: 3.0h
[INFO]: 2024-04-07 15:31:04,420 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1160, cls: 0.0436, iou: 0.1028), misc (ry: 0.19, z: 0.41), dt: 0.64, eta: 3.0h
[INFO]: 2024-04-07 15:33:37,175 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1106, cls: 0.0438, iou: 0.1018), misc (ry: 0.19, z: 0.40), dt: 0.64, eta: 3.0h
[INFO]: 2024-04-07 15:36:06,887 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1094, cls: 0.0438, iou: 0.0993), misc (ry: 0.19, z: 0.37), dt: 0.64, eta: 2.9h
[INFO]: 2024-04-07 15:38:33,684 iter: 33750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1142, cls: 0.0464, iou: 0.1012), misc (ry: 0.19, z: 0.38), dt: 0.64, eta: 2.9h
[INFO]: 2024-04-07 15:40:59,915 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1031, cls: 0.0424, iou: 0.0968), misc (ry: 0.18, z: 0.40), dt: 0.63, eta: 2.8h
[INFO]: 2024-04-07 15:43:25,707 iter: 34250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1014, cls: 0.0420, iou: 0.0977), misc (ry: 0.17, z: 0.38), dt: 0.63, eta: 2.8h
[INFO]: 2024-04-07 15:45:52,461 iter: 34500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1129, cls: 0.0435, iou: 0.1012), misc (ry: 0.20, z: 0.39), dt: 0.63, eta: 2.7h
[INFO]: 2024-04-07 15:48:17,489 iter: 34750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0979, cls: 0.0452, iou: 0.0992), misc (ry: 0.17, z: 0.38), dt: 0.63, eta: 2.7h
[INFO]: 2024-04-07 15:50:41,592 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0907, cls: 0.0403, iou: 0.0916), misc (ry: 0.16, z: 0.37), dt: 0.63, eta: 2.6h
[INFO]: 2024-04-07 15:53:06,879 iter: 35250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0920, cls: 0.0411, iou: 0.0933), misc (ry: 0.17, z: 0.36), dt: 0.63, eta: 2.6h
[INFO]: 2024-04-07 15:55:35,133 iter: 35500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1015, cls: 0.0424, iou: 0.0968), misc (ry: 0.18, z: 0.39), dt: 0.63, eta: 2.5h
[INFO]: 2024-04-07 15:58:06,250 iter: 35750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0971, cls: 0.0437, iou: 0.0952), misc (ry: 0.18, z: 0.37), dt: 0.63, eta: 2.5h
[INFO]: 2024-04-07 16:00:31,079 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0894, cls: 0.0393, iou: 0.0907), misc (ry: 0.17, z: 0.37), dt: 0.63, eta: 2.5h
[INFO]: 2024-04-07 16:03:00,002 iter: 36250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1006, cls: 0.0440, iou: 0.0967), misc (ry: 0.18, z: 0.37), dt: 0.63, eta: 2.4h
[INFO]: 2024-04-07 16:05:27,743 iter: 36500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0973, cls: 0.0442, iou: 0.0973), misc (ry: 0.18, z: 0.37), dt: 0.63, eta: 2.4h
[INFO]: 2024-04-07 16:07:55,251 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0854, cls: 0.0406, iou: 0.0896), misc (ry: 0.16, z: 0.34), dt: 0.63, eta: 2.3h
[INFO]: 2024-04-07 16:10:22,162 iter: 37000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0925, cls: 0.0422, iou: 0.0934), misc (ry: 0.16, z: 0.36), dt: 0.63, eta: 2.3h
[INFO]: 2024-04-07 16:12:49,214 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0812, cls: 0.0386, iou: 0.0905), misc (ry: 0.16, z: 0.34), dt: 0.63, eta: 2.2h
[INFO]: 2024-04-07 16:15:17,432 iter: 37500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0891, cls: 0.0406, iou: 0.0918), misc (ry: 0.17, z: 0.36), dt: 0.63, eta: 2.2h
[INFO]: 2024-04-07 16:17:44,613 iter: 37750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0859, cls: 0.0425, iou: 0.0916), misc (ry: 0.16, z: 0.34), dt: 0.63, eta: 2.1h
[INFO]: 2024-04-07 16:20:15,525 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0783, cls: 0.0398, iou: 0.0856), misc (ry: 0.16, z: 0.34), dt: 0.63, eta: 2.1h
[INFO]: 2024-04-07 16:22:44,715 iter: 38250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0871, cls: 0.0400, iou: 0.0902), misc (ry: 0.17, z: 0.36), dt: 0.63, eta: 2.1h
[INFO]: 2024-04-07 16:25:10,342 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0853, cls: 0.0397, iou: 0.0866), misc (ry: 0.16, z: 0.33), dt: 0.63, eta: 2.0h
[INFO]: 2024-04-07 16:27:36,266 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0864, cls: 0.0372, iou: 0.0865), misc (ry: 0.18, z: 0.34), dt: 0.63, eta: 2.0h
[INFO]: 2024-04-07 16:30:04,926 iter: 39000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0867, cls: 0.0405, iou: 0.0904), misc (ry: 0.16, z: 0.35), dt: 0.63, eta: 1.9h
[INFO]: 2024-04-07 16:32:31,461 iter: 39250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0833, cls: 0.0410, iou: 0.0879), misc (ry: 0.16, z: 0.33), dt: 0.63, eta: 1.9h
[INFO]: 2024-04-07 16:34:59,393 iter: 39500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0779, cls: 0.0406, iou: 0.0860), misc (ry: 0.15, z: 0.35), dt: 0.63, eta: 1.8h
[INFO]: 2024-04-07 16:37:28,700 iter: 39750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0807, cls: 0.0393, iou: 0.0870), misc (ry: 0.16, z: 0.33), dt: 0.63, eta: 1.8h
[INFO]: 2024-04-07 16:39:56,250 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0749, cls: 0.0392, iou: 0.0827), misc (ry: 0.16, z: 0.31), dt: 0.63, eta: 1.7h
[INFO]: 2024-04-07 16:48:38,380 test_iter 40000 2d car --> easy: 0.8985, mod: 0.8397, hard: 0.6790
[INFO]: 2024-04-07 16:48:38,381 test_iter 40000 gr car --> easy: 0.2308, mod: 0.1801, hard: 0.1632
[INFO]: 2024-04-07 16:48:38,382 test_iter 40000 3d car --> easy: 0.1819, mod: 0.1532, hard: 0.1276
[INFO]: 2024-04-07 16:48:38,383 test_iter 40000 2d pedestrian --> easy: 0.6471, mod: 0.5701, hard: 0.4920
[INFO]: 2024-04-07 16:48:38,383 test_iter 40000 gr pedestrian --> easy: 0.1130, mod: 0.1117, hard: 0.1029
[INFO]: 2024-04-07 16:48:38,384 test_iter 40000 3d pedestrian --> easy: 0.1086, mod: 0.1029, hard: 0.1011
[INFO]: 2024-04-07 16:48:38,384 test_iter 40000 2d cyclist --> easy: 0.5849, mod: 0.3768, hard: 0.3693
[INFO]: 2024-04-07 16:48:38,385 test_iter 40000 gr cyclist --> easy: 0.0223, mod: 0.0109, hard: 0.0113
[INFO]: 2024-04-07 16:48:38,386 test_iter 40000 3d cyclist --> easy: 0.0160, mod: 0.0091, hard: 0.0091
[INFO]: 2024-04-07 16:51:09,076 iter: 40250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0811, cls: 0.0406, iou: 0.0843), misc (ry: 0.15, z: 0.33), dt: 0.64, eta: 1.7h
[INFO]: 2024-04-07 16:53:37,585 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0799, cls: 0.0376, iou: 0.0850), misc (ry: 0.16, z: 0.33), dt: 0.64, eta: 1.7h
[INFO]: 2024-04-07 16:56:07,020 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0735, cls: 0.0365, iou: 0.0822), misc (ry: 0.14, z: 0.34), dt: 0.64, eta: 1.6h
[INFO]: 2024-04-07 16:58:33,279 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0750, cls: 0.0389, iou: 0.0853), misc (ry: 0.15, z: 0.30), dt: 0.64, eta: 1.6h
[INFO]: 2024-04-07 17:01:02,181 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0767, cls: 0.0376, iou: 0.0834), misc (ry: 0.16, z: 0.32), dt: 0.64, eta: 1.6h
[INFO]: 2024-04-07 17:03:29,388 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0734, cls: 0.0363, iou: 0.0819), misc (ry: 0.16, z: 0.31), dt: 0.64, eta: 1.5h
[INFO]: 2024-04-07 17:05:59,067 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0725, cls: 0.0383, iou: 0.0822), misc (ry: 0.16, z: 0.31), dt: 0.64, eta: 1.5h
[INFO]: 2024-04-07 17:08:25,781 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0719, cls: 0.0373, iou: 0.0810), misc (ry: 0.15, z: 0.32), dt: 0.64, eta: 1.4h
[INFO]: 2024-04-07 17:10:53,743 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0388, iou: 0.0809), misc (ry: 0.15, z: 0.32), dt: 0.64, eta: 1.4h
[INFO]: 2024-04-07 17:13:20,902 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0639, cls: 0.0366, iou: 0.0773), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 1.3h
[INFO]: 2024-04-07 17:15:47,880 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0729, cls: 0.0366, iou: 0.0774), misc (ry: 0.14, z: 0.31), dt: 0.64, eta: 1.3h
[INFO]: 2024-04-07 17:18:15,242 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0640, cls: 0.0356, iou: 0.0768), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 1.2h
[INFO]: 2024-04-07 17:20:44,332 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0711, cls: 0.0372, iou: 0.0800), misc (ry: 0.15, z: 0.31), dt: 0.64, eta: 1.2h
[INFO]: 2024-04-07 17:23:15,522 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0712, cls: 0.0397, iou: 0.0805), misc (ry: 0.15, z: 0.29), dt: 0.64, eta: 1.2h
[INFO]: 2024-04-07 17:25:43,314 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0672, cls: 0.0364, iou: 0.0772), misc (ry: 0.14, z: 0.30), dt: 0.64, eta: 1.1h
[INFO]: 2024-04-07 17:28:12,498 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0581, cls: 0.0344, iou: 0.0735), misc (ry: 0.13, z: 0.28), dt: 0.64, eta: 1.1h
[INFO]: 2024-04-07 17:30:39,794 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0563, cls: 0.0340, iou: 0.0749), misc (ry: 0.13, z: 0.29), dt: 0.64, eta: 1.0h
[INFO]: 2024-04-07 17:33:05,602 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0599, cls: 0.0370, iou: 0.0757), misc (ry: 0.14, z: 0.28), dt: 0.64, eta: 58.3m
[INFO]: 2024-04-07 17:35:31,661 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0636, cls: 0.0364, iou: 0.0746), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 55.7m
[INFO]: 2024-04-07 17:37:56,382 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0630, cls: 0.0342, iou: 0.0761), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 53.0m
[INFO]: 2024-04-07 17:40:22,266 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0596, cls: 0.0353, iou: 0.0726), misc (ry: 0.14, z: 0.28), dt: 0.64, eta: 50.3m
[INFO]: 2024-04-07 17:42:52,122 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0587, cls: 0.0368, iou: 0.0723), misc (ry: 0.13, z: 0.28), dt: 0.64, eta: 47.6m
[INFO]: 2024-04-07 17:45:18,719 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0606, cls: 0.0363, iou: 0.0735), misc (ry: 0.13, z: 0.29), dt: 0.63, eta: 45.0m
[INFO]: 2024-04-07 17:47:45,593 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0632, cls: 0.0359, iou: 0.0739), misc (ry: 0.14, z: 0.27), dt: 0.63, eta: 42.3m
[INFO]: 2024-04-07 17:50:15,020 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0569, cls: 0.0349, iou: 0.0719), misc (ry: 0.13, z: 0.28), dt: 0.63, eta: 39.7m
[INFO]: 2024-04-07 17:52:43,425 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0571, cls: 0.0344, iou: 0.0717), misc (ry: 0.13, z: 0.28), dt: 0.63, eta: 37.0m
[INFO]: 2024-04-07 17:55:12,927 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0634, cls: 0.0375, iou: 0.0729), misc (ry: 0.14, z: 0.28), dt: 0.63, eta: 34.4m
[INFO]: 2024-04-07 17:57:41,329 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0352, iou: 0.0709), misc (ry: 0.13, z: 0.28), dt: 0.63, eta: 31.7m
[INFO]: 2024-04-07 18:00:07,858 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0592, cls: 0.0346, iou: 0.0720), misc (ry: 0.13, z: 0.27), dt: 0.63, eta: 29.0m
[INFO]: 2024-04-07 18:02:34,170 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0637, cls: 0.0369, iou: 0.0728), misc (ry: 0.14, z: 0.27), dt: 0.63, eta: 26.4m
[INFO]: 2024-04-07 18:04:57,939 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0531, cls: 0.0323, iou: 0.0669), misc (ry: 0.12, z: 0.27), dt: 0.63, eta: 23.7m
[INFO]: 2024-04-07 18:07:22,718 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0516, cls: 0.0319, iou: 0.0676), misc (ry: 0.13, z: 0.26), dt: 0.63, eta: 21.1m
[INFO]: 2024-04-07 18:09:50,578 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0602, cls: 0.0337, iou: 0.0701), misc (ry: 0.13, z: 0.30), dt: 0.63, eta: 18.5m
[INFO]: 2024-04-07 18:12:24,318 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0584, cls: 0.0354, iou: 0.0704), misc (ry: 0.13, z: 0.28), dt: 0.63, eta: 15.8m
[INFO]: 2024-04-07 18:14:55,046 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0520, cls: 0.0338, iou: 0.0666), misc (ry: 0.13, z: 0.26), dt: 0.63, eta: 13.2m
[INFO]: 2024-04-07 18:17:26,372 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0577, cls: 0.0354, iou: 0.0684), misc (ry: 0.13, z: 0.27), dt: 0.63, eta: 10.5m
[INFO]: 2024-04-07 18:19:58,416 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0522, cls: 0.0335, iou: 0.0664), misc (ry: 0.12, z: 0.25), dt: 0.63, eta: 7.9m
[INFO]: 2024-04-07 18:22:34,617 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0554, cls: 0.0353, iou: 0.0700), misc (ry: 0.13, z: 0.27), dt: 0.63, eta: 5.3m
[INFO]: 2024-04-07 18:25:02,161 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0507, cls: 0.0331, iou: 0.0658), misc (ry: 0.12, z: 0.26), dt: 0.63, eta: 2.6m
[INFO]: 2024-04-07 18:27:28,294 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0531, cls: 0.0325, iou: 0.0652), misc (ry: 0.13, z: 0.26), dt: 0.63, eta: 0.6s
[INFO]: 2024-04-07 18:36:17,861 test_iter 50000 2d car --> easy: 0.8887, mod: 0.8293, hard: 0.6714
[INFO]: 2024-04-07 18:36:17,862 test_iter 50000 gr car --> easy: 0.1905, mod: 0.1824, hard: 0.1668
[INFO]: 2024-04-07 18:36:17,863 test_iter 50000 3d car --> easy: 0.1313, mod: 0.1555, hard: 0.1300
[INFO]: 2024-04-07 18:36:17,864 test_iter 50000 2d pedestrian --> easy: 0.6577, mod: 0.5809, hard: 0.4992
[INFO]: 2024-04-07 18:36:17,864 test_iter 50000 gr pedestrian --> easy: 0.0484, mod: 0.0492, hard: 0.0449
[INFO]: 2024-04-07 18:36:17,865 test_iter 50000 3d pedestrian --> easy: 0.0437, mod: 0.0426, hard: 0.0348
[INFO]: 2024-04-07 18:36:17,866 test_iter 50000 2d cyclist --> easy: 0.5479, mod: 0.3834, hard: 0.3220
[INFO]: 2024-04-07 18:36:17,866 test_iter 50000 gr cyclist --> easy: 0.0237, mod: 0.0153, hard: 0.0162
[INFO]: 2024-04-07 18:36:17,867 test_iter 50000 3d cyclist --> easy: 0.0221, mod: 0.0122, hard: 0.0130
