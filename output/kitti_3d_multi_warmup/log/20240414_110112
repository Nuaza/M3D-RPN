[INFO]: 2024-04-14 11:01:12,864 ==开始处理数据集==
[INFO]: 2024-04-14 11:01:12,864 命中imdb缓存.
[INFO]: 2024-04-14 11:01:14,295 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-14 11:01:14,296 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-14 11:01:16,748 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-14 11:01:16,748 ==数据集处理完毕==
[INFO]: 2024-04-14 11:01:19,751 ==开始生成anchors==
[INFO]: 2024-04-14 11:01:19,751 ==anchors生成完毕==
[INFO]: 2024-04-14 11:01:22,755 ==开始计算bbox参数==
[INFO]: 2024-04-14 11:01:22,755 命中bbox的回归均值缓存
[INFO]: 2024-04-14 11:01:22,755 命中bbox的回归标准差缓存
[INFO]: 2024-04-14 11:01:22,756 ==bbox参数计算完毕==
[INFO]: 2024-04-14 11:01:30,794 设置保存完成
[INFO]: 2024-04-14 11:01:33,797 训练配置一览
[INFO]: 2024-04-14 11:01:35,805 训练配置: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               114514                                  
    cuda_seed:              114514                                  
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2024-04-14 11:01:41,416 装载完成
[INFO]: 2024-04-14 11:01:44,419 神经网络结构一览
[INFO]: 2024-04-14 11:01:46,421 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): DEConv(
        (conv1_1): Conv2d_cd(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_2): Conv2d_hd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_3): Conv2d_vd(
          (conv): Conv1d(1024, 1024, kernel_size=(3,), stride=(1,), padding=(1,))
        )
        (conv1_4): Conv2d_ad(
          (conv): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        )
        (conv1_5): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(1024, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(1024, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-14 11:01:47,122 ==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
├─RPN: 1-1                               [-1, 126720, 4]           --
|    └─Sequential: 2-1                   [-1, 1024, 32, 110]       --
|    |    └─Conv2d: 3-1                  [-1, 64, 256, 880]        9,408
|    |    └─BatchNorm2d: 3-2             [-1, 64, 256, 880]        128
|    |    └─ReLU: 3-3                    [-1, 64, 256, 880]        --
|    |    └─MaxPool2d: 3-4               [-1, 64, 128, 440]        --
|    |    └─_DenseBlock: 3-5             [-1, 256, 128, 440]       335,040
|    |    └─_Transition: 3-6             [-1, 128, 64, 220]        33,280
|    |    └─_DenseBlock: 3-7             [-1, 512, 64, 220]        919,680
|    |    └─_Transition: 3-8             [-1, 256, 32, 110]        132,096
|    |    └─_DenseBlock: 3-9             [-1, 1024, 32, 110]       2,837,760
|    |    └─_Transition: 3-10            [-1, 512, 32, 110]        526,336
|    |    └─_DenseBlock: 3-11            [-1, 1024, 32, 110]       2,158,080
|    |    └─BatchNorm2d: 3-12            [-1, 1024, 32, 110]       2,048
|    └─Sequential: 2-2                   [-1, 1024, 32, 110]       --
|    |    └─DEConv: 3-13                 [-1, 1024, 32, 110]       34,608,128
|    |    └─ReLU: 3-14                   [-1, 1024, 32, 110]       --
|    └─Conv2d: 2-3                       [-1, 144, 32, 110]        147,600
|    └─Conv2d: 2-4                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-5                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-6                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-7                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-8                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-9                       [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-10                      [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-11                      [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-12                      [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-13                      [-1, 36, 32, 110]         36,900
|    └─Conv2d: 2-14                      [-1, 36, 32, 110]         36,900
|    └─Softmax: 2-15                     [-1, 4, 1152, 110]        --
==========================================================================================
Total params: 42,115,484
Trainable params: 42,115,484
Non-trainable params: 0
Total mult-adds (G): 9.73
==========================================================================================
Input size (MB): 10.31
Forward/backward pass size (MB): 550.75
Params size (MB): 160.66
Estimated Total Size (MB): 721.72
==========================================================================================
[INFO]: 2024-04-14 11:04:17,684 iter: 250, acc (bg: 0.98, fg: 0.38, iou: 0.61), loss (bbox_3d: 2.2648, cls: 0.6154, iou: 0.4975), misc (ry: 1.51, z: 2.80), dt: 0.60, eta: 8.4h
[INFO]: 2024-04-14 11:06:44,754 iter: 500, acc (bg: 0.99, fg: 0.75, iou: 0.69), loss (bbox_3d: 1.4418, cls: 0.3040, iou: 0.3857), misc (ry: 1.20, z: 1.89), dt: 0.60, eta: 8.2h
[INFO]: 2024-04-14 11:09:14,180 iter: 750, acc (bg: 0.99, fg: 0.82, iou: 0.73), loss (bbox_3d: 1.1355, cls: 0.2359, iou: 0.3307), misc (ry: 1.00, z: 1.49), dt: 0.60, eta: 8.2h
[INFO]: 2024-04-14 11:11:42,067 iter: 1000, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0598, cls: 0.2051, iou: 0.3023), misc (ry: 0.96, z: 1.42), dt: 0.60, eta: 8.1h
[INFO]: 2024-04-14 11:14:09,593 iter: 1250, acc (bg: 0.99, fg: 0.86, iou: 0.76), loss (bbox_3d: 0.9839, cls: 0.1913, iou: 0.2858), misc (ry: 0.90, z: 1.41), dt: 0.59, eta: 8.1h
[INFO]: 2024-04-14 11:16:36,113 iter: 1500, acc (bg: 0.99, fg: 0.87, iou: 0.77), loss (bbox_3d: 0.8958, cls: 0.1832, iou: 0.2741), misc (ry: 0.89, z: 1.29), dt: 0.59, eta: 8.0h
[INFO]: 2024-04-14 11:19:06,126 iter: 1750, acc (bg: 1.00, fg: 0.88, iou: 0.78), loss (bbox_3d: 0.9135, cls: 0.1676, iou: 0.2564), misc (ry: 0.90, z: 1.25), dt: 0.59, eta: 8.0h
[INFO]: 2024-04-14 11:21:34,913 iter: 2000, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.8305, cls: 0.1705, iou: 0.2488), misc (ry: 0.80, z: 1.21), dt: 0.59, eta: 7.9h
[INFO]: 2024-04-14 11:24:01,688 iter: 2250, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.8190, cls: 0.1622, iou: 0.2485), misc (ry: 0.82, z: 1.13), dt: 0.59, eta: 7.9h
[INFO]: 2024-04-14 11:26:29,865 iter: 2500, acc (bg: 1.00, fg: 0.89, iou: 0.79), loss (bbox_3d: 0.7958, cls: 0.1605, iou: 0.2447), misc (ry: 0.79, z: 1.16), dt: 0.59, eta: 7.8h
[INFO]: 2024-04-14 11:28:58,195 iter: 2750, acc (bg: 1.00, fg: 0.88, iou: 0.79), loss (bbox_3d: 0.8318, cls: 0.1595, iou: 0.2410), misc (ry: 0.78, z: 1.23), dt: 0.59, eta: 7.8h
[INFO]: 2024-04-14 11:31:25,865 iter: 3000, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.7347, cls: 0.1385, iou: 0.2228), misc (ry: 0.76, z: 1.16), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-14 11:33:53,048 iter: 3250, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.7004, cls: 0.1324, iou: 0.2178), misc (ry: 0.75, z: 1.11), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-14 11:36:20,907 iter: 3500, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6659, cls: 0.1235, iou: 0.2150), misc (ry: 0.63, z: 1.04), dt: 0.59, eta: 7.7h
[INFO]: 2024-04-14 11:38:48,168 iter: 3750, acc (bg: 1.00, fg: 0.91, iou: 0.81), loss (bbox_3d: 0.6582, cls: 0.1217, iou: 0.2116), misc (ry: 0.70, z: 1.04), dt: 0.59, eta: 7.6h
[INFO]: 2024-04-14 11:41:18,130 iter: 4000, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6571, cls: 0.1272, iou: 0.2076), misc (ry: 0.67, z: 0.98), dt: 0.59, eta: 7.6h
[INFO]: 2024-04-14 11:43:48,002 iter: 4250, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6618, cls: 0.1294, iou: 0.2090), misc (ry: 0.72, z: 1.00), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-14 11:46:15,020 iter: 4500, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5931, cls: 0.1181, iou: 0.2012), misc (ry: 0.66, z: 0.89), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-14 11:48:42,106 iter: 4750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5356, cls: 0.1096, iou: 0.1902), misc (ry: 0.60, z: 0.88), dt: 0.59, eta: 7.5h
[INFO]: 2024-04-14 11:51:08,305 iter: 5000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5264, cls: 0.1118, iou: 0.1917), misc (ry: 0.52, z: 0.93), dt: 0.59, eta: 7.4h
[INFO]: 2024-04-14 11:53:34,503 iter: 5250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5543, cls: 0.1093, iou: 0.1943), misc (ry: 0.60, z: 0.85), dt: 0.59, eta: 7.4h
[INFO]: 2024-04-14 11:56:00,903 iter: 5500, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.6387, cls: 0.1311, iou: 0.2036), misc (ry: 0.63, z: 1.01), dt: 0.59, eta: 7.3h
[INFO]: 2024-04-14 11:58:32,421 iter: 5750, acc (bg: 1.00, fg: 0.92, iou: 0.83), loss (bbox_3d: 0.5452, cls: 0.1130, iou: 0.1938), misc (ry: 0.59, z: 0.90), dt: 0.59, eta: 7.3h
[INFO]: 2024-04-14 12:00:58,328 iter: 6000, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5049, cls: 0.0949, iou: 0.1884), misc (ry: 0.49, z: 0.95), dt: 0.59, eta: 7.2h
[INFO]: 2024-04-14 12:03:25,486 iter: 6250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.4973, cls: 0.1005, iou: 0.1868), misc (ry: 0.51, z: 0.89), dt: 0.59, eta: 7.2h
[INFO]: 2024-04-14 12:05:52,350 iter: 6500, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5272, cls: 0.1013, iou: 0.1895), misc (ry: 0.65, z: 0.82), dt: 0.59, eta: 7.1h
[INFO]: 2024-04-14 12:08:20,036 iter: 6750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5318, cls: 0.1055, iou: 0.1897), misc (ry: 0.54, z: 0.90), dt: 0.59, eta: 7.1h
[INFO]: 2024-04-14 12:10:48,106 iter: 7000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4826, cls: 0.0991, iou: 0.1845), misc (ry: 0.57, z: 0.86), dt: 0.59, eta: 7.1h
[INFO]: 2024-04-14 12:13:25,247 iter: 7250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4599, cls: 0.0997, iou: 0.1762), misc (ry: 0.50, z: 0.81), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-14 12:15:53,925 iter: 7500, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4233, cls: 0.0918, iou: 0.1768), misc (ry: 0.52, z: 0.80), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-14 12:18:21,109 iter: 7750, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3704, cls: 0.0839, iou: 0.1651), misc (ry: 0.40, z: 0.72), dt: 0.59, eta: 7.0h
[INFO]: 2024-04-14 12:20:48,170 iter: 8000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3872, cls: 0.0917, iou: 0.1661), misc (ry: 0.46, z: 0.70), dt: 0.59, eta: 6.9h
[INFO]: 2024-04-14 12:23:16,075 iter: 8250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4152, cls: 0.0833, iou: 0.1658), misc (ry: 0.48, z: 0.76), dt: 0.59, eta: 6.9h
[INFO]: 2024-04-14 12:25:45,342 iter: 8500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4370, cls: 0.0895, iou: 0.1705), misc (ry: 0.50, z: 0.79), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-14 12:28:13,153 iter: 8750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3980, cls: 0.0900, iou: 0.1669), misc (ry: 0.48, z: 0.74), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-14 12:30:48,724 iter: 9000, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3648, cls: 0.0862, iou: 0.1650), misc (ry: 0.43, z: 0.76), dt: 0.59, eta: 6.8h
[INFO]: 2024-04-14 12:33:23,077 iter: 9250, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3810, cls: 0.0822, iou: 0.1647), misc (ry: 0.43, z: 0.72), dt: 0.59, eta: 6.7h
[INFO]: 2024-04-14 12:35:52,531 iter: 9500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3511, cls: 0.0784, iou: 0.1587), misc (ry: 0.41, z: 0.71), dt: 0.59, eta: 6.7h
[INFO]: 2024-04-14 12:38:20,273 iter: 9750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3760, cls: 0.0835, iou: 0.1640), misc (ry: 0.46, z: 0.74), dt: 0.59, eta: 6.6h
[INFO]: 2024-04-14 12:40:50,168 iter: 10000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3238, cls: 0.0765, iou: 0.1560), misc (ry: 0.36, z: 0.76), dt: 0.59, eta: 6.6h
[INFO]: 2024-04-14 12:49:47,414 test_iter 10000 2d car --> easy: 0.8571, mod: 0.8192, hard: 0.6653
[INFO]: 2024-04-14 12:49:47,415 test_iter 10000 gr car --> easy: 0.0868, mod: 0.0702, hard: 0.0550
[INFO]: 2024-04-14 12:49:47,416 test_iter 10000 3d car --> easy: 0.0535, mod: 0.0416, hard: 0.0346
[INFO]: 2024-04-14 12:49:47,417 test_iter 10000 2d pedestrian --> easy: 0.6407, mod: 0.5658, hard: 0.4896
[INFO]: 2024-04-14 12:49:47,417 test_iter 10000 gr pedestrian --> easy: 0.0909, mod: 0.0909, hard: 0.0909
[INFO]: 2024-04-14 12:49:47,418 test_iter 10000 3d pedestrian --> easy: 0.0087, mod: 0.0097, hard: 0.0091
[INFO]: 2024-04-14 12:49:47,418 test_iter 10000 2d cyclist --> easy: 0.2326, mod: 0.1614, hard: 0.1618
[INFO]: 2024-04-14 12:49:47,419 test_iter 10000 gr cyclist --> easy: 0.0019, mod: 0.0019, hard: 0.0019
[INFO]: 2024-04-14 12:49:47,420 test_iter 10000 3d cyclist --> easy: 0.0018, mod: 0.0018, hard: 0.0018
[INFO]: 2024-04-14 12:52:17,394 iter: 10250, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3284, cls: 0.0819, iou: 0.1581), misc (ry: 0.41, z: 0.67), dt: 0.65, eta: 7.1h
[INFO]: 2024-04-14 12:54:46,634 iter: 10500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3122, cls: 0.0829, iou: 0.1614), misc (ry: 0.36, z: 0.60), dt: 0.65, eta: 7.1h
[INFO]: 2024-04-14 12:57:17,547 iter: 10750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2940, cls: 0.0743, iou: 0.1510), misc (ry: 0.38, z: 0.59), dt: 0.64, eta: 7.0h
[INFO]: 2024-04-14 12:59:46,012 iter: 11000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.3123, cls: 0.0682, iou: 0.1484), misc (ry: 0.43, z: 0.68), dt: 0.64, eta: 7.0h
[INFO]: 2024-04-14 13:02:12,569 iter: 11250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3155, cls: 0.0731, iou: 0.1585), misc (ry: 0.39, z: 0.66), dt: 0.64, eta: 6.9h
[INFO]: 2024-04-14 13:04:44,901 iter: 11500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2601, cls: 0.0675, iou: 0.1484), misc (ry: 0.32, z: 0.60), dt: 0.64, eta: 6.9h
[INFO]: 2024-04-14 13:07:20,420 iter: 11750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2959, cls: 0.0740, iou: 0.1516), misc (ry: 0.35, z: 0.62), dt: 0.64, eta: 6.8h
[INFO]: 2024-04-14 13:09:48,831 iter: 12000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3028, cls: 0.0740, iou: 0.1533), misc (ry: 0.39, z: 0.63), dt: 0.64, eta: 6.8h
[INFO]: 2024-04-14 13:12:18,788 iter: 12250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3230, cls: 0.0731, iou: 0.1533), misc (ry: 0.41, z: 0.68), dt: 0.64, eta: 6.7h
[INFO]: 2024-04-14 13:14:47,880 iter: 12500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.3002, cls: 0.0711, iou: 0.1480), misc (ry: 0.40, z: 0.62), dt: 0.64, eta: 6.7h
[INFO]: 2024-04-14 13:17:19,940 iter: 12750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2920, cls: 0.0704, iou: 0.1460), misc (ry: 0.42, z: 0.58), dt: 0.64, eta: 6.6h
[INFO]: 2024-04-14 13:19:48,023 iter: 13000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2876, cls: 0.0740, iou: 0.1479), misc (ry: 0.37, z: 0.62), dt: 0.64, eta: 6.5h
[INFO]: 2024-04-14 13:22:19,578 iter: 13250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3031, cls: 0.0742, iou: 0.1519), misc (ry: 0.38, z: 0.65), dt: 0.64, eta: 6.5h
[INFO]: 2024-04-14 13:24:49,231 iter: 13500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2551, cls: 0.0657, iou: 0.1464), misc (ry: 0.31, z: 0.64), dt: 0.64, eta: 6.4h
[INFO]: 2024-04-14 13:27:19,778 iter: 13750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2602, cls: 0.0644, iou: 0.1452), misc (ry: 0.33, z: 0.66), dt: 0.64, eta: 6.4h
[INFO]: 2024-04-14 13:29:50,010 iter: 14000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2759, cls: 0.0649, iou: 0.1450), misc (ry: 0.33, z: 0.69), dt: 0.63, eta: 6.3h
[INFO]: 2024-04-14 13:32:22,659 iter: 14250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2434, cls: 0.0654, iou: 0.1425), misc (ry: 0.34, z: 0.54), dt: 0.63, eta: 6.3h
[INFO]: 2024-04-14 13:34:52,054 iter: 14500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2404, cls: 0.0677, iou: 0.1380), misc (ry: 0.30, z: 0.55), dt: 0.63, eta: 6.2h
[INFO]: 2024-04-14 13:37:23,500 iter: 14750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2581, cls: 0.0675, iou: 0.1430), misc (ry: 0.31, z: 0.64), dt: 0.63, eta: 6.2h
[INFO]: 2024-04-14 13:39:51,151 iter: 15000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2513, cls: 0.0631, iou: 0.1410), misc (ry: 0.33, z: 0.58), dt: 0.63, eta: 6.1h
[INFO]: 2024-04-14 13:42:19,289 iter: 15250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2340, cls: 0.0667, iou: 0.1370), misc (ry: 0.31, z: 0.55), dt: 0.63, eta: 6.1h
[INFO]: 2024-04-14 13:44:48,162 iter: 15500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2231, cls: 0.0556, iou: 0.1318), misc (ry: 0.28, z: 0.58), dt: 0.63, eta: 6.0h
[INFO]: 2024-04-14 13:47:18,637 iter: 15750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2239, cls: 0.0597, iou: 0.1395), misc (ry: 0.31, z: 0.54), dt: 0.63, eta: 6.0h
[INFO]: 2024-04-14 13:49:46,841 iter: 16000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2542, cls: 0.0660, iou: 0.1394), misc (ry: 0.33, z: 0.58), dt: 0.63, eta: 6.0h
[INFO]: 2024-04-14 13:52:16,095 iter: 16250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2208, cls: 0.0593, iou: 0.1323), misc (ry: 0.30, z: 0.58), dt: 0.63, eta: 5.9h
[INFO]: 2024-04-14 13:54:46,233 iter: 16500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1971, cls: 0.0584, iou: 0.1300), misc (ry: 0.26, z: 0.54), dt: 0.63, eta: 5.9h
[INFO]: 2024-04-14 13:57:17,396 iter: 16750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2207, cls: 0.0571, iou: 0.1261), misc (ry: 0.32, z: 0.57), dt: 0.63, eta: 5.8h
[INFO]: 2024-04-14 13:59:45,067 iter: 17000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2430, cls: 0.0647, iou: 0.1365), misc (ry: 0.37, z: 0.57), dt: 0.63, eta: 5.8h
[INFO]: 2024-04-14 14:02:12,042 iter: 17250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2298, cls: 0.0623, iou: 0.1321), misc (ry: 0.33, z: 0.61), dt: 0.63, eta: 5.7h
[INFO]: 2024-04-14 14:04:46,635 iter: 17500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2308, cls: 0.0635, iou: 0.1328), misc (ry: 0.32, z: 0.53), dt: 0.63, eta: 5.7h
[INFO]: 2024-04-14 14:07:17,085 iter: 17750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2252, cls: 0.0631, iou: 0.1330), misc (ry: 0.33, z: 0.55), dt: 0.63, eta: 5.6h
[INFO]: 2024-04-14 14:09:45,227 iter: 18000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2106, cls: 0.0601, iou: 0.1323), misc (ry: 0.29, z: 0.55), dt: 0.63, eta: 5.6h
[INFO]: 2024-04-14 14:12:15,307 iter: 18250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2018, cls: 0.0596, iou: 0.1309), misc (ry: 0.30, z: 0.53), dt: 0.63, eta: 5.5h
[INFO]: 2024-04-14 14:14:46,453 iter: 18500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2028, cls: 0.0586, iou: 0.1271), misc (ry: 0.28, z: 0.51), dt: 0.63, eta: 5.5h
[INFO]: 2024-04-14 14:17:13,857 iter: 18750, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1903, cls: 0.0561, iou: 0.1278), misc (ry: 0.30, z: 0.53), dt: 0.63, eta: 5.4h
[INFO]: 2024-04-14 14:19:41,478 iter: 19000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2108, cls: 0.0568, iou: 0.1286), misc (ry: 0.28, z: 0.58), dt: 0.62, eta: 5.4h
[INFO]: 2024-04-14 14:22:12,244 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2329, cls: 0.0606, iou: 0.1313), misc (ry: 0.40, z: 0.54), dt: 0.62, eta: 5.3h
[INFO]: 2024-04-14 14:24:40,836 iter: 19500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1929, cls: 0.0573, iou: 0.1261), misc (ry: 0.32, z: 0.48), dt: 0.62, eta: 5.3h
[INFO]: 2024-04-14 14:27:10,460 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1995, cls: 0.0569, iou: 0.1274), misc (ry: 0.27, z: 0.54), dt: 0.62, eta: 5.2h
[INFO]: 2024-04-14 14:29:41,180 iter: 20000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1909, cls: 0.0573, iou: 0.1277), misc (ry: 0.27, z: 0.50), dt: 0.62, eta: 5.2h
[INFO]: 2024-04-14 14:38:36,916 test_iter 20000 2d car --> easy: 0.9201, mod: 0.8285, hard: 0.6769
[INFO]: 2024-04-14 14:38:36,917 test_iter 20000 gr car --> easy: 0.1438, mod: 0.1572, hard: 0.1396
[INFO]: 2024-04-14 14:38:36,917 test_iter 20000 3d car --> easy: 0.1034, mod: 0.0806, hard: 0.0646
[INFO]: 2024-04-14 14:38:36,918 test_iter 20000 2d pedestrian --> easy: 0.6507, mod: 0.5744, hard: 0.4942
[INFO]: 2024-04-14 14:38:36,918 test_iter 20000 gr pedestrian --> easy: 0.1095, mod: 0.1069, hard: 0.1008
[INFO]: 2024-04-14 14:38:36,919 test_iter 20000 3d pedestrian --> easy: 0.1072, mod: 0.1023, hard: 0.0997
[INFO]: 2024-04-14 14:38:36,920 test_iter 20000 2d cyclist --> easy: 0.5175, mod: 0.3422, hard: 0.3326
[INFO]: 2024-04-14 14:38:36,920 test_iter 20000 gr cyclist --> easy: 0.0101, mod: 0.0059, hard: 0.0063
[INFO]: 2024-04-14 14:38:36,921 test_iter 20000 3d cyclist --> easy: 0.0039, mod: 0.0039, hard: 0.0038
[INFO]: 2024-04-14 14:41:04,174 iter: 20250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1804, cls: 0.0514, iou: 0.1224), misc (ry: 0.29, z: 0.49), dt: 0.65, eta: 5.4h
[INFO]: 2024-04-14 14:43:33,306 iter: 20500, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2233, cls: 0.0531, iou: 0.1280), misc (ry: 0.37, z: 0.55), dt: 0.65, eta: 5.3h
[INFO]: 2024-04-14 14:46:05,364 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2124, cls: 0.0596, iou: 0.1366), misc (ry: 0.33, z: 0.55), dt: 0.65, eta: 5.3h
[INFO]: 2024-04-14 14:48:38,812 iter: 21000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1934, cls: 0.0545, iou: 0.1268), misc (ry: 0.32, z: 0.51), dt: 0.65, eta: 5.2h
[INFO]: 2024-04-14 14:51:07,712 iter: 21250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1831, cls: 0.0532, iou: 0.1230), misc (ry: 0.28, z: 0.51), dt: 0.65, eta: 5.2h
[INFO]: 2024-04-14 14:53:34,558 iter: 21500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1639, cls: 0.0503, iou: 0.1159), misc (ry: 0.25, z: 0.50), dt: 0.65, eta: 5.1h
[INFO]: 2024-04-14 14:56:03,363 iter: 21750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1680, cls: 0.0525, iou: 0.1215), misc (ry: 0.25, z: 0.50), dt: 0.65, eta: 5.1h
[INFO]: 2024-04-14 14:58:32,108 iter: 22000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1722, cls: 0.0537, iou: 0.1192), misc (ry: 0.26, z: 0.49), dt: 0.65, eta: 5.0h
[INFO]: 2024-04-14 15:01:00,569 iter: 22250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1640, cls: 0.0516, iou: 0.1189), misc (ry: 0.24, z: 0.49), dt: 0.65, eta: 5.0h
[INFO]: 2024-04-14 15:03:27,593 iter: 22500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1592, cls: 0.0480, iou: 0.1203), misc (ry: 0.24, z: 0.53), dt: 0.64, eta: 4.9h
[INFO]: 2024-04-14 15:05:55,331 iter: 22750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1523, cls: 0.0483, iou: 0.1143), misc (ry: 0.26, z: 0.47), dt: 0.64, eta: 4.9h
[INFO]: 2024-04-14 15:08:27,186 iter: 23000, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1765, cls: 0.0555, iou: 0.1236), misc (ry: 0.26, z: 0.48), dt: 0.64, eta: 4.8h
[INFO]: 2024-04-14 15:10:55,260 iter: 23250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1677, cls: 0.0509, iou: 0.1156), misc (ry: 0.29, z: 0.48), dt: 0.64, eta: 4.8h
[INFO]: 2024-04-14 15:13:24,511 iter: 23500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1539, cls: 0.0487, iou: 0.1146), misc (ry: 0.22, z: 0.52), dt: 0.64, eta: 4.7h
[INFO]: 2024-04-14 15:15:54,209 iter: 23750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1502, cls: 0.0511, iou: 0.1138), misc (ry: 0.24, z: 0.45), dt: 0.64, eta: 4.7h
[INFO]: 2024-04-14 15:18:22,885 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1325, cls: 0.0474, iou: 0.1083), misc (ry: 0.22, z: 0.44), dt: 0.64, eta: 4.6h
[INFO]: 2024-04-14 15:20:52,159 iter: 24250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1371, cls: 0.0474, iou: 0.1130), misc (ry: 0.23, z: 0.45), dt: 0.64, eta: 4.6h
[INFO]: 2024-04-14 15:23:21,377 iter: 24500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1471, cls: 0.0513, iou: 0.1118), misc (ry: 0.25, z: 0.43), dt: 0.64, eta: 4.5h
[INFO]: 2024-04-14 15:25:49,319 iter: 24750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1423, cls: 0.0464, iou: 0.1074), misc (ry: 0.23, z: 0.47), dt: 0.64, eta: 4.5h
[INFO]: 2024-04-14 15:28:17,269 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1425, cls: 0.0474, iou: 0.1120), misc (ry: 0.24, z: 0.45), dt: 0.64, eta: 4.4h
[INFO]: 2024-04-14 15:30:49,993 iter: 25250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1367, cls: 0.0480, iou: 0.1066), misc (ry: 0.26, z: 0.41), dt: 0.64, eta: 4.4h
[INFO]: 2024-04-14 15:33:21,321 iter: 25500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1276, cls: 0.0445, iou: 0.1070), misc (ry: 0.22, z: 0.42), dt: 0.64, eta: 4.3h
[INFO]: 2024-04-14 15:35:49,678 iter: 25750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1222, cls: 0.0456, iou: 0.1061), misc (ry: 0.20, z: 0.42), dt: 0.64, eta: 4.3h
[INFO]: 2024-04-14 15:38:17,058 iter: 26000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1314, cls: 0.0465, iou: 0.1080), misc (ry: 0.21, z: 0.44), dt: 0.64, eta: 4.3h
[INFO]: 2024-04-14 15:40:44,841 iter: 26250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1338, cls: 0.0486, iou: 0.1073), misc (ry: 0.22, z: 0.46), dt: 0.64, eta: 4.2h
[INFO]: 2024-04-14 15:43:14,967 iter: 26500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1144, cls: 0.0428, iou: 0.1035), misc (ry: 0.19, z: 0.41), dt: 0.64, eta: 4.2h
[INFO]: 2024-04-14 15:45:43,136 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1328, cls: 0.0446, iou: 0.1056), misc (ry: 0.21, z: 0.44), dt: 0.64, eta: 4.1h
[INFO]: 2024-04-14 15:48:11,595 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1195, cls: 0.0417, iou: 0.1005), misc (ry: 0.21, z: 0.43), dt: 0.64, eta: 4.1h
[INFO]: 2024-04-14 15:50:43,462 iter: 27250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1140, cls: 0.0440, iou: 0.1041), misc (ry: 0.20, z: 0.44), dt: 0.64, eta: 4.0h
[INFO]: 2024-04-14 15:53:11,231 iter: 27500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1013, cls: 0.0423, iou: 0.0990), misc (ry: 0.18, z: 0.39), dt: 0.64, eta: 4.0h
[INFO]: 2024-04-14 15:55:40,365 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1077, cls: 0.0438, iou: 0.0988), misc (ry: 0.19, z: 0.39), dt: 0.64, eta: 3.9h
[INFO]: 2024-04-14 15:58:06,622 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1104, cls: 0.0409, iou: 0.0980), misc (ry: 0.19, z: 0.39), dt: 0.64, eta: 3.9h
[INFO]: 2024-04-14 16:00:36,548 iter: 28250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1112, cls: 0.0467, iou: 0.1030), misc (ry: 0.20, z: 0.39), dt: 0.63, eta: 3.8h
[INFO]: 2024-04-14 16:03:04,048 iter: 28500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1045, cls: 0.0400, iou: 0.0970), misc (ry: 0.18, z: 0.42), dt: 0.63, eta: 3.8h
[INFO]: 2024-04-14 16:05:32,935 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1053, cls: 0.0409, iou: 0.0979), misc (ry: 0.20, z: 0.38), dt: 0.63, eta: 3.7h
[INFO]: 2024-04-14 16:07:59,587 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1054, cls: 0.0418, iou: 0.0997), misc (ry: 0.19, z: 0.39), dt: 0.63, eta: 3.7h
[INFO]: 2024-04-14 16:10:28,225 iter: 29250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0943, cls: 0.0384, iou: 0.0965), misc (ry: 0.17, z: 0.40), dt: 0.63, eta: 3.6h
[INFO]: 2024-04-14 16:12:56,125 iter: 29500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0996, cls: 0.0407, iou: 0.0967), misc (ry: 0.18, z: 0.42), dt: 0.63, eta: 3.6h
[INFO]: 2024-04-14 16:15:23,940 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1035, cls: 0.0422, iou: 0.0981), misc (ry: 0.18, z: 0.41), dt: 0.63, eta: 3.6h
[INFO]: 2024-04-14 16:17:51,061 iter: 30000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1085, cls: 0.0402, iou: 0.0995), misc (ry: 0.19, z: 0.41), dt: 0.63, eta: 3.5h
[INFO]: 2024-04-14 16:26:41,938 test_iter 30000 2d car --> easy: 0.8422, mod: 0.8329, hard: 0.6746
[INFO]: 2024-04-14 16:26:41,939 test_iter 30000 gr car --> easy: 0.2483, mod: 0.1823, hard: 0.1613
[INFO]: 2024-04-14 16:26:41,940 test_iter 30000 3d car --> easy: 0.1957, mod: 0.1520, hard: 0.1276
[INFO]: 2024-04-14 16:26:41,940 test_iter 30000 2d pedestrian --> easy: 0.6609, mod: 0.5774, hard: 0.4982
[INFO]: 2024-04-14 16:26:41,941 test_iter 30000 gr pedestrian --> easy: 0.0524, mod: 0.0635, hard: 0.0554
[INFO]: 2024-04-14 16:26:41,941 test_iter 30000 3d pedestrian --> easy: 0.0441, mod: 0.0536, hard: 0.0537
[INFO]: 2024-04-14 16:26:41,942 test_iter 30000 2d cyclist --> easy: 0.6201, mod: 0.3942, hard: 0.3842
[INFO]: 2024-04-14 16:26:41,942 test_iter 30000 gr cyclist --> easy: 0.0042, mod: 0.0031, hard: 0.0045
[INFO]: 2024-04-14 16:26:41,943 test_iter 30000 3d cyclist --> easy: 0.0026, mod: 0.0026, hard: 0.0026
[INFO]: 2024-04-14 16:29:12,165 iter: 30250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0983, cls: 0.0405, iou: 0.0968), misc (ry: 0.19, z: 0.38), dt: 0.65, eta: 3.6h
[INFO]: 2024-04-14 16:31:42,256 iter: 30500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0923, cls: 0.0381, iou: 0.0952), misc (ry: 0.17, z: 0.38), dt: 0.65, eta: 3.5h
[INFO]: 2024-04-14 16:34:12,935 iter: 30750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0961, cls: 0.0379, iou: 0.0957), misc (ry: 0.18, z: 0.39), dt: 0.65, eta: 3.5h
[INFO]: 2024-04-14 16:36:41,725 iter: 31000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0895, cls: 0.0381, iou: 0.0906), misc (ry: 0.17, z: 0.36), dt: 0.65, eta: 3.4h
[INFO]: 2024-04-14 16:39:07,757 iter: 31250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0930, cls: 0.0390, iou: 0.0928), misc (ry: 0.17, z: 0.38), dt: 0.65, eta: 3.4h
[INFO]: 2024-04-14 16:41:38,566 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0853, cls: 0.0396, iou: 0.0911), misc (ry: 0.17, z: 0.36), dt: 0.65, eta: 3.3h
[INFO]: 2024-04-14 16:44:08,233 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0891, cls: 0.0396, iou: 0.0929), misc (ry: 0.17, z: 0.35), dt: 0.65, eta: 3.3h
[INFO]: 2024-04-14 16:46:37,395 iter: 32000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0953, cls: 0.0388, iou: 0.0938), misc (ry: 0.17, z: 0.34), dt: 0.65, eta: 3.2h
[INFO]: 2024-04-14 16:49:05,883 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0935, cls: 0.0419, iou: 0.0948), misc (ry: 0.20, z: 0.35), dt: 0.65, eta: 3.2h
[INFO]: 2024-04-14 16:51:32,710 iter: 32500, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0889, cls: 0.0398, iou: 0.0921), misc (ry: 0.18, z: 0.34), dt: 0.65, eta: 3.1h
[INFO]: 2024-04-14 16:54:03,422 iter: 32750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0842, cls: 0.0384, iou: 0.0902), misc (ry: 0.16, z: 0.35), dt: 0.65, eta: 3.1h
[INFO]: 2024-04-14 16:56:34,079 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0824, cls: 0.0407, iou: 0.0899), misc (ry: 0.17, z: 0.34), dt: 0.65, eta: 3.0h
[INFO]: 2024-04-14 16:59:01,534 iter: 33250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0883, cls: 0.0374, iou: 0.0874), misc (ry: 0.17, z: 0.35), dt: 0.64, eta: 3.0h
[INFO]: 2024-04-14 17:01:30,305 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0843, cls: 0.0401, iou: 0.0903), misc (ry: 0.17, z: 0.34), dt: 0.64, eta: 3.0h
[INFO]: 2024-04-14 17:04:01,502 iter: 33750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0805, cls: 0.0376, iou: 0.0897), misc (ry: 0.18, z: 0.33), dt: 0.64, eta: 2.9h
[INFO]: 2024-04-14 17:06:31,689 iter: 34000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0846, cls: 0.0401, iou: 0.0900), misc (ry: 0.17, z: 0.34), dt: 0.64, eta: 2.9h
[INFO]: 2024-04-14 17:08:58,952 iter: 34250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0854, cls: 0.0389, iou: 0.0906), misc (ry: 0.17, z: 0.38), dt: 0.64, eta: 2.8h
[INFO]: 2024-04-14 17:11:25,641 iter: 34500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0758, cls: 0.0360, iou: 0.0846), misc (ry: 0.16, z: 0.36), dt: 0.64, eta: 2.8h
[INFO]: 2024-04-14 17:13:52,713 iter: 34750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0870, cls: 0.0366, iou: 0.0905), misc (ry: 0.20, z: 0.34), dt: 0.64, eta: 2.7h
[INFO]: 2024-04-14 17:16:22,375 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0858, cls: 0.0366, iou: 0.0908), misc (ry: 0.18, z: 0.37), dt: 0.64, eta: 2.7h
[INFO]: 2024-04-14 17:18:51,282 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0788, cls: 0.0356, iou: 0.0867), misc (ry: 0.17, z: 0.37), dt: 0.64, eta: 2.6h
[INFO]: 2024-04-14 17:21:17,955 iter: 35500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0729, cls: 0.0349, iou: 0.0868), misc (ry: 0.16, z: 0.36), dt: 0.64, eta: 2.6h
[INFO]: 2024-04-14 17:23:49,966 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0763, cls: 0.0365, iou: 0.0837), misc (ry: 0.17, z: 0.34), dt: 0.64, eta: 2.5h
[INFO]: 2024-04-14 17:26:19,202 iter: 36000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0700, cls: 0.0345, iou: 0.0814), misc (ry: 0.16, z: 0.32), dt: 0.64, eta: 2.5h
[INFO]: 2024-04-14 17:28:47,141 iter: 36250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0664, cls: 0.0334, iou: 0.0809), misc (ry: 0.15, z: 0.32), dt: 0.64, eta: 2.4h
[INFO]: 2024-04-14 17:31:15,922 iter: 36500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0742, cls: 0.0366, iou: 0.0822), misc (ry: 0.16, z: 0.34), dt: 0.64, eta: 2.4h
[INFO]: 2024-04-14 17:33:43,903 iter: 36750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0674, cls: 0.0358, iou: 0.0778), misc (ry: 0.14, z: 0.32), dt: 0.64, eta: 2.4h
[INFO]: 2024-04-14 17:36:16,728 iter: 37000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0736, cls: 0.0351, iou: 0.0807), misc (ry: 0.15, z: 0.34), dt: 0.64, eta: 2.3h
[INFO]: 2024-04-14 17:38:45,115 iter: 37250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0714, cls: 0.0346, iou: 0.0806), misc (ry: 0.16, z: 0.33), dt: 0.64, eta: 2.3h
[INFO]: 2024-04-14 17:41:12,268 iter: 37500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0620, cls: 0.0339, iou: 0.0782), misc (ry: 0.14, z: 0.31), dt: 0.64, eta: 2.2h
[INFO]: 2024-04-14 17:43:39,546 iter: 37750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0694, cls: 0.0354, iou: 0.0774), misc (ry: 0.14, z: 0.31), dt: 0.64, eta: 2.2h
[INFO]: 2024-04-14 17:46:07,740 iter: 38000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0562, cls: 0.0323, iou: 0.0754), misc (ry: 0.13, z: 0.29), dt: 0.64, eta: 2.1h
[INFO]: 2024-04-14 17:48:39,621 iter: 38250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0579, cls: 0.0340, iou: 0.0775), misc (ry: 0.15, z: 0.29), dt: 0.64, eta: 2.1h
[INFO]: 2024-04-14 17:51:13,066 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0543, cls: 0.0321, iou: 0.0726), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 2.0h
[INFO]: 2024-04-14 17:53:43,907 iter: 38750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0639, cls: 0.0334, iou: 0.0759), misc (ry: 0.15, z: 0.30), dt: 0.64, eta: 2.0h
[INFO]: 2024-04-14 17:56:12,832 iter: 39000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0619, cls: 0.0344, iou: 0.0749), misc (ry: 0.14, z: 0.29), dt: 0.64, eta: 1.9h
[INFO]: 2024-04-14 17:58:41,359 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0650, cls: 0.0336, iou: 0.0804), misc (ry: 0.16, z: 0.30), dt: 0.64, eta: 1.9h
[INFO]: 2024-04-14 18:01:09,529 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0343, iou: 0.0768), misc (ry: 0.15, z: 0.31), dt: 0.64, eta: 1.9h
[INFO]: 2024-04-14 18:03:37,834 iter: 39750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0649, cls: 0.0340, iou: 0.0785), misc (ry: 0.16, z: 0.29), dt: 0.64, eta: 1.8h
[INFO]: 2024-04-14 18:06:09,017 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0569, cls: 0.0330, iou: 0.0746), misc (ry: 0.14, z: 0.28), dt: 0.64, eta: 1.8h
[INFO]: 2024-04-14 18:15:00,811 test_iter 40000 2d car --> easy: 0.9097, mod: 0.8363, hard: 0.6775
[INFO]: 2024-04-14 18:15:00,812 test_iter 40000 gr car --> easy: 0.2651, mod: 0.2056, hard: 0.1696
[INFO]: 2024-04-14 18:15:00,813 test_iter 40000 3d car --> easy: 0.2040, mod: 0.1605, hard: 0.1314
[INFO]: 2024-04-14 18:15:00,813 test_iter 40000 2d pedestrian --> easy: 0.7429, mod: 0.6616, hard: 0.5128
[INFO]: 2024-04-14 18:15:00,814 test_iter 40000 gr pedestrian --> easy: 0.0438, mod: 0.1131, hard: 0.1100
[INFO]: 2024-04-14 18:15:00,814 test_iter 40000 3d pedestrian --> easy: 0.0393, mod: 0.1086, hard: 0.1019
[INFO]: 2024-04-14 18:15:00,815 test_iter 40000 2d cyclist --> easy: 0.6528, mod: 0.4109, hard: 0.4057
[INFO]: 2024-04-14 18:15:00,815 test_iter 40000 gr cyclist --> easy: 0.0330, mod: 0.0259, hard: 0.0272
[INFO]: 2024-04-14 18:15:00,816 test_iter 40000 3d cyclist --> easy: 0.0318, mod: 0.0165, hard: 0.0175
[INFO]: 2024-04-14 18:17:30,888 iter: 40250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0529, cls: 0.0329, iou: 0.0727), misc (ry: 0.13, z: 0.28), dt: 0.65, eta: 1.8h
[INFO]: 2024-04-14 18:20:03,545 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0541, cls: 0.0328, iou: 0.0727), misc (ry: 0.13, z: 0.29), dt: 0.65, eta: 1.7h
[INFO]: 2024-04-14 18:22:33,375 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0593, cls: 0.0326, iou: 0.0746), misc (ry: 0.14, z: 0.30), dt: 0.65, eta: 1.7h
[INFO]: 2024-04-14 18:25:01,697 iter: 41000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0549, cls: 0.0328, iou: 0.0720), misc (ry: 0.13, z: 0.28), dt: 0.65, eta: 1.6h
[INFO]: 2024-04-14 18:27:31,031 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0541, cls: 0.0343, iou: 0.0727), misc (ry: 0.13, z: 0.27), dt: 0.65, eta: 1.6h
[INFO]: 2024-04-14 18:30:06,098 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0543, cls: 0.0318, iou: 0.0724), misc (ry: 0.14, z: 0.28), dt: 0.65, eta: 1.5h
[INFO]: 2024-04-14 18:32:42,159 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0617, cls: 0.0321, iou: 0.0708), misc (ry: 0.16, z: 0.29), dt: 0.65, eta: 1.5h
[INFO]: 2024-04-14 18:35:14,644 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0569, cls: 0.0344, iou: 0.0721), misc (ry: 0.14, z: 0.27), dt: 0.65, eta: 1.4h
[INFO]: 2024-04-14 18:37:47,959 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0523, cls: 0.0316, iou: 0.0708), misc (ry: 0.14, z: 0.28), dt: 0.65, eta: 1.4h
[INFO]: 2024-04-14 18:40:24,217 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0483, cls: 0.0312, iou: 0.0663), misc (ry: 0.13, z: 0.26), dt: 0.65, eta: 1.3h
[INFO]: 2024-04-14 18:42:59,092 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0464, cls: 0.0287, iou: 0.0675), misc (ry: 0.12, z: 0.27), dt: 0.65, eta: 1.3h
[INFO]: 2024-04-14 18:45:29,188 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0529, cls: 0.0326, iou: 0.0690), misc (ry: 0.13, z: 0.26), dt: 0.65, eta: 1.3h
[INFO]: 2024-04-14 18:47:57,167 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0483, cls: 0.0306, iou: 0.0657), misc (ry: 0.12, z: 0.25), dt: 0.65, eta: 1.2h
[INFO]: 2024-04-14 18:50:25,748 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0548, cls: 0.0343, iou: 0.0704), misc (ry: 0.13, z: 0.27), dt: 0.65, eta: 1.2h
[INFO]: 2024-04-14 18:52:54,453 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0523, cls: 0.0315, iou: 0.0691), misc (ry: 0.13, z: 0.27), dt: 0.65, eta: 1.1h
[INFO]: 2024-04-14 18:55:25,075 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0493, cls: 0.0313, iou: 0.0648), misc (ry: 0.12, z: 0.25), dt: 0.65, eta: 1.1h
[INFO]: 2024-04-14 18:57:54,241 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0456, cls: 0.0309, iou: 0.0647), misc (ry: 0.12, z: 0.25), dt: 0.65, eta: 1.0h
[INFO]: 2024-04-14 19:00:22,369 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0440, cls: 0.0302, iou: 0.0641), misc (ry: 0.12, z: 0.25), dt: 0.65, eta: 59.2m
[INFO]: 2024-04-14 19:02:48,936 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0455, cls: 0.0304, iou: 0.0641), misc (ry: 0.12, z: 0.26), dt: 0.64, eta: 56.4m
[INFO]: 2024-04-14 19:05:21,999 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0411, cls: 0.0289, iou: 0.0615), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 53.7m
[INFO]: 2024-04-14 19:07:50,369 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0434, cls: 0.0290, iou: 0.0603), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 51.0m
[INFO]: 2024-04-14 19:10:20,769 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0469, cls: 0.0299, iou: 0.0653), misc (ry: 0.13, z: 0.25), dt: 0.64, eta: 48.3m
[INFO]: 2024-04-14 19:12:53,748 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0441, cls: 0.0307, iou: 0.0634), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 45.6m
[INFO]: 2024-04-14 19:15:26,913 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0474, cls: 0.0322, iou: 0.0662), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 42.9m
[INFO]: 2024-04-14 19:18:00,935 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0468, cls: 0.0290, iou: 0.0649), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 40.2m
[INFO]: 2024-04-14 19:20:35,384 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0426, cls: 0.0299, iou: 0.0628), misc (ry: 0.12, z: 0.24), dt: 0.64, eta: 37.6m
[INFO]: 2024-04-14 19:23:08,713 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0387, cls: 0.0298, iou: 0.0589), misc (ry: 0.11, z: 0.23), dt: 0.64, eta: 34.9m
[INFO]: 2024-04-14 19:25:41,352 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0441, cls: 0.0314, iou: 0.0637), misc (ry: 0.13, z: 0.25), dt: 0.64, eta: 32.2m
[INFO]: 2024-04-14 19:28:09,543 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0302, iou: 0.0609), misc (ry: 0.12, z: 0.25), dt: 0.64, eta: 29.5m
[INFO]: 2024-04-14 19:30:37,145 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0414, cls: 0.0293, iou: 0.0591), misc (ry: 0.12, z: 0.23), dt: 0.64, eta: 26.8m
[INFO]: 2024-04-14 19:33:09,692 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0397, cls: 0.0293, iou: 0.0591), misc (ry: 0.12, z: 0.23), dt: 0.64, eta: 24.1m
[INFO]: 2024-04-14 19:35:39,651 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0418, cls: 0.0312, iou: 0.0593), misc (ry: 0.12, z: 0.23), dt: 0.64, eta: 21.4m
[INFO]: 2024-04-14 19:38:06,569 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0427, cls: 0.0306, iou: 0.0600), misc (ry: 0.11, z: 0.24), dt: 0.64, eta: 18.7m
[INFO]: 2024-04-14 19:40:35,135 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0429, cls: 0.0307, iou: 0.0604), misc (ry: 0.12, z: 0.24), dt: 0.64, eta: 16.1m
[INFO]: 2024-04-14 19:43:05,916 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0400, cls: 0.0285, iou: 0.0578), misc (ry: 0.12, z: 0.23), dt: 0.64, eta: 13.4m
[INFO]: 2024-04-14 19:45:39,418 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0431, cls: 0.0310, iou: 0.0603), misc (ry: 0.12, z: 0.23), dt: 0.64, eta: 10.7m
[INFO]: 2024-04-14 19:48:06,099 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.94), loss (bbox_3d: 0.0383, cls: 0.0288, iou: 0.0599), misc (ry: 0.11, z: 0.23), dt: 0.64, eta: 8.0m
[INFO]: 2024-04-14 19:50:39,458 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0391, cls: 0.0285, iou: 0.0553), misc (ry: 0.11, z: 0.24), dt: 0.64, eta: 5.4m
[INFO]: 2024-04-14 19:53:14,556 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0408, cls: 0.0301, iou: 0.0572), misc (ry: 0.11, z: 0.23), dt: 0.64, eta: 2.7m
[INFO]: 2024-04-14 19:55:48,705 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.95), loss (bbox_3d: 0.0347, cls: 0.0270, iou: 0.0532), misc (ry: 0.11, z: 0.22), dt: 0.64, eta: 0.6s
[INFO]: 2024-04-14 20:04:46,059 test_iter 50000 2d car --> easy: 0.9130, mod: 0.8430, hard: 0.6810
[INFO]: 2024-04-14 20:04:46,060 test_iter 50000 gr car --> easy: 0.2629, mod: 0.2097, hard: 0.1734
[INFO]: 2024-04-14 20:04:46,061 test_iter 50000 3d car --> easy: 0.2069, mod: 0.1680, hard: 0.1479
[INFO]: 2024-04-14 20:04:46,062 test_iter 50000 2d pedestrian --> easy: 0.6683, mod: 0.5868, hard: 0.5039
[INFO]: 2024-04-14 20:04:46,062 test_iter 50000 gr pedestrian --> easy: 0.0444, mod: 0.0462, hard: 0.0411
[INFO]: 2024-04-14 20:04:46,063 test_iter 50000 3d pedestrian --> easy: 0.0356, mod: 0.0371, hard: 0.0295
[INFO]: 2024-04-14 20:04:46,063 test_iter 50000 2d cyclist --> easy: 0.6706, mod: 0.4198, hard: 0.4179
[INFO]: 2024-04-14 20:04:46,064 test_iter 50000 gr cyclist --> easy: 0.0535, mod: 0.0347, hard: 0.0338
[INFO]: 2024-04-14 20:04:46,064 test_iter 50000 3d cyclist --> easy: 0.0409, mod: 0.0322, hard: 0.0323
