[INFO]: 2024-04-08 10:49:15,856 ==开始处理数据集==
[INFO]: 2024-04-08 10:49:15,856 命中imdb缓存.
[INFO]: 2024-04-08 10:49:17,258 前景加权为: 1.05 背景加权为: 0.00
[INFO]: 2024-04-08 10:49:17,258 找到 3534 张前景图和 178 张空图
[INFO]: 2024-04-08 10:49:19,774 训练过程未使用的标签.. ['DontCare', 'Truck', 'Tram', 'Misc', 'Person_sitting']
[INFO]: 2024-04-08 10:49:19,774 ==数据集处理完毕==
[INFO]: 2024-04-08 10:49:22,777 ==开始生成anchors==
[INFO]: 2024-04-08 10:49:22,778 ==anchors生成完毕==
[INFO]: 2024-04-08 10:49:25,781 ==开始计算bbox参数==
[INFO]: 2024-04-08 10:49:25,781 命中bbox的回归均值缓存
[INFO]: 2024-04-08 10:49:25,781 命中bbox的回归标准差缓存
[INFO]: 2024-04-08 10:49:25,781 ==bbox参数计算完毕==
[INFO]: 2024-04-08 10:49:33,815 设置保存完成
[INFO]: 2024-04-08 10:49:36,819 训练配置一览
[INFO]: 2024-04-08 10:49:38,823 训练配置: {
    model:                  densenet121_3d_dilate                   
    solver_type:            sgd                                     
    lr:                     0.004                                   
    momentum:               0.9                                     
    weight_decay:           0.0005                                  
    max_iter:               50000                                   
    snapshot_iter:          10000                                   
    display:                250                                     
    do_test:                True                                    
    lr_policy:              poly                                    
    lr_steps:               None                                    
    lr_target:              4e-08                                   
    rng_seed:               3407                                    
    cuda_seed:              3407                                    
    image_means:            [0.485, 0.456, 0.406]                   
    image_stds:             [0.229, 0.224, 0.225]                   
    feat_stride:            16                                      
    has_3d:                 True                                    
    test_scale:             512                                     
    crop_size:              [512, 1760]                             
    mirror_prob:            0.5                                     
    distort_prob:           -1                                      
    dataset_test:           kitti_split1                            
    datasets_train:         [{'anno_fmt': 'kitti_det',
                             'im_ext': '.png',
                             'name': 'kitti_split1',
                             'scale': 1}]
    use_3d_for_2d:          True                                    
    percent_anc_h:          [0.0625, 0.75]                          
    min_gt_h:               32.0                                    
    max_gt_h:               384.0                                   
    min_gt_vis:             0.65                                    
    ilbls:                  ['Van', 'ignore']                       
    lbls:                   ['Car', 'Pedestrian', 'Cyclist']        
    batch_size:             2                                       
    fg_image_ratio:         1.0                                     
    box_samples:            0.2                                     
    fg_fraction:            0.2                                     
    bg_thresh_lo:           0                                       
    bg_thresh_hi:           0.5                                     
    fg_thresh:              0.5                                     
    ign_thresh:             0.5                                     
    best_thresh:            0.35                                    
    nms_topN_pre:           3000                                    
    nms_topN_post:          40                                      
    nms_thres:              0.4                                     
    clip_boxes:             False                                   
    test_protocol:          kitti                                   
    test_db:                kitti                                   
    test_min_h:             0                                       
    min_det_scales:         [0, 0]                                  
    cluster_anchors:        0                                       
    even_anchors:           0                                       
    expand_anchors:         0                                       
    anchors:                [[-0.5, -8.5, 15.5, 23.5, 51.969, 0.531,
                             1.713, 1.025, -0.799],
                            [-8.5, -8.5, 23.5, 23.5, 52.176, 1.618,
                             1.6, 3.811, -0.453],
                            [-16.5, -8.5, 31.5, 23.5, 48.334,
                             1.644, 1.529, 3.966, 0.673],
                            [-2.528, -12.555, 17.528, 27.555,
                             44.781, 0.534, 1.771, 0.971, 0.093],
                            [-12.555, -12.555, 27.555, 27.555,
                             44.704, 1.599, 1.569, 3.814, -0.187],
                            [-22.583, -12.555, 37.583, 27.555,
                             43.492, 1.621, 1.536, 3.91, 0.719],
                            [-5.069, -17.638, 20.069, 32.638,
                             34.666, 0.561, 1.752, 0.967, -0.384],
                            [-17.638, -17.638, 32.638, 32.638,
                             35.35, 1.567, 1.591, 3.81, -0.511],
                            [-30.207, -17.638, 45.207, 32.638,
                             37.128, 1.602, 1.529, 3.904, 0.452],
                            [-8.255, -24.01, 23.255, 39.01, 28.771,
                             0.613, 1.76, 0.98, 0.067],
                            [-24.01, -24.01, 39.01, 39.01, 28.331,
                             1.543, 1.592, 3.66, -0.811],
                            [-39.764, -24.01, 54.764, 39.01,
                             30.541, 1.626, 1.524, 3.908, 0.312],
                            [-12.248, -31.996, 27.248, 46.996,
                             23.011, 0.606, 1.758, 0.996, 0.208],
                            [-31.996, -31.996, 46.996, 46.996,
                             22.948, 1.51, 1.599, 3.419, -1.076],
                            [-51.744, -31.996, 66.744, 46.996,
                             25.0, 1.628, 1.527, 3.917, 0.334],
                            [-17.253, -42.006, 32.253, 57.006,
                             18.479, 0.601, 1.747, 1.007, 0.347],
                            [-42.006, -42.006, 57.006, 57.006,
                             18.815, 1.487, 1.599, 3.337, -0.862],
                            [-66.759, -42.006, 81.759, 57.006,
                             20.576, 1.623, 1.532, 3.942, 0.323],
                            [-23.527, -54.553, 38.527, 69.553,
                             15.035, 0.625, 1.744, 0.917, 0.41],
                            [-54.553, -54.553, 69.553, 69.553,
                             15.346, 1.29, 1.659, 3.083, -0.275],
                            [-85.58, -54.553, 100.58, 69.553,
                             16.326, 1.613, 1.527, 3.934, 0.268],
                            [-31.39, -70.281, 46.39, 85.281,
                             12.265, 0.631, 1.747, 0.954, 0.317],
                            [-70.281, -70.281, 85.281, 85.281,
                             11.878, 1.044, 1.67, 2.415, -0.211],
                            [-109.171, -70.281, 124.171, 85.281,
                             13.58, 1.621, 1.539, 3.961, 0.189],
                            [-41.247, -89.994, 56.247, 104.994,
                             9.932, 0.61, 1.771, 0.934, 0.486],
                            [-89.994, -89.994, 104.994, 104.994,
                             8.949, 0.811, 1.766, 1.662, 0.08],
                            [-138.741, -89.994, 153.741, 104.994,
                             11.043, 1.61, 1.533, 3.899, 0.04],
                            [-53.602, -114.704, 68.602, 129.704,
                             8.389, 0.604, 1.793, 0.95, 0.806],
                            [-114.704, -114.704, 129.704, 129.704,
                             8.071, 1.01, 1.751, 2.19, -0.076],
                            [-175.806, -114.704, 190.806, 129.704,
                             9.184, 1.606, 1.526, 3.869, -0.066],
                            [-69.089, -145.677, 84.089, 160.677,
                             6.923, 0.627, 1.791, 0.96, 0.784],
                            [-145.677, -145.677, 160.677, 160.677,
                             6.784, 1.384, 1.615, 2.862, -1.035],
                            [-222.266, -145.677, 237.266, 160.677,
                             7.863, 1.617, 1.55, 3.948, -0.071],
                            [-88.5, -184.5, 103.5, 199.5, 5.189,
                             0.66, 1.755, 0.841, 0.173],
                            [-184.5, -184.5, 199.5, 199.5, 4.388,
                             0.743, 1.728, 1.381, 0.642],
                            [-280.5, -184.5, 295.5, 199.5, 5.583,
                             1.583, 1.547, 3.862, -0.072]]
    bbox_means:             [[-0.0, 0.002, 0.064, -0.093, 0.011,
                             -0.067, 0.192, 0.059, -0.021, 0.069,
                             -0.004]]
    bbox_stds:              [[0.14, 0.126, 0.247, 0.239, 0.163,
                             0.132, 3.621, 0.382, 0.102, 0.503,
                             1.855]]
    anchor_scales:          [32.0, 40.11, 50.276, 63.019, 78.991,
                            99.012, 124.106, 155.561, 194.989,
                            244.409, 306.354, 384.0]
    anchor_ratios:          [0.5, 1.0, 1.5]                         
    hard_negatives:         True                                    
    focal_loss:             0                                       
    cls_2d_lambda:          1                                       
    iou_2d_lambda:          1                                       
    bbox_2d_lambda:         0                                       
    bbox_3d_lambda:         1                                       
    bbox_3d_proj_lambda:    0.0                                     
    hill_climbing:          True                                    
    visdom_port:            8100                                    
}
[INFO]: 2024-04-08 10:49:44,399 装载完成
[INFO]: 2024-04-08 10:49:47,402 神经网络结构一览
[INFO]: 2024-04-08 10:49:49,404 DataParallel(
  (module): RPN(
    (base): Sequential(
      (conv0): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (norm0): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu0): ReLU(inplace=True)
      (pool0): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (denseblock1): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): OREPA(
            (nonlinear): SiLU()
            (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
      )
      (transition1): _Transition(
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock2): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(192, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(192, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(224, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(224, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition2): _Transition(
        (norm): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
      )
      (denseblock3): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(288, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(352, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(352, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(384, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(416, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(416, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(448, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(448, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(480, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(480, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer17): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer18): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        )
        (denselayer19): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer20): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer21): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer22): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer23): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer24): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (transition3): _Transition(
        (norm): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      )
      (denseblock4): _DenseBlock(
        (denselayer1): _DenseLayer(
          (norm1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer2): _DenseLayer(
          (norm1): BatchNorm2d(544, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(544, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer3): _DenseLayer(
          (norm1): BatchNorm2d(576, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(576, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer4): _DenseLayer(
          (norm1): BatchNorm2d(608, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(608, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer5): _DenseLayer(
          (norm1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(640, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer6): _DenseLayer(
          (norm1): BatchNorm2d(672, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(672, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer7): _DenseLayer(
          (norm1): BatchNorm2d(704, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(704, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer8): _DenseLayer(
          (norm1): BatchNorm2d(736, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(736, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer9): _DenseLayer(
          (norm1): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(768, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer10): _DenseLayer(
          (norm1): BatchNorm2d(800, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(800, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer11): _DenseLayer(
          (norm1): BatchNorm2d(832, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(832, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer12): _DenseLayer(
          (norm1): BatchNorm2d(864, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(864, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        )
        (denselayer13): _DenseLayer(
          (norm1): BatchNorm2d(896, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(896, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer14): _DenseLayer(
          (norm1): BatchNorm2d(928, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(928, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer15): _DenseLayer(
          (norm1): BatchNorm2d(960, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(960, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
        (denselayer16): _DenseLayer(
          (norm1): BatchNorm2d(992, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu1): ReLU(inplace=True)
          (conv1): Conv2d(992, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu2): ReLU(inplace=True)
          (conv2): RefConv(
            (convmap): Conv2d(4096, 4096, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=4096, bias=False)
          )
        )
      )
      (norm5): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (prop_feats): Sequential(
      (0): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
    )
    (cls): Conv2d(512, 144, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_x3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_y3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_z3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_w3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_h3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_l3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (bbox_rY3d): Conv2d(512, 36, kernel_size=(1, 1), stride=(1, 1))
    (softmax): Softmax(dim=1)
  )
)
[INFO]: 2024-04-08 10:52:31,160 iter: 250, acc (bg: 0.97, fg: 0.35, iou: 0.60), loss (bbox_3d: 2.3270, cls: 0.6648, iou: 0.5241), misc (ry: 1.55, z: 2.71), dt: 0.65, eta: 9.0h
[INFO]: 2024-04-08 10:55:11,030 iter: 500, acc (bg: 0.99, fg: 0.64, iou: 0.64), loss (bbox_3d: 1.8415, cls: 0.4107, iou: 0.4516), misc (ry: 1.34, z: 2.30), dt: 0.64, eta: 8.9h
[INFO]: 2024-04-08 10:57:49,424 iter: 750, acc (bg: 0.99, fg: 0.68, iou: 0.67), loss (bbox_3d: 1.6231, cls: 0.3589, iou: 0.4117), misc (ry: 1.25, z: 2.07), dt: 0.64, eta: 8.8h
[INFO]: 2024-04-08 11:00:29,771 iter: 1000, acc (bg: 0.99, fg: 0.77, iou: 0.70), loss (bbox_3d: 1.3527, cls: 0.2850, iou: 0.3675), misc (ry: 1.09, z: 1.70), dt: 0.64, eta: 8.7h
[INFO]: 2024-04-08 11:03:09,182 iter: 1250, acc (bg: 0.99, fg: 0.82, iou: 0.72), loss (bbox_3d: 1.2101, cls: 0.2359, iou: 0.3431), misc (ry: 1.07, z: 1.63), dt: 0.64, eta: 8.7h
[INFO]: 2024-04-08 11:05:47,765 iter: 1500, acc (bg: 0.99, fg: 0.85, iou: 0.73), loss (bbox_3d: 1.1171, cls: 0.2010, iou: 0.3212), misc (ry: 1.03, z: 1.45), dt: 0.64, eta: 8.6h
[INFO]: 2024-04-08 11:08:29,104 iter: 1750, acc (bg: 0.99, fg: 0.85, iou: 0.74), loss (bbox_3d: 1.0361, cls: 0.2155, iou: 0.3148), misc (ry: 0.94, z: 1.47), dt: 0.64, eta: 8.6h
[INFO]: 2024-04-08 11:11:11,132 iter: 2000, acc (bg: 0.99, fg: 0.86, iou: 0.75), loss (bbox_3d: 1.0065, cls: 0.1906, iou: 0.2952), misc (ry: 0.91, z: 1.41), dt: 0.64, eta: 8.5h
[INFO]: 2024-04-08 11:13:50,704 iter: 2250, acc (bg: 0.99, fg: 0.85, iou: 0.75), loss (bbox_3d: 1.0614, cls: 0.1979, iou: 0.2941), misc (ry: 0.96, z: 1.36), dt: 0.64, eta: 8.5h
[INFO]: 2024-04-08 11:16:26,359 iter: 2500, acc (bg: 0.99, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.9089, cls: 0.1706, iou: 0.2732), misc (ry: 0.86, z: 1.27), dt: 0.64, eta: 8.4h
[INFO]: 2024-04-08 11:19:03,545 iter: 2750, acc (bg: 0.99, fg: 0.88, iou: 0.77), loss (bbox_3d: 0.9199, cls: 0.1731, iou: 0.2753), misc (ry: 0.89, z: 1.30), dt: 0.64, eta: 8.4h
[INFO]: 2024-04-08 11:21:39,803 iter: 3000, acc (bg: 0.99, fg: 0.87, iou: 0.77), loss (bbox_3d: 0.8721, cls: 0.1747, iou: 0.2650), misc (ry: 0.80, z: 1.20), dt: 0.64, eta: 8.3h
[INFO]: 2024-04-08 11:24:15,200 iter: 3250, acc (bg: 1.00, fg: 0.88, iou: 0.78), loss (bbox_3d: 0.8267, cls: 0.1636, iou: 0.2541), misc (ry: 0.80, z: 1.20), dt: 0.64, eta: 8.3h
[INFO]: 2024-04-08 11:26:46,049 iter: 3500, acc (bg: 1.00, fg: 0.87, iou: 0.78), loss (bbox_3d: 0.8299, cls: 0.1684, iou: 0.2506), misc (ry: 0.77, z: 1.15), dt: 0.63, eta: 8.2h
[INFO]: 2024-04-08 11:29:18,358 iter: 3750, acc (bg: 1.00, fg: 0.90, iou: 0.79), loss (bbox_3d: 0.8329, cls: 0.1406, iou: 0.2413), misc (ry: 0.86, z: 1.27), dt: 0.63, eta: 8.1h
[INFO]: 2024-04-08 11:31:54,711 iter: 4000, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7671, cls: 0.1420, iou: 0.2369), misc (ry: 0.77, z: 1.14), dt: 0.63, eta: 8.1h
[INFO]: 2024-04-08 11:34:28,028 iter: 4250, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7788, cls: 0.1389, iou: 0.2286), misc (ry: 0.73, z: 1.12), dt: 0.63, eta: 8.0h
[INFO]: 2024-04-08 11:37:05,350 iter: 4500, acc (bg: 1.00, fg: 0.91, iou: 0.80), loss (bbox_3d: 0.7874, cls: 0.1363, iou: 0.2334), misc (ry: 0.78, z: 1.17), dt: 0.63, eta: 8.0h
[INFO]: 2024-04-08 11:39:35,467 iter: 4750, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7072, cls: 0.1376, iou: 0.2334), misc (ry: 0.70, z: 1.09), dt: 0.63, eta: 7.9h
[INFO]: 2024-04-08 11:42:14,881 iter: 5000, acc (bg: 1.00, fg: 0.92, iou: 0.81), loss (bbox_3d: 0.6352, cls: 0.1313, iou: 0.2197), misc (ry: 0.63, z: 1.02), dt: 0.63, eta: 7.9h
[INFO]: 2024-04-08 11:44:53,837 iter: 5250, acc (bg: 1.00, fg: 0.89, iou: 0.80), loss (bbox_3d: 0.6914, cls: 0.1477, iou: 0.2261), misc (ry: 0.70, z: 1.00), dt: 0.63, eta: 7.8h
[INFO]: 2024-04-08 11:47:27,069 iter: 5500, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6945, cls: 0.1331, iou: 0.2213), misc (ry: 0.69, z: 1.11), dt: 0.63, eta: 7.8h
[INFO]: 2024-04-08 11:49:59,935 iter: 5750, acc (bg: 1.00, fg: 0.90, iou: 0.81), loss (bbox_3d: 0.6843, cls: 0.1400, iou: 0.2185), misc (ry: 0.67, z: 1.04), dt: 0.63, eta: 7.7h
[INFO]: 2024-04-08 11:52:40,864 iter: 6000, acc (bg: 1.00, fg: 0.90, iou: 0.80), loss (bbox_3d: 0.7427, cls: 0.1393, iou: 0.2272), misc (ry: 0.77, z: 1.18), dt: 0.63, eta: 7.7h
[INFO]: 2024-04-08 11:55:22,576 iter: 6250, acc (bg: 1.00, fg: 0.90, iou: 0.82), loss (bbox_3d: 0.6190, cls: 0.1286, iou: 0.2061), misc (ry: 0.65, z: 0.98), dt: 0.63, eta: 7.6h
[INFO]: 2024-04-08 11:57:59,963 iter: 6500, acc (bg: 1.00, fg: 0.91, iou: 0.82), loss (bbox_3d: 0.6638, cls: 0.1210, iou: 0.2086), misc (ry: 0.69, z: 1.04), dt: 0.63, eta: 7.6h
[INFO]: 2024-04-08 12:00:36,678 iter: 6750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5985, cls: 0.1193, iou: 0.2025), misc (ry: 0.62, z: 0.95), dt: 0.63, eta: 7.6h
[INFO]: 2024-04-08 12:03:10,986 iter: 7000, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5920, cls: 0.1161, iou: 0.2043), misc (ry: 0.63, z: 0.90), dt: 0.63, eta: 7.5h
[INFO]: 2024-04-08 12:05:42,739 iter: 7250, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5779, cls: 0.1039, iou: 0.1946), misc (ry: 0.62, z: 0.97), dt: 0.63, eta: 7.5h
[INFO]: 2024-04-08 12:08:15,008 iter: 7500, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5731, cls: 0.1204, iou: 0.2027), misc (ry: 0.61, z: 0.91), dt: 0.63, eta: 7.4h
[INFO]: 2024-04-08 12:10:45,900 iter: 7750, acc (bg: 1.00, fg: 0.92, iou: 0.82), loss (bbox_3d: 0.5869, cls: 0.1123, iou: 0.2011), misc (ry: 0.62, z: 0.96), dt: 0.63, eta: 7.4h
[INFO]: 2024-04-08 12:13:18,275 iter: 8000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.4981, cls: 0.1012, iou: 0.1910), misc (ry: 0.50, z: 0.84), dt: 0.63, eta: 7.3h
[INFO]: 2024-04-08 12:15:52,983 iter: 8250, acc (bg: 1.00, fg: 0.91, iou: 0.83), loss (bbox_3d: 0.5438, cls: 0.1137, iou: 0.1942), misc (ry: 0.57, z: 0.86), dt: 0.63, eta: 7.3h
[INFO]: 2024-04-08 12:18:26,135 iter: 8500, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5010, cls: 0.1009, iou: 0.1919), misc (ry: 0.49, z: 0.89), dt: 0.63, eta: 7.2h
[INFO]: 2024-04-08 12:21:03,325 iter: 8750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5034, cls: 0.1103, iou: 0.1882), misc (ry: 0.52, z: 0.88), dt: 0.63, eta: 7.2h
[INFO]: 2024-04-08 12:23:41,726 iter: 9000, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4870, cls: 0.1046, iou: 0.1846), misc (ry: 0.56, z: 0.77), dt: 0.63, eta: 7.1h
[INFO]: 2024-04-08 12:26:15,723 iter: 9250, acc (bg: 1.00, fg: 0.94, iou: 0.83), loss (bbox_3d: 0.5438, cls: 0.1016, iou: 0.1901), misc (ry: 0.58, z: 0.94), dt: 0.63, eta: 7.1h
[INFO]: 2024-04-08 12:28:47,598 iter: 9500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4821, cls: 0.1004, iou: 0.1808), misc (ry: 0.49, z: 0.79), dt: 0.63, eta: 7.0h
[INFO]: 2024-04-08 12:31:25,318 iter: 9750, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5269, cls: 0.1075, iou: 0.1895), misc (ry: 0.48, z: 0.95), dt: 0.63, eta: 7.0h
[INFO]: 2024-04-08 12:34:00,791 iter: 10000, acc (bg: 1.00, fg: 0.93, iou: 0.83), loss (bbox_3d: 0.5578, cls: 0.1092, iou: 0.1952), misc (ry: 0.61, z: 0.91), dt: 0.63, eta: 6.9h
[INFO]: 2024-04-08 12:44:14,356 test_iter 10000 2d car --> easy: 0.7648, mod: 0.7131, hard: 0.6118
[INFO]: 2024-04-08 12:44:14,357 test_iter 10000 gr car --> easy: 0.0434, mod: 0.0369, hard: 0.0364
[INFO]: 2024-04-08 12:44:14,357 test_iter 10000 3d car --> easy: 0.0216, mod: 0.0239, hard: 0.0210
[INFO]: 2024-04-08 12:44:14,358 test_iter 10000 2d pedestrian --> easy: 0.5272, mod: 0.4611, hard: 0.3902
[INFO]: 2024-04-08 12:44:14,358 test_iter 10000 gr pedestrian --> easy: 0.0204, mod: 0.0207, hard: 0.0134
[INFO]: 2024-04-08 12:44:14,359 test_iter 10000 3d pedestrian --> easy: 0.0194, mod: 0.0123, hard: 0.0121
[INFO]: 2024-04-08 12:44:14,360 test_iter 10000 2d cyclist --> easy: 0.0642, mod: 0.0364, hard: 0.0379
[INFO]: 2024-04-08 12:44:14,360 test_iter 10000 gr cyclist --> easy: 0.0000, mod: 0.0000, hard: 0.0000
[INFO]: 2024-04-08 12:44:14,361 test_iter 10000 3d cyclist --> easy: 0.0000, mod: 0.0000, hard: 0.0000
[INFO]: 2024-04-08 12:46:53,981 iter: 10250, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4692, cls: 0.0928, iou: 0.1783), misc (ry: 0.52, z: 0.81), dt: 0.69, eta: 7.6h
[INFO]: 2024-04-08 12:49:27,822 iter: 10500, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4404, cls: 0.0985, iou: 0.1818), misc (ry: 0.52, z: 0.82), dt: 0.68, eta: 7.5h
[INFO]: 2024-04-08 12:52:06,458 iter: 10750, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4903, cls: 0.0958, iou: 0.1829), misc (ry: 0.52, z: 0.86), dt: 0.68, eta: 7.4h
[INFO]: 2024-04-08 12:54:39,791 iter: 11000, acc (bg: 1.00, fg: 0.94, iou: 0.84), loss (bbox_3d: 0.4039, cls: 0.0957, iou: 0.1773), misc (ry: 0.42, z: 0.76), dt: 0.68, eta: 7.4h
[INFO]: 2024-04-08 12:57:10,120 iter: 11250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.4182, cls: 0.0908, iou: 0.1721), misc (ry: 0.49, z: 0.80), dt: 0.68, eta: 7.3h
[INFO]: 2024-04-08 13:00:48,295 iter: 11500, acc (bg: 1.00, fg: 0.93, iou: 0.84), loss (bbox_3d: 0.4316, cls: 0.0974, iou: 0.1801), misc (ry: 0.45, z: 0.77), dt: 0.68, eta: 7.3h
[INFO]: 2024-04-08 13:04:47,840 iter: 11750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4047, cls: 0.0822, iou: 0.1690), misc (ry: 0.47, z: 0.73), dt: 0.69, eta: 7.3h
[INFO]: 2024-04-08 13:08:49,533 iter: 12000, acc (bg: 1.00, fg: 0.95, iou: 0.84), loss (bbox_3d: 0.4310, cls: 0.0914, iou: 0.1755), misc (ry: 0.52, z: 0.72), dt: 0.70, eta: 7.3h
[INFO]: 2024-04-08 13:12:50,554 iter: 12250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.4115, cls: 0.0848, iou: 0.1732), misc (ry: 0.46, z: 0.82), dt: 0.70, eta: 7.3h
[INFO]: 2024-04-08 13:16:50,719 iter: 12500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3740, cls: 0.0882, iou: 0.1695), misc (ry: 0.39, z: 0.70), dt: 0.71, eta: 7.4h
[INFO]: 2024-04-08 13:20:53,356 iter: 12750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3733, cls: 0.0852, iou: 0.1648), misc (ry: 0.43, z: 0.72), dt: 0.71, eta: 7.4h
[INFO]: 2024-04-08 13:24:57,834 iter: 13000, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3906, cls: 0.0898, iou: 0.1728), misc (ry: 0.47, z: 0.74), dt: 0.72, eta: 7.4h
[INFO]: 2024-04-08 13:29:04,509 iter: 13250, acc (bg: 1.00, fg: 0.94, iou: 0.85), loss (bbox_3d: 0.3755, cls: 0.0918, iou: 0.1662), misc (ry: 0.40, z: 0.75), dt: 0.72, eta: 7.4h
[INFO]: 2024-04-08 13:33:09,629 iter: 13500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3380, cls: 0.0838, iou: 0.1629), misc (ry: 0.38, z: 0.69), dt: 0.73, eta: 7.4h
[INFO]: 2024-04-08 13:37:13,944 iter: 13750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3509, cls: 0.0792, iou: 0.1594), misc (ry: 0.45, z: 0.69), dt: 0.73, eta: 7.4h
[INFO]: 2024-04-08 13:41:15,433 iter: 14000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3592, cls: 0.0772, iou: 0.1600), misc (ry: 0.43, z: 0.70), dt: 0.73, eta: 7.3h
[INFO]: 2024-04-08 13:45:19,177 iter: 14250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3643, cls: 0.0834, iou: 0.1635), misc (ry: 0.44, z: 0.76), dt: 0.74, eta: 7.3h
[INFO]: 2024-04-08 13:49:19,401 iter: 14500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3887, cls: 0.0886, iou: 0.1719), misc (ry: 0.48, z: 0.75), dt: 0.74, eta: 7.3h
[INFO]: 2024-04-08 13:53:21,210 iter: 14750, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3605, cls: 0.0853, iou: 0.1662), misc (ry: 0.44, z: 0.65), dt: 0.75, eta: 7.3h
[INFO]: 2024-04-08 13:56:05,500 iter: 15000, acc (bg: 1.00, fg: 0.96, iou: 0.85), loss (bbox_3d: 0.3303, cls: 0.0782, iou: 0.1627), misc (ry: 0.41, z: 0.72), dt: 0.75, eta: 7.2h
[INFO]: 2024-04-08 13:58:40,380 iter: 15250, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3952, cls: 0.0833, iou: 0.1620), misc (ry: 0.48, z: 0.72), dt: 0.74, eta: 7.2h
[INFO]: 2024-04-08 14:01:15,383 iter: 15500, acc (bg: 1.00, fg: 0.95, iou: 0.85), loss (bbox_3d: 0.3735, cls: 0.0817, iou: 0.1673), misc (ry: 0.40, z: 0.70), dt: 0.74, eta: 7.1h
[INFO]: 2024-04-08 14:03:45,832 iter: 15750, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3395, cls: 0.0794, iou: 0.1601), misc (ry: 0.43, z: 0.63), dt: 0.74, eta: 7.0h
[INFO]: 2024-04-08 14:06:18,885 iter: 16000, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3202, cls: 0.0784, iou: 0.1571), misc (ry: 0.38, z: 0.66), dt: 0.74, eta: 7.0h
[INFO]: 2024-04-08 14:08:48,542 iter: 16250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3052, cls: 0.0746, iou: 0.1549), misc (ry: 0.35, z: 0.66), dt: 0.73, eta: 6.9h
[INFO]: 2024-04-08 14:11:19,422 iter: 16500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2802, cls: 0.0746, iou: 0.1490), misc (ry: 0.35, z: 0.59), dt: 0.73, eta: 6.8h
[INFO]: 2024-04-08 14:13:51,755 iter: 16750, acc (bg: 1.00, fg: 0.97, iou: 0.86), loss (bbox_3d: 0.2928, cls: 0.0705, iou: 0.1534), misc (ry: 0.38, z: 0.56), dt: 0.73, eta: 6.8h
[INFO]: 2024-04-08 14:16:26,395 iter: 17000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2804, cls: 0.0690, iou: 0.1470), misc (ry: 0.36, z: 0.65), dt: 0.73, eta: 6.7h
[INFO]: 2024-04-08 14:18:57,143 iter: 17250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.3238, cls: 0.0735, iou: 0.1540), misc (ry: 0.40, z: 0.74), dt: 0.73, eta: 6.6h
[INFO]: 2024-04-08 14:21:30,730 iter: 17500, acc (bg: 1.00, fg: 0.95, iou: 0.86), loss (bbox_3d: 0.3317, cls: 0.0800, iou: 0.1595), misc (ry: 0.39, z: 0.73), dt: 0.73, eta: 6.6h
[INFO]: 2024-04-08 14:24:04,918 iter: 17750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2784, cls: 0.0739, iou: 0.1479), misc (ry: 0.32, z: 0.62), dt: 0.72, eta: 6.5h
[INFO]: 2024-04-08 14:26:43,595 iter: 18000, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2881, cls: 0.0697, iou: 0.1487), misc (ry: 0.33, z: 0.69), dt: 0.72, eta: 6.4h
[INFO]: 2024-04-08 14:29:22,779 iter: 18250, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2710, cls: 0.0736, iou: 0.1508), misc (ry: 0.32, z: 0.63), dt: 0.72, eta: 6.4h
[INFO]: 2024-04-08 14:31:59,798 iter: 18500, acc (bg: 1.00, fg: 0.96, iou: 0.86), loss (bbox_3d: 0.2851, cls: 0.0696, iou: 0.1506), misc (ry: 0.31, z: 0.68), dt: 0.72, eta: 6.3h
[INFO]: 2024-04-08 14:34:32,455 iter: 18750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2743, cls: 0.0693, iou: 0.1461), misc (ry: 0.34, z: 0.60), dt: 0.72, eta: 6.2h
[INFO]: 2024-04-08 14:37:03,511 iter: 19000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2740, cls: 0.0672, iou: 0.1475), misc (ry: 0.30, z: 0.67), dt: 0.72, eta: 6.2h
[INFO]: 2024-04-08 14:39:35,881 iter: 19250, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2542, cls: 0.0681, iou: 0.1471), misc (ry: 0.31, z: 0.58), dt: 0.72, eta: 6.1h
[INFO]: 2024-04-08 14:42:18,776 iter: 19500, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2508, cls: 0.0749, iou: 0.1470), misc (ry: 0.35, z: 0.57), dt: 0.72, eta: 6.1h
[INFO]: 2024-04-08 14:45:00,003 iter: 19750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2483, cls: 0.0624, iou: 0.1414), misc (ry: 0.31, z: 0.63), dt: 0.71, eta: 6.0h
[INFO]: 2024-04-08 14:47:38,270 iter: 20000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2751, cls: 0.0634, iou: 0.1444), misc (ry: 0.31, z: 0.65), dt: 0.71, eta: 5.9h
[INFO]: 2024-04-08 14:57:53,955 test_iter 20000 2d car --> easy: 0.9005, mod: 0.8148, hard: 0.6668
[INFO]: 2024-04-08 14:57:53,956 test_iter 20000 gr car --> easy: 0.0891, mod: 0.0672, hard: 0.0548
[INFO]: 2024-04-08 14:57:53,957 test_iter 20000 3d car --> easy: 0.0521, mod: 0.0415, hard: 0.0385
[INFO]: 2024-04-08 14:57:53,958 test_iter 20000 2d pedestrian --> easy: 0.6381, mod: 0.5613, hard: 0.4829
[INFO]: 2024-04-08 14:57:53,958 test_iter 20000 gr pedestrian --> easy: 0.1052, mod: 0.1036, hard: 0.0994
[INFO]: 2024-04-08 14:57:53,959 test_iter 20000 3d pedestrian --> easy: 0.1022, mod: 0.0992, hard: 0.0909
[INFO]: 2024-04-08 14:57:53,959 test_iter 20000 2d cyclist --> easy: 0.2930, mod: 0.2012, hard: 0.2005
[INFO]: 2024-04-08 14:57:53,960 test_iter 20000 gr cyclist --> easy: 0.0909, mod: 0.0909, hard: 0.0909
[INFO]: 2024-04-08 14:57:53,961 test_iter 20000 3d cyclist --> easy: 0.0035, mod: 0.0038, hard: 0.0038
[INFO]: 2024-04-08 15:00:32,207 iter: 20250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2358, cls: 0.0613, iou: 0.1354), misc (ry: 0.29, z: 0.58), dt: 0.74, eta: 6.1h
[INFO]: 2024-04-08 15:03:12,393 iter: 20500, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2400, cls: 0.0659, iou: 0.1409), misc (ry: 0.30, z: 0.57), dt: 0.74, eta: 6.1h
[INFO]: 2024-04-08 15:05:46,501 iter: 20750, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2306, cls: 0.0630, iou: 0.1397), misc (ry: 0.28, z: 0.56), dt: 0.74, eta: 6.0h
[INFO]: 2024-04-08 15:08:20,493 iter: 21000, acc (bg: 1.00, fg: 0.97, iou: 0.87), loss (bbox_3d: 0.2473, cls: 0.0667, iou: 0.1403), misc (ry: 0.33, z: 0.58), dt: 0.74, eta: 6.0h
[INFO]: 2024-04-08 15:10:56,982 iter: 21250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2245, cls: 0.0655, iou: 0.1369), misc (ry: 0.28, z: 0.56), dt: 0.74, eta: 5.9h
[INFO]: 2024-04-08 15:13:30,941 iter: 21500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2101, cls: 0.0611, iou: 0.1321), misc (ry: 0.25, z: 0.59), dt: 0.74, eta: 5.8h
[INFO]: 2024-04-08 15:16:04,432 iter: 21750, acc (bg: 1.00, fg: 0.96, iou: 0.87), loss (bbox_3d: 0.2418, cls: 0.0656, iou: 0.1380), misc (ry: 0.28, z: 0.59), dt: 0.73, eta: 5.8h
[INFO]: 2024-04-08 15:18:36,534 iter: 22000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.1998, cls: 0.0592, iou: 0.1303), misc (ry: 0.28, z: 0.53), dt: 0.73, eta: 5.7h
[INFO]: 2024-04-08 15:21:13,119 iter: 22250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1909, cls: 0.0588, iou: 0.1313), misc (ry: 0.25, z: 0.53), dt: 0.73, eta: 5.6h
[INFO]: 2024-04-08 15:23:42,174 iter: 22500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1962, cls: 0.0593, iou: 0.1285), misc (ry: 0.27, z: 0.54), dt: 0.73, eta: 5.6h
[INFO]: 2024-04-08 15:26:16,196 iter: 22750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2040, cls: 0.0575, iou: 0.1310), misc (ry: 0.32, z: 0.53), dt: 0.73, eta: 5.5h
[INFO]: 2024-04-08 15:28:42,958 iter: 23000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2123, cls: 0.0571, iou: 0.1298), misc (ry: 0.32, z: 0.52), dt: 0.73, eta: 5.5h
[INFO]: 2024-04-08 15:31:15,280 iter: 23250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2074, cls: 0.0590, iou: 0.1282), misc (ry: 0.30, z: 0.53), dt: 0.73, eta: 5.4h
[INFO]: 2024-04-08 15:33:49,277 iter: 23500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2185, cls: 0.0584, iou: 0.1349), misc (ry: 0.29, z: 0.56), dt: 0.73, eta: 5.3h
[INFO]: 2024-04-08 15:36:22,103 iter: 23750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1900, cls: 0.0568, iou: 0.1296), misc (ry: 0.26, z: 0.55), dt: 0.72, eta: 5.3h
[INFO]: 2024-04-08 15:38:55,094 iter: 24000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2026, cls: 0.0571, iou: 0.1276), misc (ry: 0.26, z: 0.55), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-08 15:41:37,347 iter: 24250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1927, cls: 0.0561, iou: 0.1252), misc (ry: 0.27, z: 0.55), dt: 0.72, eta: 5.2h
[INFO]: 2024-04-08 15:44:17,324 iter: 24500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2124, cls: 0.0575, iou: 0.1296), misc (ry: 0.31, z: 0.58), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-08 15:47:00,307 iter: 24750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2236, cls: 0.0569, iou: 0.1337), misc (ry: 0.34, z: 0.61), dt: 0.72, eta: 5.1h
[INFO]: 2024-04-08 15:49:42,985 iter: 25000, acc (bg: 1.00, fg: 0.98, iou: 0.88), loss (bbox_3d: 0.2093, cls: 0.0541, iou: 0.1296), misc (ry: 0.28, z: 0.57), dt: 0.72, eta: 5.0h
[INFO]: 2024-04-08 15:52:20,505 iter: 25250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2097, cls: 0.0574, iou: 0.1300), misc (ry: 0.28, z: 0.53), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-08 15:54:53,934 iter: 25500, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1891, cls: 0.0553, iou: 0.1256), misc (ry: 0.26, z: 0.50), dt: 0.72, eta: 4.9h
[INFO]: 2024-04-08 15:57:25,943 iter: 25750, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1968, cls: 0.0586, iou: 0.1296), misc (ry: 0.29, z: 0.51), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-08 16:00:00,838 iter: 26000, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.1773, cls: 0.0576, iou: 0.1268), misc (ry: 0.26, z: 0.48), dt: 0.72, eta: 4.8h
[INFO]: 2024-04-08 16:02:42,208 iter: 26250, acc (bg: 1.00, fg: 0.97, iou: 0.88), loss (bbox_3d: 0.2221, cls: 0.0548, iou: 0.1290), misc (ry: 0.34, z: 0.55), dt: 0.72, eta: 4.7h
[INFO]: 2024-04-08 16:05:14,881 iter: 26500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1851, cls: 0.0551, iou: 0.1238), misc (ry: 0.28, z: 0.50), dt: 0.71, eta: 4.7h
[INFO]: 2024-04-08 16:07:48,160 iter: 26750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1598, cls: 0.0540, iou: 0.1214), misc (ry: 0.23, z: 0.45), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-08 16:10:23,900 iter: 27000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1645, cls: 0.0551, iou: 0.1229), misc (ry: 0.24, z: 0.48), dt: 0.71, eta: 4.6h
[INFO]: 2024-04-08 16:13:02,584 iter: 27250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1784, cls: 0.0551, iou: 0.1225), misc (ry: 0.27, z: 0.50), dt: 0.71, eta: 4.5h
[INFO]: 2024-04-08 16:15:39,522 iter: 27500, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.2089, cls: 0.0562, iou: 0.1257), misc (ry: 0.34, z: 0.51), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-08 16:18:17,940 iter: 27750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1934, cls: 0.0528, iou: 0.1245), misc (ry: 0.31, z: 0.52), dt: 0.71, eta: 4.4h
[INFO]: 2024-04-08 16:20:59,378 iter: 28000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1745, cls: 0.0540, iou: 0.1178), misc (ry: 0.25, z: 0.48), dt: 0.71, eta: 4.3h
[INFO]: 2024-04-08 16:23:35,474 iter: 28250, acc (bg: 1.00, fg: 0.97, iou: 0.89), loss (bbox_3d: 0.1704, cls: 0.0554, iou: 0.1205), misc (ry: 0.25, z: 0.49), dt: 0.71, eta: 4.3h
[INFO]: 2024-04-08 16:26:09,729 iter: 28500, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1733, cls: 0.0506, iou: 0.1171), misc (ry: 0.25, z: 0.49), dt: 0.71, eta: 4.2h
[INFO]: 2024-04-08 16:28:45,921 iter: 28750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1912, cls: 0.0546, iou: 0.1227), misc (ry: 0.31, z: 0.51), dt: 0.71, eta: 4.2h
[INFO]: 2024-04-08 16:31:24,418 iter: 29000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1814, cls: 0.0531, iou: 0.1205), misc (ry: 0.29, z: 0.48), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-08 16:34:01,503 iter: 29250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1569, cls: 0.0540, iou: 0.1187), misc (ry: 0.24, z: 0.48), dt: 0.71, eta: 4.1h
[INFO]: 2024-04-08 16:36:37,550 iter: 29500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1384, cls: 0.0475, iou: 0.1108), misc (ry: 0.20, z: 0.48), dt: 0.71, eta: 4.0h
[INFO]: 2024-04-08 16:39:15,648 iter: 29750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1662, cls: 0.0514, iou: 0.1156), misc (ry: 0.26, z: 0.50), dt: 0.70, eta: 4.0h
[INFO]: 2024-04-08 16:41:44,526 iter: 30000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1602, cls: 0.0505, iou: 0.1185), misc (ry: 0.24, z: 0.52), dt: 0.70, eta: 3.9h
[INFO]: 2024-04-08 16:51:56,947 test_iter 30000 2d car --> easy: 0.8771, mod: 0.8131, hard: 0.6647
[INFO]: 2024-04-08 16:51:56,948 test_iter 30000 gr car --> easy: 0.1814, mod: 0.1548, hard: 0.1406
[INFO]: 2024-04-08 16:51:56,949 test_iter 30000 3d car --> easy: 0.1506, mod: 0.1304, hard: 0.1157
[INFO]: 2024-04-08 16:51:56,949 test_iter 30000 2d pedestrian --> easy: 0.6724, mod: 0.5913, hard: 0.5072
[INFO]: 2024-04-08 16:51:56,950 test_iter 30000 gr pedestrian --> easy: 0.0433, mod: 0.0414, hard: 0.0401
[INFO]: 2024-04-08 16:51:56,951 test_iter 30000 3d pedestrian --> easy: 0.0353, mod: 0.0331, hard: 0.0250
[INFO]: 2024-04-08 16:51:56,951 test_iter 30000 2d cyclist --> easy: 0.5156, mod: 0.3101, hard: 0.3080
[INFO]: 2024-04-08 16:51:56,951 test_iter 30000 gr cyclist --> easy: 0.0519, mod: 0.0455, hard: 0.0455
[INFO]: 2024-04-08 16:51:56,952 test_iter 30000 3d cyclist --> easy: 0.0510, mod: 0.0455, hard: 0.0455
[INFO]: 2024-04-08 16:54:37,468 iter: 30250, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1496, cls: 0.0514, iou: 0.1162), misc (ry: 0.22, z: 0.47), dt: 0.72, eta: 4.0h
[INFO]: 2024-04-08 16:57:12,807 iter: 30500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1373, cls: 0.0457, iou: 0.1081), misc (ry: 0.21, z: 0.47), dt: 0.72, eta: 3.9h
[INFO]: 2024-04-08 16:59:49,882 iter: 30750, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1527, cls: 0.0519, iou: 0.1169), misc (ry: 0.23, z: 0.46), dt: 0.72, eta: 3.9h
[INFO]: 2024-04-08 17:02:28,375 iter: 31000, acc (bg: 1.00, fg: 0.98, iou: 0.89), loss (bbox_3d: 0.1392, cls: 0.0525, iou: 0.1158), misc (ry: 0.22, z: 0.44), dt: 0.72, eta: 3.8h
[INFO]: 2024-04-08 17:05:04,631 iter: 31250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1300, cls: 0.0477, iou: 0.1061), misc (ry: 0.19, z: 0.41), dt: 0.72, eta: 3.8h
[INFO]: 2024-04-08 17:07:41,472 iter: 31500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1309, cls: 0.0480, iou: 0.1115), misc (ry: 0.19, z: 0.44), dt: 0.72, eta: 3.7h
[INFO]: 2024-04-08 17:10:17,972 iter: 31750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1472, cls: 0.0476, iou: 0.1134), misc (ry: 0.23, z: 0.45), dt: 0.72, eta: 3.6h
[INFO]: 2024-04-08 17:12:55,962 iter: 32000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1366, cls: 0.0500, iou: 0.1118), misc (ry: 0.22, z: 0.43), dt: 0.72, eta: 3.6h
[INFO]: 2024-04-08 17:15:31,286 iter: 32250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1233, cls: 0.0491, iou: 0.1077), misc (ry: 0.20, z: 0.40), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-08 17:18:05,139 iter: 32500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1133, cls: 0.0456, iou: 0.1042), misc (ry: 0.20, z: 0.40), dt: 0.72, eta: 3.5h
[INFO]: 2024-04-08 17:20:40,031 iter: 32750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1264, cls: 0.0470, iou: 0.1085), misc (ry: 0.20, z: 0.42), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-08 17:23:18,729 iter: 33000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1204, cls: 0.0434, iou: 0.1053), misc (ry: 0.19, z: 0.42), dt: 0.72, eta: 3.4h
[INFO]: 2024-04-08 17:25:52,238 iter: 33250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1157, cls: 0.0449, iou: 0.1050), misc (ry: 0.19, z: 0.41), dt: 0.71, eta: 3.3h
[INFO]: 2024-04-08 17:28:26,649 iter: 33500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1282, cls: 0.0476, iou: 0.1065), misc (ry: 0.21, z: 0.41), dt: 0.71, eta: 3.3h
[INFO]: 2024-04-08 17:30:56,845 iter: 33750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1142, cls: 0.0462, iou: 0.1035), misc (ry: 0.20, z: 0.40), dt: 0.71, eta: 3.2h
[INFO]: 2024-04-08 17:33:34,613 iter: 34000, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1287, cls: 0.0478, iou: 0.1057), misc (ry: 0.25, z: 0.41), dt: 0.71, eta: 3.2h
[INFO]: 2024-04-08 17:36:08,719 iter: 34250, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1239, cls: 0.0464, iou: 0.1055), misc (ry: 0.20, z: 0.43), dt: 0.71, eta: 3.1h
[INFO]: 2024-04-08 17:38:44,204 iter: 34500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1032, cls: 0.0445, iou: 0.0971), misc (ry: 0.19, z: 0.37), dt: 0.71, eta: 3.1h
[INFO]: 2024-04-08 17:41:22,010 iter: 34750, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1244, cls: 0.0483, iou: 0.1045), misc (ry: 0.21, z: 0.42), dt: 0.71, eta: 3.0h
[INFO]: 2024-04-08 17:44:01,004 iter: 35000, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.1148, cls: 0.0413, iou: 0.0993), misc (ry: 0.20, z: 0.41), dt: 0.71, eta: 3.0h
[INFO]: 2024-04-08 17:46:30,531 iter: 35250, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0981, cls: 0.0418, iou: 0.0985), misc (ry: 0.18, z: 0.37), dt: 0.71, eta: 2.9h
[INFO]: 2024-04-08 17:49:08,101 iter: 35500, acc (bg: 1.00, fg: 0.98, iou: 0.90), loss (bbox_3d: 0.1150, cls: 0.0463, iou: 0.1039), misc (ry: 0.20, z: 0.38), dt: 0.71, eta: 2.9h
[INFO]: 2024-04-08 17:51:41,600 iter: 35750, acc (bg: 1.00, fg: 0.99, iou: 0.91), loss (bbox_3d: 0.0988, cls: 0.0401, iou: 0.0980), misc (ry: 0.18, z: 0.37), dt: 0.71, eta: 2.8h
[INFO]: 2024-04-08 17:54:20,666 iter: 36000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1068, cls: 0.0420, iou: 0.0977), misc (ry: 0.21, z: 0.39), dt: 0.71, eta: 2.8h
[INFO]: 2024-04-08 17:57:01,911 iter: 36250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1103, cls: 0.0444, iou: 0.1003), misc (ry: 0.19, z: 0.38), dt: 0.71, eta: 2.7h
[INFO]: 2024-04-08 17:59:43,549 iter: 36500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0982, cls: 0.0419, iou: 0.0952), misc (ry: 0.18, z: 0.38), dt: 0.71, eta: 2.7h
[INFO]: 2024-04-08 18:02:20,643 iter: 36750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0955, cls: 0.0432, iou: 0.0951), misc (ry: 0.17, z: 0.36), dt: 0.71, eta: 2.6h
[INFO]: 2024-04-08 18:04:58,255 iter: 37000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0953, cls: 0.0430, iou: 0.0941), misc (ry: 0.17, z: 0.37), dt: 0.71, eta: 2.5h
[INFO]: 2024-04-08 18:07:34,304 iter: 37250, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0956, cls: 0.0421, iou: 0.0940), misc (ry: 0.17, z: 0.35), dt: 0.71, eta: 2.5h
[INFO]: 2024-04-08 18:10:11,378 iter: 37500, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1005, cls: 0.0413, iou: 0.0972), misc (ry: 0.18, z: 0.37), dt: 0.70, eta: 2.4h
[INFO]: 2024-04-08 18:12:49,637 iter: 37750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1046, cls: 0.0436, iou: 0.0962), misc (ry: 0.18, z: 0.37), dt: 0.70, eta: 2.4h
[INFO]: 2024-04-08 18:15:27,787 iter: 38000, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.1019, cls: 0.0449, iou: 0.0965), misc (ry: 0.18, z: 0.35), dt: 0.70, eta: 2.3h
[INFO]: 2024-04-08 18:18:04,214 iter: 38250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0906, cls: 0.0402, iou: 0.0905), misc (ry: 0.17, z: 0.36), dt: 0.70, eta: 2.3h
[INFO]: 2024-04-08 18:20:35,185 iter: 38500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0844, cls: 0.0382, iou: 0.0879), misc (ry: 0.17, z: 0.35), dt: 0.70, eta: 2.2h
[INFO]: 2024-04-08 18:23:05,520 iter: 38750, acc (bg: 1.00, fg: 0.98, iou: 0.91), loss (bbox_3d: 0.0859, cls: 0.0408, iou: 0.0919), misc (ry: 0.17, z: 0.36), dt: 0.70, eta: 2.2h
[INFO]: 2024-04-08 18:25:45,597 iter: 39000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0842, cls: 0.0412, iou: 0.0897), misc (ry: 0.16, z: 0.34), dt: 0.70, eta: 2.1h
[INFO]: 2024-04-08 18:28:17,433 iter: 39250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0867, cls: 0.0387, iou: 0.0866), misc (ry: 0.18, z: 0.34), dt: 0.70, eta: 2.1h
[INFO]: 2024-04-08 18:30:52,162 iter: 39500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0918, cls: 0.0370, iou: 0.0904), misc (ry: 0.19, z: 0.35), dt: 0.70, eta: 2.0h
[INFO]: 2024-04-08 18:33:32,357 iter: 39750, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0877, cls: 0.0418, iou: 0.0899), misc (ry: 0.16, z: 0.33), dt: 0.70, eta: 2.0h
[INFO]: 2024-04-08 18:36:12,425 iter: 40000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0802, cls: 0.0398, iou: 0.0865), misc (ry: 0.15, z: 0.32), dt: 0.70, eta: 1.9h
[INFO]: 2024-04-08 18:46:25,481 test_iter 40000 2d car --> easy: 0.8846, mod: 0.8110, hard: 0.6669
[INFO]: 2024-04-08 18:46:25,482 test_iter 40000 gr car --> easy: 0.2367, mod: 0.1791, hard: 0.1604
[INFO]: 2024-04-08 18:46:25,483 test_iter 40000 3d car --> easy: 0.1798, mod: 0.1467, hard: 0.1256
[INFO]: 2024-04-08 18:46:25,483 test_iter 40000 2d pedestrian --> easy: 0.7298, mod: 0.5926, hard: 0.5079
[INFO]: 2024-04-08 18:46:25,484 test_iter 40000 gr pedestrian --> easy: 0.0499, mod: 0.0501, hard: 0.0456
[INFO]: 2024-04-08 18:46:25,484 test_iter 40000 3d pedestrian --> easy: 0.0472, mod: 0.0454, hard: 0.0400
[INFO]: 2024-04-08 18:46:25,484 test_iter 40000 2d cyclist --> easy: 0.5459, mod: 0.3903, hard: 0.3272
[INFO]: 2024-04-08 18:46:25,485 test_iter 40000 gr cyclist --> easy: 0.0384, mod: 0.0299, hard: 0.0224
[INFO]: 2024-04-08 18:46:25,485 test_iter 40000 3d cyclist --> easy: 0.0355, mod: 0.0187, hard: 0.0198
[INFO]: 2024-04-08 18:49:07,925 iter: 40250, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0866, cls: 0.0412, iou: 0.0884), misc (ry: 0.16, z: 0.33), dt: 0.71, eta: 1.9h
[INFO]: 2024-04-08 18:51:42,284 iter: 40500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0857, cls: 0.0403, iou: 0.0887), misc (ry: 0.16, z: 0.34), dt: 0.71, eta: 1.9h
[INFO]: 2024-04-08 18:54:11,945 iter: 40750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0763, cls: 0.0370, iou: 0.0844), misc (ry: 0.15, z: 0.31), dt: 0.71, eta: 1.8h
[INFO]: 2024-04-08 18:56:52,103 iter: 41000, acc (bg: 1.00, fg: 0.98, iou: 0.92), loss (bbox_3d: 0.0798, cls: 0.0408, iou: 0.0865), misc (ry: 0.16, z: 0.33), dt: 0.71, eta: 1.8h
[INFO]: 2024-04-08 18:59:36,037 iter: 41250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0732, cls: 0.0386, iou: 0.0837), misc (ry: 0.15, z: 0.33), dt: 0.71, eta: 1.7h
[INFO]: 2024-04-08 19:02:14,107 iter: 41500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0793, cls: 0.0398, iou: 0.0851), misc (ry: 0.15, z: 0.34), dt: 0.71, eta: 1.7h
[INFO]: 2024-04-08 19:04:51,900 iter: 41750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0831, cls: 0.0386, iou: 0.0870), misc (ry: 0.16, z: 0.34), dt: 0.71, eta: 1.6h
[INFO]: 2024-04-08 19:07:26,103 iter: 42000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0753, cls: 0.0386, iou: 0.0824), misc (ry: 0.15, z: 0.32), dt: 0.71, eta: 1.6h
[INFO]: 2024-04-08 19:09:57,672 iter: 42250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0716, cls: 0.0353, iou: 0.0799), misc (ry: 0.14, z: 0.33), dt: 0.71, eta: 1.5h
[INFO]: 2024-04-08 19:12:28,384 iter: 42500, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0714, cls: 0.0360, iou: 0.0813), misc (ry: 0.14, z: 0.31), dt: 0.71, eta: 1.5h
[INFO]: 2024-04-08 19:15:01,493 iter: 42750, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0761, cls: 0.0370, iou: 0.0833), misc (ry: 0.15, z: 0.34), dt: 0.71, eta: 1.4h
[INFO]: 2024-04-08 19:17:39,877 iter: 43000, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0717, cls: 0.0381, iou: 0.0830), misc (ry: 0.14, z: 0.31), dt: 0.71, eta: 1.4h
[INFO]: 2024-04-08 19:20:15,859 iter: 43250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0662, cls: 0.0373, iou: 0.0789), misc (ry: 0.15, z: 0.30), dt: 0.71, eta: 1.3h
[INFO]: 2024-04-08 19:22:49,732 iter: 43500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0710, cls: 0.0377, iou: 0.0788), misc (ry: 0.14, z: 0.31), dt: 0.71, eta: 1.3h
[INFO]: 2024-04-08 19:25:21,895 iter: 43750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0677, cls: 0.0364, iou: 0.0783), misc (ry: 0.15, z: 0.30), dt: 0.71, eta: 1.2h
[INFO]: 2024-04-08 19:27:53,615 iter: 44000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0665, cls: 0.0360, iou: 0.0792), misc (ry: 0.14, z: 0.32), dt: 0.71, eta: 1.2h
[INFO]: 2024-04-08 19:30:23,587 iter: 44250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0702, cls: 0.0375, iou: 0.0790), misc (ry: 0.15, z: 0.30), dt: 0.71, eta: 1.1h
[INFO]: 2024-04-08 19:32:55,840 iter: 44500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0659, cls: 0.0340, iou: 0.0765), misc (ry: 0.14, z: 0.31), dt: 0.71, eta: 1.1h
[INFO]: 2024-04-08 19:35:25,538 iter: 44750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0611, cls: 0.0344, iou: 0.0771), misc (ry: 0.14, z: 0.31), dt: 0.70, eta: 1.0h
[INFO]: 2024-04-08 19:37:55,687 iter: 45000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0700, cls: 0.0372, iou: 0.0796), misc (ry: 0.15, z: 0.32), dt: 0.70, eta: 58.7m
[INFO]: 2024-04-08 19:40:27,032 iter: 45250, acc (bg: 1.00, fg: 0.99, iou: 0.92), loss (bbox_3d: 0.0719, cls: 0.0378, iou: 0.0819), misc (ry: 0.15, z: 0.31), dt: 0.70, eta: 55.7m
[INFO]: 2024-04-08 19:42:56,351 iter: 45500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0653, cls: 0.0359, iou: 0.0762), misc (ry: 0.14, z: 0.29), dt: 0.70, eta: 52.7m
[INFO]: 2024-04-08 19:45:29,135 iter: 45750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0618, cls: 0.0346, iou: 0.0751), misc (ry: 0.15, z: 0.27), dt: 0.70, eta: 49.8m
[INFO]: 2024-04-08 19:48:06,576 iter: 46000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0577, cls: 0.0345, iou: 0.0721), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 46.8m
[INFO]: 2024-04-08 19:50:41,998 iter: 46250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0574, cls: 0.0347, iou: 0.0738), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 43.9m
[INFO]: 2024-04-08 19:53:21,085 iter: 46500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0619, cls: 0.0365, iou: 0.0746), misc (ry: 0.14, z: 0.28), dt: 0.70, eta: 40.9m
[INFO]: 2024-04-08 19:55:53,624 iter: 46750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0659, cls: 0.0368, iou: 0.0770), misc (ry: 0.14, z: 0.29), dt: 0.70, eta: 38.0m
[INFO]: 2024-04-08 19:58:26,774 iter: 47000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0616, cls: 0.0358, iou: 0.0747), misc (ry: 0.13, z: 0.29), dt: 0.70, eta: 35.0m
[INFO]: 2024-04-08 20:00:56,563 iter: 47250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0574, cls: 0.0353, iou: 0.0715), misc (ry: 0.13, z: 0.27), dt: 0.70, eta: 32.1m
[INFO]: 2024-04-08 20:03:34,713 iter: 47500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0589, cls: 0.0355, iou: 0.0730), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 29.2m
[INFO]: 2024-04-08 20:06:10,461 iter: 47750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0539, cls: 0.0331, iou: 0.0689), misc (ry: 0.13, z: 0.27), dt: 0.70, eta: 26.2m
[INFO]: 2024-04-08 20:08:45,362 iter: 48000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0594, cls: 0.0340, iou: 0.0708), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 23.3m
[INFO]: 2024-04-08 20:11:17,948 iter: 48250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0594, cls: 0.0369, iou: 0.0713), misc (ry: 0.14, z: 0.27), dt: 0.70, eta: 20.4m
[INFO]: 2024-04-08 20:13:53,838 iter: 48500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0613, cls: 0.0363, iou: 0.0725), misc (ry: 0.14, z: 0.27), dt: 0.70, eta: 17.5m
[INFO]: 2024-04-08 20:16:26,421 iter: 48750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0602, cls: 0.0368, iou: 0.0719), misc (ry: 0.13, z: 0.29), dt: 0.70, eta: 14.5m
[INFO]: 2024-04-08 20:18:57,034 iter: 49000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0635, cls: 0.0368, iou: 0.0738), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 11.6m
[INFO]: 2024-04-08 20:21:33,718 iter: 49250, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0600, cls: 0.0350, iou: 0.0727), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 8.7m
[INFO]: 2024-04-08 20:24:11,109 iter: 49500, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0586, cls: 0.0353, iou: 0.0708), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 5.8m
[INFO]: 2024-04-08 20:26:49,878 iter: 49750, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0589, cls: 0.0354, iou: 0.0708), misc (ry: 0.13, z: 0.28), dt: 0.70, eta: 2.9m
[INFO]: 2024-04-08 20:29:22,250 iter: 50000, acc (bg: 1.00, fg: 0.99, iou: 0.93), loss (bbox_3d: 0.0557, cls: 0.0339, iou: 0.0692), misc (ry: 0.13, z: 0.27), dt: 0.70, eta: 0.7s
[INFO]: 2024-04-08 20:39:32,955 test_iter 50000 2d car --> easy: 0.8759, mod: 0.8167, hard: 0.6670
[INFO]: 2024-04-08 20:39:32,956 test_iter 50000 gr car --> easy: 0.2225, mod: 0.1808, hard: 0.1469
[INFO]: 2024-04-08 20:39:32,957 test_iter 50000 3d car --> easy: 0.1549, mod: 0.1279, hard: 0.0982
[INFO]: 2024-04-08 20:39:32,958 test_iter 50000 2d pedestrian --> easy: 0.6721, mod: 0.5892, hard: 0.5053
[INFO]: 2024-04-08 20:39:32,958 test_iter 50000 gr pedestrian --> easy: 0.1147, mod: 0.1120, hard: 0.1095
[INFO]: 2024-04-08 20:39:32,959 test_iter 50000 3d pedestrian --> easy: 0.1110, mod: 0.1097, hard: 0.1022
[INFO]: 2024-04-08 20:39:32,959 test_iter 50000 2d cyclist --> easy: 0.5687, mod: 0.3997, hard: 0.3348
[INFO]: 2024-04-08 20:39:32,960 test_iter 50000 gr cyclist --> easy: 0.0216, mod: 0.0117, hard: 0.0103
[INFO]: 2024-04-08 20:39:32,961 test_iter 50000 3d cyclist --> easy: 0.0180, mod: 0.0094, hard: 0.0100
